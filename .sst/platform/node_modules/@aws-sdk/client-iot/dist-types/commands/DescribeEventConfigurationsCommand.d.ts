import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { DescribeEventConfigurationsRequest, DescribeEventConfigurationsResponse } from "../models/models_1";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DescribeEventConfigurationsCommand}.
 */
export interface DescribeEventConfigurationsCommandInput extends DescribeEventConfigurationsRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeEventConfigurationsCommand}.
 */
export interface DescribeEventConfigurationsCommandOutput extends DescribeEventConfigurationsResponse, __MetadataBearer {
}
declare const DescribeEventConfigurationsCommand_base: {
    new (input: DescribeEventConfigurationsCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeEventConfigurationsCommandInput, DescribeEventConfigurationsCommandOutput, IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>Describes event configurations.</p>
 *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">DescribeEventConfigurations</a> action.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { IoTClient, DescribeEventConfigurationsCommand } from "@aws-sdk/client-iot"; // ES Modules import
 * // const { IoTClient, DescribeEventConfigurationsCommand } = require("@aws-sdk/client-iot"); // CommonJS import
 * const client = new IoTClient(config);
 * const input = {};
 * const command = new DescribeEventConfigurationsCommand(input);
 * const response = await client.send(command);
 * // { // DescribeEventConfigurationsResponse
 * //   eventConfigurations: { // EventConfigurations
 * //     "<keys>": { // Configuration
 * //       Enabled: true || false,
 * //     },
 * //   },
 * //   creationDate: new Date("TIMESTAMP"),
 * //   lastModifiedDate: new Date("TIMESTAMP"),
 * // };
 *
 * ```
 *
 * @param DescribeEventConfigurationsCommandInput - {@link DescribeEventConfigurationsCommandInput}
 * @returns {@link DescribeEventConfigurationsCommandOutput}
 * @see {@link DescribeEventConfigurationsCommandInput} for command's `input` shape.
 * @see {@link DescribeEventConfigurationsCommandOutput} for command's `response` shape.
 * @see {@link IoTClientResolvedConfig | config} for IoTClient's `config` shape.
 *
 * @throws {@link InternalFailureException} (server fault)
 *  <p>An unexpected error has occurred.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>The rate exceeds the limit.</p>
 *
 * @throws {@link IoTServiceException}
 * <p>Base exception class for all service exceptions from IoT service.</p>
 *
 */
export declare class DescribeEventConfigurationsCommand extends DescribeEventConfigurationsCommand_base {
}
