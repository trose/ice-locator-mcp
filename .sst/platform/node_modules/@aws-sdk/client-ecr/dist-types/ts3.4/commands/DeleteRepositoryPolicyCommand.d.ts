import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ECRClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ECRClient";
import {
  DeleteRepositoryPolicyRequest,
  DeleteRepositoryPolicyResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DeleteRepositoryPolicyCommandInput
  extends DeleteRepositoryPolicyRequest {}
export interface DeleteRepositoryPolicyCommandOutput
  extends DeleteRepositoryPolicyResponse,
    __MetadataBearer {}
export declare class DeleteRepositoryPolicyCommand extends $Command<
  DeleteRepositoryPolicyCommandInput,
  DeleteRepositoryPolicyCommandOutput,
  ECRClientResolvedConfig
> {
  readonly input: DeleteRepositoryPolicyCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DeleteRepositoryPolicyCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ECRClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DeleteRepositoryPolicyCommandInput,
    DeleteRepositoryPolicyCommandOutput
  >;
  private serialize;
  private deserialize;
}
