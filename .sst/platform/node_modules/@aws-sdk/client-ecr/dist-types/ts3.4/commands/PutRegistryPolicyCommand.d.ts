import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ECRClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ECRClient";
import {
  PutRegistryPolicyRequest,
  PutRegistryPolicyResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface PutRegistryPolicyCommandInput
  extends PutRegistryPolicyRequest {}
export interface PutRegistryPolicyCommandOutput
  extends PutRegistryPolicyResponse,
    __MetadataBearer {}
export declare class PutRegistryPolicyCommand extends $Command<
  PutRegistryPolicyCommandInput,
  PutRegistryPolicyCommandOutput,
  ECRClientResolvedConfig
> {
  readonly input: PutRegistryPolicyCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: PutRegistryPolicyCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ECRClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<PutRegistryPolicyCommandInput, PutRegistryPolicyCommandOutput>;
  private serialize;
  private deserialize;
}
