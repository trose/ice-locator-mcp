import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CloudWatchLogsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CloudWatchLogsClient";
import {
  CreateLogAnomalyDetectorRequest,
  CreateLogAnomalyDetectorResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateLogAnomalyDetectorCommandInput
  extends CreateLogAnomalyDetectorRequest {}
export interface CreateLogAnomalyDetectorCommandOutput
  extends CreateLogAnomalyDetectorResponse,
    __MetadataBearer {}
export declare class CreateLogAnomalyDetectorCommand extends $Command<
  CreateLogAnomalyDetectorCommandInput,
  CreateLogAnomalyDetectorCommandOutput,
  CloudWatchLogsClientResolvedConfig
> {
  readonly input: CreateLogAnomalyDetectorCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateLogAnomalyDetectorCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CloudWatchLogsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateLogAnomalyDetectorCommandInput,
    CreateLogAnomalyDetectorCommandOutput
  >;
  private serialize;
  private deserialize;
}
