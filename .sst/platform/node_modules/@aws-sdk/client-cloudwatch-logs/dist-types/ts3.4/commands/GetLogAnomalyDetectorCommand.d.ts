import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CloudWatchLogsClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CloudWatchLogsClient";
import {
  GetLogAnomalyDetectorRequest,
  GetLogAnomalyDetectorResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetLogAnomalyDetectorCommandInput
  extends GetLogAnomalyDetectorRequest {}
export interface GetLogAnomalyDetectorCommandOutput
  extends GetLogAnomalyDetectorResponse,
    __MetadataBearer {}
export declare class GetLogAnomalyDetectorCommand extends $Command<
  GetLogAnomalyDetectorCommandInput,
  GetLogAnomalyDetectorCommandOutput,
  CloudWatchLogsClientResolvedConfig
> {
  readonly input: GetLogAnomalyDetectorCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetLogAnomalyDetectorCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CloudWatchLogsClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetLogAnomalyDetectorCommandInput,
    GetLogAnomalyDetectorCommandOutput
  >;
  private serialize;
  private deserialize;
}
