import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { Route53ServiceException as __BaseException } from "./Route53ServiceException";
export declare const AccountLimitType: {
  readonly MAX_HEALTH_CHECKS_BY_OWNER: "MAX_HEALTH_CHECKS_BY_OWNER";
  readonly MAX_HOSTED_ZONES_BY_OWNER: "MAX_HOSTED_ZONES_BY_OWNER";
  readonly MAX_REUSABLE_DELEGATION_SETS_BY_OWNER: "MAX_REUSABLE_DELEGATION_SETS_BY_OWNER";
  readonly MAX_TRAFFIC_POLICIES_BY_OWNER: "MAX_TRAFFIC_POLICIES_BY_OWNER";
  readonly MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER: "MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER";
};
export type AccountLimitType =
  (typeof AccountLimitType)[keyof typeof AccountLimitType];
export interface AccountLimit {
  Type: AccountLimitType | undefined;
  Value: number | undefined;
}
export interface ActivateKeySigningKeyRequest {
  HostedZoneId: string | undefined;
  Name: string | undefined;
}
export declare const ChangeStatus: {
  readonly INSYNC: "INSYNC";
  readonly PENDING: "PENDING";
};
export type ChangeStatus = (typeof ChangeStatus)[keyof typeof ChangeStatus];
export interface ChangeInfo {
  Id: string | undefined;
  Status: ChangeStatus | undefined;
  SubmittedAt: Date | undefined;
  Comment?: string;
}
export interface ActivateKeySigningKeyResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class ConcurrentModification extends __BaseException {
  readonly name: "ConcurrentModification";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ConcurrentModification, __BaseException>
  );
}
export declare class InvalidInput extends __BaseException {
  readonly name: "InvalidInput";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidInput, __BaseException>);
}
export declare class InvalidKeySigningKeyStatus extends __BaseException {
  readonly name: "InvalidKeySigningKeyStatus";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidKeySigningKeyStatus, __BaseException>
  );
}
export declare class InvalidKMSArn extends __BaseException {
  readonly name: "InvalidKMSArn";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidKMSArn, __BaseException>);
}
export declare class InvalidSigningStatus extends __BaseException {
  readonly name: "InvalidSigningStatus";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidSigningStatus, __BaseException>
  );
}
export declare class NoSuchKeySigningKey extends __BaseException {
  readonly name: "NoSuchKeySigningKey";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchKeySigningKey, __BaseException>
  );
}
export declare const CloudWatchRegion: {
  readonly af_south_1: "af-south-1";
  readonly ap_east_1: "ap-east-1";
  readonly ap_northeast_1: "ap-northeast-1";
  readonly ap_northeast_2: "ap-northeast-2";
  readonly ap_northeast_3: "ap-northeast-3";
  readonly ap_south_1: "ap-south-1";
  readonly ap_south_2: "ap-south-2";
  readonly ap_southeast_1: "ap-southeast-1";
  readonly ap_southeast_2: "ap-southeast-2";
  readonly ap_southeast_3: "ap-southeast-3";
  readonly ap_southeast_4: "ap-southeast-4";
  readonly ca_central_1: "ca-central-1";
  readonly ca_west_1: "ca-west-1";
  readonly cn_north_1: "cn-north-1";
  readonly cn_northwest_1: "cn-northwest-1";
  readonly eu_central_1: "eu-central-1";
  readonly eu_central_2: "eu-central-2";
  readonly eu_north_1: "eu-north-1";
  readonly eu_south_1: "eu-south-1";
  readonly eu_south_2: "eu-south-2";
  readonly eu_west_1: "eu-west-1";
  readonly eu_west_2: "eu-west-2";
  readonly eu_west_3: "eu-west-3";
  readonly il_central_1: "il-central-1";
  readonly me_central_1: "me-central-1";
  readonly me_south_1: "me-south-1";
  readonly sa_east_1: "sa-east-1";
  readonly us_east_1: "us-east-1";
  readonly us_east_2: "us-east-2";
  readonly us_gov_east_1: "us-gov-east-1";
  readonly us_gov_west_1: "us-gov-west-1";
  readonly us_iso_east_1: "us-iso-east-1";
  readonly us_iso_west_1: "us-iso-west-1";
  readonly us_isob_east_1: "us-isob-east-1";
  readonly us_west_1: "us-west-1";
  readonly us_west_2: "us-west-2";
};
export type CloudWatchRegion =
  (typeof CloudWatchRegion)[keyof typeof CloudWatchRegion];
export interface AlarmIdentifier {
  Region: CloudWatchRegion | undefined;
  Name: string | undefined;
}
export interface AliasTarget {
  HostedZoneId: string | undefined;
  DNSName: string | undefined;
  EvaluateTargetHealth: boolean | undefined;
}
export declare const VPCRegion: {
  readonly af_south_1: "af-south-1";
  readonly ap_east_1: "ap-east-1";
  readonly ap_northeast_1: "ap-northeast-1";
  readonly ap_northeast_2: "ap-northeast-2";
  readonly ap_northeast_3: "ap-northeast-3";
  readonly ap_south_1: "ap-south-1";
  readonly ap_south_2: "ap-south-2";
  readonly ap_southeast_1: "ap-southeast-1";
  readonly ap_southeast_2: "ap-southeast-2";
  readonly ap_southeast_3: "ap-southeast-3";
  readonly ap_southeast_4: "ap-southeast-4";
  readonly ca_central_1: "ca-central-1";
  readonly ca_west_1: "ca-west-1";
  readonly cn_north_1: "cn-north-1";
  readonly eu_central_1: "eu-central-1";
  readonly eu_central_2: "eu-central-2";
  readonly eu_north_1: "eu-north-1";
  readonly eu_south_1: "eu-south-1";
  readonly eu_south_2: "eu-south-2";
  readonly eu_west_1: "eu-west-1";
  readonly eu_west_2: "eu-west-2";
  readonly eu_west_3: "eu-west-3";
  readonly il_central_1: "il-central-1";
  readonly me_central_1: "me-central-1";
  readonly me_south_1: "me-south-1";
  readonly sa_east_1: "sa-east-1";
  readonly us_east_1: "us-east-1";
  readonly us_east_2: "us-east-2";
  readonly us_gov_east_1: "us-gov-east-1";
  readonly us_gov_west_1: "us-gov-west-1";
  readonly us_iso_east_1: "us-iso-east-1";
  readonly us_iso_west_1: "us-iso-west-1";
  readonly us_isob_east_1: "us-isob-east-1";
  readonly us_west_1: "us-west-1";
  readonly us_west_2: "us-west-2";
};
export type VPCRegion = (typeof VPCRegion)[keyof typeof VPCRegion];
export interface VPC {
  VPCRegion?: VPCRegion;
  VPCId?: string;
}
export interface AssociateVPCWithHostedZoneRequest {
  HostedZoneId: string | undefined;
  VPC: VPC | undefined;
  Comment?: string;
}
export interface AssociateVPCWithHostedZoneResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class ConflictingDomainExists extends __BaseException {
  readonly name: "ConflictingDomainExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ConflictingDomainExists, __BaseException>
  );
}
export declare class InvalidVPCId extends __BaseException {
  readonly name: "InvalidVPCId";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidVPCId, __BaseException>);
}
export declare class LimitsExceeded extends __BaseException {
  readonly name: "LimitsExceeded";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<LimitsExceeded, __BaseException>);
}
export declare class NoSuchHostedZone extends __BaseException {
  readonly name: "NoSuchHostedZone";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NoSuchHostedZone, __BaseException>);
}
export declare class NotAuthorizedException extends __BaseException {
  readonly name: "NotAuthorizedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NotAuthorizedException, __BaseException>
  );
}
export declare class PriorRequestNotComplete extends __BaseException {
  readonly name: "PriorRequestNotComplete";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<PriorRequestNotComplete, __BaseException>
  );
}
export declare class PublicZoneVPCAssociation extends __BaseException {
  readonly name: "PublicZoneVPCAssociation";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<PublicZoneVPCAssociation, __BaseException>
  );
}
export declare const CidrCollectionChangeAction: {
  readonly DELETE_IF_EXISTS: "DELETE_IF_EXISTS";
  readonly PUT: "PUT";
};
export type CidrCollectionChangeAction =
  (typeof CidrCollectionChangeAction)[keyof typeof CidrCollectionChangeAction];
export interface CidrCollectionChange {
  LocationName: string | undefined;
  Action: CidrCollectionChangeAction | undefined;
  CidrList: string[] | undefined;
}
export interface ChangeCidrCollectionRequest {
  Id: string | undefined;
  CollectionVersion?: number;
  Changes: CidrCollectionChange[] | undefined;
}
export interface ChangeCidrCollectionResponse {
  Id: string | undefined;
}
export declare class CidrBlockInUseException extends __BaseException {
  readonly name: "CidrBlockInUseException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<CidrBlockInUseException, __BaseException>
  );
}
export declare class CidrCollectionVersionMismatchException extends __BaseException {
  readonly name: "CidrCollectionVersionMismatchException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      CidrCollectionVersionMismatchException,
      __BaseException
    >
  );
}
export declare class NoSuchCidrCollectionException extends __BaseException {
  readonly name: "NoSuchCidrCollectionException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<NoSuchCidrCollectionException, __BaseException>
  );
}
export declare const ChangeAction: {
  readonly CREATE: "CREATE";
  readonly DELETE: "DELETE";
  readonly UPSERT: "UPSERT";
};
export type ChangeAction = (typeof ChangeAction)[keyof typeof ChangeAction];
export interface CidrRoutingConfig {
  CollectionId: string | undefined;
  LocationName: string | undefined;
}
export declare const ResourceRecordSetFailover: {
  readonly PRIMARY: "PRIMARY";
  readonly SECONDARY: "SECONDARY";
};
export type ResourceRecordSetFailover =
  (typeof ResourceRecordSetFailover)[keyof typeof ResourceRecordSetFailover];
export interface GeoLocation {
  ContinentCode?: string;
  CountryCode?: string;
  SubdivisionCode?: string;
}
export declare const ResourceRecordSetRegion: {
  readonly af_south_1: "af-south-1";
  readonly ap_east_1: "ap-east-1";
  readonly ap_northeast_1: "ap-northeast-1";
  readonly ap_northeast_2: "ap-northeast-2";
  readonly ap_northeast_3: "ap-northeast-3";
  readonly ap_south_1: "ap-south-1";
  readonly ap_south_2: "ap-south-2";
  readonly ap_southeast_1: "ap-southeast-1";
  readonly ap_southeast_2: "ap-southeast-2";
  readonly ap_southeast_3: "ap-southeast-3";
  readonly ap_southeast_4: "ap-southeast-4";
  readonly ca_central_1: "ca-central-1";
  readonly ca_west_1: "ca-west-1";
  readonly cn_north_1: "cn-north-1";
  readonly cn_northwest_1: "cn-northwest-1";
  readonly eu_central_1: "eu-central-1";
  readonly eu_central_2: "eu-central-2";
  readonly eu_north_1: "eu-north-1";
  readonly eu_south_1: "eu-south-1";
  readonly eu_south_2: "eu-south-2";
  readonly eu_west_1: "eu-west-1";
  readonly eu_west_2: "eu-west-2";
  readonly eu_west_3: "eu-west-3";
  readonly il_central_1: "il-central-1";
  readonly me_central_1: "me-central-1";
  readonly me_south_1: "me-south-1";
  readonly sa_east_1: "sa-east-1";
  readonly us_east_1: "us-east-1";
  readonly us_east_2: "us-east-2";
  readonly us_west_1: "us-west-1";
  readonly us_west_2: "us-west-2";
};
export type ResourceRecordSetRegion =
  (typeof ResourceRecordSetRegion)[keyof typeof ResourceRecordSetRegion];
export interface ResourceRecord {
  Value: string | undefined;
}
export declare const RRType: {
  readonly A: "A";
  readonly AAAA: "AAAA";
  readonly CAA: "CAA";
  readonly CNAME: "CNAME";
  readonly DS: "DS";
  readonly MX: "MX";
  readonly NAPTR: "NAPTR";
  readonly NS: "NS";
  readonly PTR: "PTR";
  readonly SOA: "SOA";
  readonly SPF: "SPF";
  readonly SRV: "SRV";
  readonly TXT: "TXT";
};
export type RRType = (typeof RRType)[keyof typeof RRType];
export interface ResourceRecordSet {
  Name: string | undefined;
  Type: RRType | undefined;
  SetIdentifier?: string;
  Weight?: number;
  Region?: ResourceRecordSetRegion;
  GeoLocation?: GeoLocation;
  Failover?: ResourceRecordSetFailover;
  MultiValueAnswer?: boolean;
  TTL?: number;
  ResourceRecords?: ResourceRecord[];
  AliasTarget?: AliasTarget;
  HealthCheckId?: string;
  TrafficPolicyInstanceId?: string;
  CidrRoutingConfig?: CidrRoutingConfig;
}
export interface Change {
  Action: ChangeAction | undefined;
  ResourceRecordSet: ResourceRecordSet | undefined;
}
export interface ChangeBatch {
  Comment?: string;
  Changes: Change[] | undefined;
}
export interface ChangeResourceRecordSetsRequest {
  HostedZoneId: string | undefined;
  ChangeBatch: ChangeBatch | undefined;
}
export interface ChangeResourceRecordSetsResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class InvalidChangeBatch extends __BaseException {
  readonly name: "InvalidChangeBatch";
  readonly $fault: "client";
  messages?: string[];
  constructor(opts: __ExceptionOptionType<InvalidChangeBatch, __BaseException>);
}
export declare class NoSuchHealthCheck extends __BaseException {
  readonly name: "NoSuchHealthCheck";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NoSuchHealthCheck, __BaseException>);
}
export interface Tag {
  Key?: string;
  Value?: string;
}
export declare const TagResourceType: {
  readonly healthcheck: "healthcheck";
  readonly hostedzone: "hostedzone";
};
export type TagResourceType =
  (typeof TagResourceType)[keyof typeof TagResourceType];
export interface ChangeTagsForResourceRequest {
  ResourceType: TagResourceType | undefined;
  ResourceId: string | undefined;
  AddTags?: Tag[];
  RemoveTagKeys?: string[];
}
export interface ChangeTagsForResourceResponse {}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class CidrCollectionAlreadyExistsException extends __BaseException {
  readonly name: "CidrCollectionAlreadyExistsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      CidrCollectionAlreadyExistsException,
      __BaseException
    >
  );
}
export interface CreateCidrCollectionRequest {
  Name: string | undefined;
  CallerReference: string | undefined;
}
export interface CidrCollection {
  Arn?: string;
  Id?: string;
  Name?: string;
  Version?: number;
}
export interface CreateCidrCollectionResponse {
  Collection?: CidrCollection;
  Location?: string;
}
export declare const InsufficientDataHealthStatus: {
  readonly Healthy: "Healthy";
  readonly LastKnownStatus: "LastKnownStatus";
  readonly Unhealthy: "Unhealthy";
};
export type InsufficientDataHealthStatus =
  (typeof InsufficientDataHealthStatus)[keyof typeof InsufficientDataHealthStatus];
export declare const HealthCheckRegion: {
  readonly ap_northeast_1: "ap-northeast-1";
  readonly ap_southeast_1: "ap-southeast-1";
  readonly ap_southeast_2: "ap-southeast-2";
  readonly eu_west_1: "eu-west-1";
  readonly sa_east_1: "sa-east-1";
  readonly us_east_1: "us-east-1";
  readonly us_west_1: "us-west-1";
  readonly us_west_2: "us-west-2";
};
export type HealthCheckRegion =
  (typeof HealthCheckRegion)[keyof typeof HealthCheckRegion];
export declare const HealthCheckType: {
  readonly CALCULATED: "CALCULATED";
  readonly CLOUDWATCH_METRIC: "CLOUDWATCH_METRIC";
  readonly HTTP: "HTTP";
  readonly HTTPS: "HTTPS";
  readonly HTTPS_STR_MATCH: "HTTPS_STR_MATCH";
  readonly HTTP_STR_MATCH: "HTTP_STR_MATCH";
  readonly RECOVERY_CONTROL: "RECOVERY_CONTROL";
  readonly TCP: "TCP";
};
export type HealthCheckType =
  (typeof HealthCheckType)[keyof typeof HealthCheckType];
export interface HealthCheckConfig {
  IPAddress?: string;
  Port?: number;
  Type: HealthCheckType | undefined;
  ResourcePath?: string;
  FullyQualifiedDomainName?: string;
  SearchString?: string;
  RequestInterval?: number;
  FailureThreshold?: number;
  MeasureLatency?: boolean;
  Inverted?: boolean;
  Disabled?: boolean;
  HealthThreshold?: number;
  ChildHealthChecks?: string[];
  EnableSNI?: boolean;
  Regions?: HealthCheckRegion[];
  AlarmIdentifier?: AlarmIdentifier;
  InsufficientDataHealthStatus?: InsufficientDataHealthStatus;
  RoutingControlArn?: string;
}
export interface CreateHealthCheckRequest {
  CallerReference: string | undefined;
  HealthCheckConfig: HealthCheckConfig | undefined;
}
export declare const ComparisonOperator: {
  readonly GreaterThanOrEqualToThreshold: "GreaterThanOrEqualToThreshold";
  readonly GreaterThanThreshold: "GreaterThanThreshold";
  readonly LessThanOrEqualToThreshold: "LessThanOrEqualToThreshold";
  readonly LessThanThreshold: "LessThanThreshold";
};
export type ComparisonOperator =
  (typeof ComparisonOperator)[keyof typeof ComparisonOperator];
export interface Dimension {
  Name: string | undefined;
  Value: string | undefined;
}
export declare const Statistic: {
  readonly Average: "Average";
  readonly Maximum: "Maximum";
  readonly Minimum: "Minimum";
  readonly SampleCount: "SampleCount";
  readonly Sum: "Sum";
};
export type Statistic = (typeof Statistic)[keyof typeof Statistic];
export interface CloudWatchAlarmConfiguration {
  EvaluationPeriods: number | undefined;
  Threshold: number | undefined;
  ComparisonOperator: ComparisonOperator | undefined;
  Period: number | undefined;
  MetricName: string | undefined;
  Namespace: string | undefined;
  Statistic: Statistic | undefined;
  Dimensions?: Dimension[];
}
export interface LinkedService {
  ServicePrincipal?: string;
  Description?: string;
}
export interface HealthCheck {
  Id: string | undefined;
  CallerReference: string | undefined;
  LinkedService?: LinkedService;
  HealthCheckConfig: HealthCheckConfig | undefined;
  HealthCheckVersion: number | undefined;
  CloudWatchAlarmConfiguration?: CloudWatchAlarmConfiguration;
}
export interface CreateHealthCheckResponse {
  HealthCheck: HealthCheck | undefined;
  Location: string | undefined;
}
export declare class HealthCheckAlreadyExists extends __BaseException {
  readonly name: "HealthCheckAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<HealthCheckAlreadyExists, __BaseException>
  );
}
export declare class TooManyHealthChecks extends __BaseException {
  readonly name: "TooManyHealthChecks";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyHealthChecks, __BaseException>
  );
}
export interface HostedZoneConfig {
  Comment?: string;
  PrivateZone?: boolean;
}
export interface CreateHostedZoneRequest {
  Name: string | undefined;
  VPC?: VPC;
  CallerReference: string | undefined;
  HostedZoneConfig?: HostedZoneConfig;
  DelegationSetId?: string;
}
export interface DelegationSet {
  Id?: string;
  CallerReference?: string;
  NameServers: string[] | undefined;
}
export interface HostedZone {
  Id: string | undefined;
  Name: string | undefined;
  CallerReference: string | undefined;
  Config?: HostedZoneConfig;
  ResourceRecordSetCount?: number;
  LinkedService?: LinkedService;
}
export interface CreateHostedZoneResponse {
  HostedZone: HostedZone | undefined;
  ChangeInfo: ChangeInfo | undefined;
  DelegationSet: DelegationSet | undefined;
  VPC?: VPC;
  Location: string | undefined;
}
export declare class DelegationSetNotAvailable extends __BaseException {
  readonly name: "DelegationSetNotAvailable";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DelegationSetNotAvailable, __BaseException>
  );
}
export declare class DelegationSetNotReusable extends __BaseException {
  readonly name: "DelegationSetNotReusable";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DelegationSetNotReusable, __BaseException>
  );
}
export declare class HostedZoneAlreadyExists extends __BaseException {
  readonly name: "HostedZoneAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<HostedZoneAlreadyExists, __BaseException>
  );
}
export declare class InvalidDomainName extends __BaseException {
  readonly name: "InvalidDomainName";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidDomainName, __BaseException>);
}
export declare class NoSuchDelegationSet extends __BaseException {
  readonly name: "NoSuchDelegationSet";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchDelegationSet, __BaseException>
  );
}
export declare class TooManyHostedZones extends __BaseException {
  readonly name: "TooManyHostedZones";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<TooManyHostedZones, __BaseException>);
}
export interface CreateKeySigningKeyRequest {
  CallerReference: string | undefined;
  HostedZoneId: string | undefined;
  KeyManagementServiceArn: string | undefined;
  Name: string | undefined;
  Status: string | undefined;
}
export interface KeySigningKey {
  Name?: string;
  KmsArn?: string;
  Flag?: number;
  SigningAlgorithmMnemonic?: string;
  SigningAlgorithmType?: number;
  DigestAlgorithmMnemonic?: string;
  DigestAlgorithmType?: number;
  KeyTag?: number;
  DigestValue?: string;
  PublicKey?: string;
  DSRecord?: string;
  DNSKEYRecord?: string;
  Status?: string;
  StatusMessage?: string;
  CreatedDate?: Date;
  LastModifiedDate?: Date;
}
export interface CreateKeySigningKeyResponse {
  ChangeInfo: ChangeInfo | undefined;
  KeySigningKey: KeySigningKey | undefined;
  Location: string | undefined;
}
export declare class InvalidArgument extends __BaseException {
  readonly name: "InvalidArgument";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidArgument, __BaseException>);
}
export declare class InvalidKeySigningKeyName extends __BaseException {
  readonly name: "InvalidKeySigningKeyName";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidKeySigningKeyName, __BaseException>
  );
}
export declare class KeySigningKeyAlreadyExists extends __BaseException {
  readonly name: "KeySigningKeyAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<KeySigningKeyAlreadyExists, __BaseException>
  );
}
export declare class TooManyKeySigningKeys extends __BaseException {
  readonly name: "TooManyKeySigningKeys";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyKeySigningKeys, __BaseException>
  );
}
export interface CreateQueryLoggingConfigRequest {
  HostedZoneId: string | undefined;
  CloudWatchLogsLogGroupArn: string | undefined;
}
export interface QueryLoggingConfig {
  Id: string | undefined;
  HostedZoneId: string | undefined;
  CloudWatchLogsLogGroupArn: string | undefined;
}
export interface CreateQueryLoggingConfigResponse {
  QueryLoggingConfig: QueryLoggingConfig | undefined;
  Location: string | undefined;
}
export declare class InsufficientCloudWatchLogsResourcePolicy extends __BaseException {
  readonly name: "InsufficientCloudWatchLogsResourcePolicy";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientCloudWatchLogsResourcePolicy,
      __BaseException
    >
  );
}
export declare class NoSuchCloudWatchLogsLogGroup extends __BaseException {
  readonly name: "NoSuchCloudWatchLogsLogGroup";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchCloudWatchLogsLogGroup, __BaseException>
  );
}
export declare class QueryLoggingConfigAlreadyExists extends __BaseException {
  readonly name: "QueryLoggingConfigAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      QueryLoggingConfigAlreadyExists,
      __BaseException
    >
  );
}
export interface CreateReusableDelegationSetRequest {
  CallerReference: string | undefined;
  HostedZoneId?: string;
}
export interface CreateReusableDelegationSetResponse {
  DelegationSet: DelegationSet | undefined;
  Location: string | undefined;
}
export declare class DelegationSetAlreadyCreated extends __BaseException {
  readonly name: "DelegationSetAlreadyCreated";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DelegationSetAlreadyCreated, __BaseException>
  );
}
export declare class DelegationSetAlreadyReusable extends __BaseException {
  readonly name: "DelegationSetAlreadyReusable";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DelegationSetAlreadyReusable, __BaseException>
  );
}
export declare class HostedZoneNotFound extends __BaseException {
  readonly name: "HostedZoneNotFound";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<HostedZoneNotFound, __BaseException>);
}
export interface CreateTrafficPolicyRequest {
  Name: string | undefined;
  Document: string | undefined;
  Comment?: string;
}
export interface TrafficPolicy {
  Id: string | undefined;
  Version: number | undefined;
  Name: string | undefined;
  Type: RRType | undefined;
  Document: string | undefined;
  Comment?: string;
}
export interface CreateTrafficPolicyResponse {
  TrafficPolicy: TrafficPolicy | undefined;
  Location: string | undefined;
}
export declare class InvalidTrafficPolicyDocument extends __BaseException {
  readonly name: "InvalidTrafficPolicyDocument";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidTrafficPolicyDocument, __BaseException>
  );
}
export declare class TooManyTrafficPolicies extends __BaseException {
  readonly name: "TooManyTrafficPolicies";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyTrafficPolicies, __BaseException>
  );
}
export declare class TrafficPolicyAlreadyExists extends __BaseException {
  readonly name: "TrafficPolicyAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TrafficPolicyAlreadyExists, __BaseException>
  );
}
export interface CreateTrafficPolicyInstanceRequest {
  HostedZoneId: string | undefined;
  Name: string | undefined;
  TTL: number | undefined;
  TrafficPolicyId: string | undefined;
  TrafficPolicyVersion: number | undefined;
}
export interface TrafficPolicyInstance {
  Id: string | undefined;
  HostedZoneId: string | undefined;
  Name: string | undefined;
  TTL: number | undefined;
  State: string | undefined;
  Message: string | undefined;
  TrafficPolicyId: string | undefined;
  TrafficPolicyVersion: number | undefined;
  TrafficPolicyType: RRType | undefined;
}
export interface CreateTrafficPolicyInstanceResponse {
  TrafficPolicyInstance: TrafficPolicyInstance | undefined;
  Location: string | undefined;
}
export declare class NoSuchTrafficPolicy extends __BaseException {
  readonly name: "NoSuchTrafficPolicy";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchTrafficPolicy, __BaseException>
  );
}
export declare class TooManyTrafficPolicyInstances extends __BaseException {
  readonly name: "TooManyTrafficPolicyInstances";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<TooManyTrafficPolicyInstances, __BaseException>
  );
}
export declare class TrafficPolicyInstanceAlreadyExists extends __BaseException {
  readonly name: "TrafficPolicyInstanceAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TrafficPolicyInstanceAlreadyExists,
      __BaseException
    >
  );
}
export interface CreateTrafficPolicyVersionRequest {
  Id: string | undefined;
  Document: string | undefined;
  Comment?: string;
}
export interface CreateTrafficPolicyVersionResponse {
  TrafficPolicy: TrafficPolicy | undefined;
  Location: string | undefined;
}
export declare class TooManyTrafficPolicyVersionsForCurrentPolicy extends __BaseException {
  readonly name: "TooManyTrafficPolicyVersionsForCurrentPolicy";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TooManyTrafficPolicyVersionsForCurrentPolicy,
      __BaseException
    >
  );
}
export interface CreateVPCAssociationAuthorizationRequest {
  HostedZoneId: string | undefined;
  VPC: VPC | undefined;
}
export interface CreateVPCAssociationAuthorizationResponse {
  HostedZoneId: string | undefined;
  VPC: VPC | undefined;
}
export declare class TooManyVPCAssociationAuthorizations extends __BaseException {
  readonly name: "TooManyVPCAssociationAuthorizations";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TooManyVPCAssociationAuthorizations,
      __BaseException
    >
  );
}
export interface DeactivateKeySigningKeyRequest {
  HostedZoneId: string | undefined;
  Name: string | undefined;
}
export interface DeactivateKeySigningKeyResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class KeySigningKeyInParentDSRecord extends __BaseException {
  readonly name: "KeySigningKeyInParentDSRecord";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<KeySigningKeyInParentDSRecord, __BaseException>
  );
}
export declare class KeySigningKeyInUse extends __BaseException {
  readonly name: "KeySigningKeyInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<KeySigningKeyInUse, __BaseException>);
}
export declare class CidrCollectionInUseException extends __BaseException {
  readonly name: "CidrCollectionInUseException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<CidrCollectionInUseException, __BaseException>
  );
}
export interface DeleteCidrCollectionRequest {
  Id: string | undefined;
}
export interface DeleteCidrCollectionResponse {}
export interface DeleteHealthCheckRequest {
  HealthCheckId: string | undefined;
}
export interface DeleteHealthCheckResponse {}
export declare class HealthCheckInUse extends __BaseException {
  readonly name: "HealthCheckInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<HealthCheckInUse, __BaseException>);
}
export interface DeleteHostedZoneRequest {
  Id: string | undefined;
}
export interface DeleteHostedZoneResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class HostedZoneNotEmpty extends __BaseException {
  readonly name: "HostedZoneNotEmpty";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<HostedZoneNotEmpty, __BaseException>);
}
export interface DeleteKeySigningKeyRequest {
  HostedZoneId: string | undefined;
  Name: string | undefined;
}
export interface DeleteKeySigningKeyResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export interface DeleteQueryLoggingConfigRequest {
  Id: string | undefined;
}
export interface DeleteQueryLoggingConfigResponse {}
export declare class NoSuchQueryLoggingConfig extends __BaseException {
  readonly name: "NoSuchQueryLoggingConfig";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchQueryLoggingConfig, __BaseException>
  );
}
export declare class DelegationSetInUse extends __BaseException {
  readonly name: "DelegationSetInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<DelegationSetInUse, __BaseException>);
}
export interface DeleteReusableDelegationSetRequest {
  Id: string | undefined;
}
export interface DeleteReusableDelegationSetResponse {}
export interface DeleteTrafficPolicyRequest {
  Id: string | undefined;
  Version: number | undefined;
}
export interface DeleteTrafficPolicyResponse {}
export declare class TrafficPolicyInUse extends __BaseException {
  readonly name: "TrafficPolicyInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<TrafficPolicyInUse, __BaseException>);
}
export interface DeleteTrafficPolicyInstanceRequest {
  Id: string | undefined;
}
export interface DeleteTrafficPolicyInstanceResponse {}
export declare class NoSuchTrafficPolicyInstance extends __BaseException {
  readonly name: "NoSuchTrafficPolicyInstance";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<NoSuchTrafficPolicyInstance, __BaseException>
  );
}
export interface DeleteVPCAssociationAuthorizationRequest {
  HostedZoneId: string | undefined;
  VPC: VPC | undefined;
}
export interface DeleteVPCAssociationAuthorizationResponse {}
export declare class VPCAssociationAuthorizationNotFound extends __BaseException {
  readonly name: "VPCAssociationAuthorizationNotFound";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      VPCAssociationAuthorizationNotFound,
      __BaseException
    >
  );
}
export interface DisableHostedZoneDNSSECRequest {
  HostedZoneId: string | undefined;
}
export interface DisableHostedZoneDNSSECResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class DNSSECNotFound extends __BaseException {
  readonly name: "DNSSECNotFound";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<DNSSECNotFound, __BaseException>);
}
export interface DisassociateVPCFromHostedZoneRequest {
  HostedZoneId: string | undefined;
  VPC: VPC | undefined;
  Comment?: string;
}
export interface DisassociateVPCFromHostedZoneResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class LastVPCAssociation extends __BaseException {
  readonly name: "LastVPCAssociation";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<LastVPCAssociation, __BaseException>);
}
export declare class VPCAssociationNotFound extends __BaseException {
  readonly name: "VPCAssociationNotFound";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<VPCAssociationNotFound, __BaseException>
  );
}
export interface EnableHostedZoneDNSSECRequest {
  HostedZoneId: string | undefined;
}
export interface EnableHostedZoneDNSSECResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class HostedZonePartiallyDelegated extends __BaseException {
  readonly name: "HostedZonePartiallyDelegated";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<HostedZonePartiallyDelegated, __BaseException>
  );
}
export declare class KeySigningKeyWithActiveStatusNotFound extends __BaseException {
  readonly name: "KeySigningKeyWithActiveStatusNotFound";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      KeySigningKeyWithActiveStatusNotFound,
      __BaseException
    >
  );
}
export interface GetAccountLimitRequest {
  Type: AccountLimitType | undefined;
}
export interface GetAccountLimitResponse {
  Limit: AccountLimit | undefined;
  Count: number | undefined;
}
export interface GetChangeRequest {
  Id: string | undefined;
}
export interface GetChangeResponse {
  ChangeInfo: ChangeInfo | undefined;
}
export declare class NoSuchChange extends __BaseException {
  readonly name: "NoSuchChange";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NoSuchChange, __BaseException>);
}
export interface GetCheckerIpRangesRequest {}
export interface GetCheckerIpRangesResponse {
  CheckerIpRanges: string[] | undefined;
}
export interface GetDNSSECRequest {
  HostedZoneId: string | undefined;
}
export interface DNSSECStatus {
  ServeSignature?: string;
  StatusMessage?: string;
}
export interface GetDNSSECResponse {
  Status: DNSSECStatus | undefined;
  KeySigningKeys: KeySigningKey[] | undefined;
}
export interface GetGeoLocationRequest {
  ContinentCode?: string;
  CountryCode?: string;
  SubdivisionCode?: string;
}
export interface GeoLocationDetails {
  ContinentCode?: string;
  ContinentName?: string;
  CountryCode?: string;
  CountryName?: string;
  SubdivisionCode?: string;
  SubdivisionName?: string;
}
export interface GetGeoLocationResponse {
  GeoLocationDetails: GeoLocationDetails | undefined;
}
export declare class NoSuchGeoLocation extends __BaseException {
  readonly name: "NoSuchGeoLocation";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NoSuchGeoLocation, __BaseException>);
}
export interface GetHealthCheckRequest {
  HealthCheckId: string | undefined;
}
export interface GetHealthCheckResponse {
  HealthCheck: HealthCheck | undefined;
}
export declare class IncompatibleVersion extends __BaseException {
  readonly name: "IncompatibleVersion";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IncompatibleVersion, __BaseException>
  );
}
export interface GetHealthCheckCountRequest {}
export interface GetHealthCheckCountResponse {
  HealthCheckCount: number | undefined;
}
export interface GetHealthCheckLastFailureReasonRequest {
  HealthCheckId: string | undefined;
}
export interface StatusReport {
  Status?: string;
  CheckedTime?: Date;
}
export interface HealthCheckObservation {
  Region?: HealthCheckRegion;
  IPAddress?: string;
  StatusReport?: StatusReport;
}
export interface GetHealthCheckLastFailureReasonResponse {
  HealthCheckObservations: HealthCheckObservation[] | undefined;
}
export interface GetHealthCheckStatusRequest {
  HealthCheckId: string | undefined;
}
export interface GetHealthCheckStatusResponse {
  HealthCheckObservations: HealthCheckObservation[] | undefined;
}
export interface GetHostedZoneRequest {
  Id: string | undefined;
}
export interface GetHostedZoneResponse {
  HostedZone: HostedZone | undefined;
  DelegationSet?: DelegationSet;
  VPCs?: VPC[];
}
export interface GetHostedZoneCountRequest {}
export interface GetHostedZoneCountResponse {
  HostedZoneCount: number | undefined;
}
export declare const HostedZoneLimitType: {
  readonly MAX_RRSETS_BY_ZONE: "MAX_RRSETS_BY_ZONE";
  readonly MAX_VPCS_ASSOCIATED_BY_ZONE: "MAX_VPCS_ASSOCIATED_BY_ZONE";
};
export type HostedZoneLimitType =
  (typeof HostedZoneLimitType)[keyof typeof HostedZoneLimitType];
export interface GetHostedZoneLimitRequest {
  Type: HostedZoneLimitType | undefined;
  HostedZoneId: string | undefined;
}
export interface HostedZoneLimit {
  Type: HostedZoneLimitType | undefined;
  Value: number | undefined;
}
export interface GetHostedZoneLimitResponse {
  Limit: HostedZoneLimit | undefined;
  Count: number | undefined;
}
export declare class HostedZoneNotPrivate extends __BaseException {
  readonly name: "HostedZoneNotPrivate";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<HostedZoneNotPrivate, __BaseException>
  );
}
export interface GetQueryLoggingConfigRequest {
  Id: string | undefined;
}
export interface GetQueryLoggingConfigResponse {
  QueryLoggingConfig: QueryLoggingConfig | undefined;
}
export interface GetReusableDelegationSetRequest {
  Id: string | undefined;
}
export interface GetReusableDelegationSetResponse {
  DelegationSet: DelegationSet | undefined;
}
export declare const ReusableDelegationSetLimitType: {
  readonly MAX_ZONES_BY_REUSABLE_DELEGATION_SET: "MAX_ZONES_BY_REUSABLE_DELEGATION_SET";
};
export type ReusableDelegationSetLimitType =
  (typeof ReusableDelegationSetLimitType)[keyof typeof ReusableDelegationSetLimitType];
export interface GetReusableDelegationSetLimitRequest {
  Type: ReusableDelegationSetLimitType | undefined;
  DelegationSetId: string | undefined;
}
export interface ReusableDelegationSetLimit {
  Type: ReusableDelegationSetLimitType | undefined;
  Value: number | undefined;
}
export interface GetReusableDelegationSetLimitResponse {
  Limit: ReusableDelegationSetLimit | undefined;
  Count: number | undefined;
}
export interface GetTrafficPolicyRequest {
  Id: string | undefined;
  Version: number | undefined;
}
export interface GetTrafficPolicyResponse {
  TrafficPolicy: TrafficPolicy | undefined;
}
export interface GetTrafficPolicyInstanceRequest {
  Id: string | undefined;
}
export interface GetTrafficPolicyInstanceResponse {
  TrafficPolicyInstance: TrafficPolicyInstance | undefined;
}
export interface GetTrafficPolicyInstanceCountRequest {}
export interface GetTrafficPolicyInstanceCountResponse {
  TrafficPolicyInstanceCount: number | undefined;
}
export interface ListCidrBlocksRequest {
  CollectionId: string | undefined;
  LocationName?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface CidrBlockSummary {
  CidrBlock?: string;
  LocationName?: string;
}
export interface ListCidrBlocksResponse {
  NextToken?: string;
  CidrBlocks?: CidrBlockSummary[];
}
export declare class NoSuchCidrLocationException extends __BaseException {
  readonly name: "NoSuchCidrLocationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<NoSuchCidrLocationException, __BaseException>
  );
}
export interface ListCidrCollectionsRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface CollectionSummary {
  Arn?: string;
  Id?: string;
  Name?: string;
  Version?: number;
}
export interface ListCidrCollectionsResponse {
  NextToken?: string;
  CidrCollections?: CollectionSummary[];
}
export interface ListCidrLocationsRequest {
  CollectionId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface LocationSummary {
  LocationName?: string;
}
export interface ListCidrLocationsResponse {
  NextToken?: string;
  CidrLocations?: LocationSummary[];
}
export interface ListGeoLocationsRequest {
  StartContinentCode?: string;
  StartCountryCode?: string;
  StartSubdivisionCode?: string;
  MaxItems?: number;
}
export interface ListGeoLocationsResponse {
  GeoLocationDetailsList: GeoLocationDetails[] | undefined;
  IsTruncated: boolean | undefined;
  NextContinentCode?: string;
  NextCountryCode?: string;
  NextSubdivisionCode?: string;
  MaxItems: number | undefined;
}
export interface ListHealthChecksRequest {
  Marker?: string;
  MaxItems?: number;
}
export interface ListHealthChecksResponse {
  HealthChecks: HealthCheck[] | undefined;
  Marker: string | undefined;
  IsTruncated: boolean | undefined;
  NextMarker?: string;
  MaxItems: number | undefined;
}
export declare const HostedZoneType: {
  readonly PRIVATE_HOSTED_ZONE: "PrivateHostedZone";
};
export type HostedZoneType =
  (typeof HostedZoneType)[keyof typeof HostedZoneType];
export interface ListHostedZonesRequest {
  Marker?: string;
  MaxItems?: number;
  DelegationSetId?: string;
  HostedZoneType?: HostedZoneType;
}
export interface ListHostedZonesResponse {
  HostedZones: HostedZone[] | undefined;
  Marker: string | undefined;
  IsTruncated: boolean | undefined;
  NextMarker?: string;
  MaxItems: number | undefined;
}
export interface ListHostedZonesByNameRequest {
  DNSName?: string;
  HostedZoneId?: string;
  MaxItems?: number;
}
export interface ListHostedZonesByNameResponse {
  HostedZones: HostedZone[] | undefined;
  DNSName?: string;
  HostedZoneId?: string;
  IsTruncated: boolean | undefined;
  NextDNSName?: string;
  NextHostedZoneId?: string;
  MaxItems: number | undefined;
}
export declare class InvalidPaginationToken extends __BaseException {
  readonly name: "InvalidPaginationToken";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidPaginationToken, __BaseException>
  );
}
export interface ListHostedZonesByVPCRequest {
  VPCId: string | undefined;
  VPCRegion: VPCRegion | undefined;
  MaxItems?: number;
  NextToken?: string;
}
export interface HostedZoneOwner {
  OwningAccount?: string;
  OwningService?: string;
}
export interface HostedZoneSummary {
  HostedZoneId: string | undefined;
  Name: string | undefined;
  Owner: HostedZoneOwner | undefined;
}
export interface ListHostedZonesByVPCResponse {
  HostedZoneSummaries: HostedZoneSummary[] | undefined;
  MaxItems: number | undefined;
  NextToken?: string;
}
export interface ListQueryLoggingConfigsRequest {
  HostedZoneId?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListQueryLoggingConfigsResponse {
  QueryLoggingConfigs: QueryLoggingConfig[] | undefined;
  NextToken?: string;
}
export interface ListResourceRecordSetsRequest {
  HostedZoneId: string | undefined;
  StartRecordName?: string;
  StartRecordType?: RRType;
  StartRecordIdentifier?: string;
  MaxItems?: number;
}
export interface ListResourceRecordSetsResponse {
  ResourceRecordSets: ResourceRecordSet[] | undefined;
  IsTruncated: boolean | undefined;
  NextRecordName?: string;
  NextRecordType?: RRType;
  NextRecordIdentifier?: string;
  MaxItems: number | undefined;
}
export interface ListReusableDelegationSetsRequest {
  Marker?: string;
  MaxItems?: number;
}
export interface ListReusableDelegationSetsResponse {
  DelegationSets: DelegationSet[] | undefined;
  Marker: string | undefined;
  IsTruncated: boolean | undefined;
  NextMarker?: string;
  MaxItems: number | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceType: TagResourceType | undefined;
  ResourceId: string | undefined;
}
export interface ResourceTagSet {
  ResourceType?: TagResourceType;
  ResourceId?: string;
  Tags?: Tag[];
}
export interface ListTagsForResourceResponse {
  ResourceTagSet: ResourceTagSet | undefined;
}
export interface ListTagsForResourcesRequest {
  ResourceType: TagResourceType | undefined;
  ResourceIds: string[] | undefined;
}
export interface ListTagsForResourcesResponse {
  ResourceTagSets: ResourceTagSet[] | undefined;
}
export interface ListTrafficPoliciesRequest {
  TrafficPolicyIdMarker?: string;
  MaxItems?: number;
}
export interface TrafficPolicySummary {
  Id: string | undefined;
  Name: string | undefined;
  Type: RRType | undefined;
  LatestVersion: number | undefined;
  TrafficPolicyCount: number | undefined;
}
export interface ListTrafficPoliciesResponse {
  TrafficPolicySummaries: TrafficPolicySummary[] | undefined;
  IsTruncated: boolean | undefined;
  TrafficPolicyIdMarker: string | undefined;
  MaxItems: number | undefined;
}
export interface ListTrafficPolicyInstancesRequest {
  HostedZoneIdMarker?: string;
  TrafficPolicyInstanceNameMarker?: string;
  TrafficPolicyInstanceTypeMarker?: RRType;
  MaxItems?: number;
}
export interface ListTrafficPolicyInstancesResponse {
  TrafficPolicyInstances: TrafficPolicyInstance[] | undefined;
  HostedZoneIdMarker?: string;
  TrafficPolicyInstanceNameMarker?: string;
  TrafficPolicyInstanceTypeMarker?: RRType;
  IsTruncated: boolean | undefined;
  MaxItems: number | undefined;
}
export interface ListTrafficPolicyInstancesByHostedZoneRequest {
  HostedZoneId: string | undefined;
  TrafficPolicyInstanceNameMarker?: string;
  TrafficPolicyInstanceTypeMarker?: RRType;
  MaxItems?: number;
}
export interface ListTrafficPolicyInstancesByHostedZoneResponse {
  TrafficPolicyInstances: TrafficPolicyInstance[] | undefined;
  TrafficPolicyInstanceNameMarker?: string;
  TrafficPolicyInstanceTypeMarker?: RRType;
  IsTruncated: boolean | undefined;
  MaxItems: number | undefined;
}
export interface ListTrafficPolicyInstancesByPolicyRequest {
  TrafficPolicyId: string | undefined;
  TrafficPolicyVersion: number | undefined;
  HostedZoneIdMarker?: string;
  TrafficPolicyInstanceNameMarker?: string;
  TrafficPolicyInstanceTypeMarker?: RRType;
  MaxItems?: number;
}
export interface ListTrafficPolicyInstancesByPolicyResponse {
  TrafficPolicyInstances: TrafficPolicyInstance[] | undefined;
  HostedZoneIdMarker?: string;
  TrafficPolicyInstanceNameMarker?: string;
  TrafficPolicyInstanceTypeMarker?: RRType;
  IsTruncated: boolean | undefined;
  MaxItems: number | undefined;
}
export interface ListTrafficPolicyVersionsRequest {
  Id: string | undefined;
  TrafficPolicyVersionMarker?: string;
  MaxItems?: number;
}
export interface ListTrafficPolicyVersionsResponse {
  TrafficPolicies: TrafficPolicy[] | undefined;
  IsTruncated: boolean | undefined;
  TrafficPolicyVersionMarker: string | undefined;
  MaxItems: number | undefined;
}
export interface ListVPCAssociationAuthorizationsRequest {
  HostedZoneId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListVPCAssociationAuthorizationsResponse {
  HostedZoneId: string | undefined;
  NextToken?: string;
  VPCs: VPC[] | undefined;
}
export interface TestDNSAnswerRequest {
  HostedZoneId: string | undefined;
  RecordName: string | undefined;
  RecordType: RRType | undefined;
  ResolverIP?: string;
  EDNS0ClientSubnetIP?: string;
  EDNS0ClientSubnetMask?: string;
}
export interface TestDNSAnswerResponse {
  Nameserver: string | undefined;
  RecordName: string | undefined;
  RecordType: RRType | undefined;
  RecordData: string[] | undefined;
  ResponseCode: string | undefined;
  Protocol: string | undefined;
}
export declare class HealthCheckVersionMismatch extends __BaseException {
  readonly name: "HealthCheckVersionMismatch";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<HealthCheckVersionMismatch, __BaseException>
  );
}
export declare const ResettableElementName: {
  readonly ChildHealthChecks: "ChildHealthChecks";
  readonly FullyQualifiedDomainName: "FullyQualifiedDomainName";
  readonly Regions: "Regions";
  readonly ResourcePath: "ResourcePath";
};
export type ResettableElementName =
  (typeof ResettableElementName)[keyof typeof ResettableElementName];
export interface UpdateHealthCheckRequest {
  HealthCheckId: string | undefined;
  HealthCheckVersion?: number;
  IPAddress?: string;
  Port?: number;
  ResourcePath?: string;
  FullyQualifiedDomainName?: string;
  SearchString?: string;
  FailureThreshold?: number;
  Inverted?: boolean;
  Disabled?: boolean;
  HealthThreshold?: number;
  ChildHealthChecks?: string[];
  EnableSNI?: boolean;
  Regions?: HealthCheckRegion[];
  AlarmIdentifier?: AlarmIdentifier;
  InsufficientDataHealthStatus?: InsufficientDataHealthStatus;
  ResetElements?: ResettableElementName[];
}
export interface UpdateHealthCheckResponse {
  HealthCheck: HealthCheck | undefined;
}
export interface UpdateHostedZoneCommentRequest {
  Id: string | undefined;
  Comment?: string;
}
export interface UpdateHostedZoneCommentResponse {
  HostedZone: HostedZone | undefined;
}
export interface UpdateTrafficPolicyCommentRequest {
  Id: string | undefined;
  Version: number | undefined;
  Comment: string | undefined;
}
export interface UpdateTrafficPolicyCommentResponse {
  TrafficPolicy: TrafficPolicy | undefined;
}
export declare class ConflictingTypes extends __BaseException {
  readonly name: "ConflictingTypes";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictingTypes, __BaseException>);
}
export interface UpdateTrafficPolicyInstanceRequest {
  Id: string | undefined;
  TTL: number | undefined;
  TrafficPolicyId: string | undefined;
  TrafficPolicyVersion: number | undefined;
}
export interface UpdateTrafficPolicyInstanceResponse {
  TrafficPolicyInstance: TrafficPolicyInstance | undefined;
}
