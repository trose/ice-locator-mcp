import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  AssociateVPCWithHostedZoneRequest,
  AssociateVPCWithHostedZoneResponse,
} from "../models/models_0";
import {
  Route53ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../Route53Client";
export { __MetadataBearer, $Command };
export interface AssociateVPCWithHostedZoneCommandInput
  extends AssociateVPCWithHostedZoneRequest {}
export interface AssociateVPCWithHostedZoneCommandOutput
  extends AssociateVPCWithHostedZoneResponse,
    __MetadataBearer {}
export declare class AssociateVPCWithHostedZoneCommand extends $Command<
  AssociateVPCWithHostedZoneCommandInput,
  AssociateVPCWithHostedZoneCommandOutput,
  Route53ClientResolvedConfig
> {
  readonly input: AssociateVPCWithHostedZoneCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: AssociateVPCWithHostedZoneCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: Route53ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    AssociateVPCWithHostedZoneCommandInput,
    AssociateVPCWithHostedZoneCommandOutput
  >;
  private serialize;
  private deserialize;
}
