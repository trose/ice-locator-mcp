import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CreateHostedZoneRequest,
  CreateHostedZoneResponse,
} from "../models/models_0";
import {
  Route53ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../Route53Client";
export { __MetadataBearer, $Command };
export interface CreateHostedZoneCommandInput extends CreateHostedZoneRequest {}
export interface CreateHostedZoneCommandOutput
  extends CreateHostedZoneResponse,
    __MetadataBearer {}
export declare class CreateHostedZoneCommand extends $Command<
  CreateHostedZoneCommandInput,
  CreateHostedZoneCommandOutput,
  Route53ClientResolvedConfig
> {
  readonly input: CreateHostedZoneCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateHostedZoneCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: Route53ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateHostedZoneCommandInput, CreateHostedZoneCommandOutput>;
  private serialize;
  private deserialize;
}
