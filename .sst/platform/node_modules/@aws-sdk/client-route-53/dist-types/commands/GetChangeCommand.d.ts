import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@smithy/types";
import { GetChangeRequest, GetChangeResponse } from "../models/models_0";
import { Route53ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../Route53Client";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link GetChangeCommand}.
 */
export interface GetChangeCommandInput extends GetChangeRequest {
}
/**
 * @public
 *
 * The output of {@link GetChangeCommand}.
 */
export interface GetChangeCommandOutput extends GetChangeResponse, __MetadataBearer {
}
/**
 * @public
 * <p>Returns the current status of a change batch request. The status is one of the
 * 			following values:</p>
 *          <ul>
 *             <li>
 *                <p>
 *                   <code>PENDING</code> indicates that the changes in this request have not
 * 					propagated to all Amazon Route 53 DNS servers managing the hosted zone. This is the initial status of all
 * 					change batch requests.</p>
 *             </li>
 *             <li>
 *                <p>
 *                   <code>INSYNC</code> indicates that the changes have propagated to all Route 53
 * 					DNS servers managing the hosted zone. </p>
 *             </li>
 *          </ul>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { Route53Client, GetChangeCommand } from "@aws-sdk/client-route-53"; // ES Modules import
 * // const { Route53Client, GetChangeCommand } = require("@aws-sdk/client-route-53"); // CommonJS import
 * const client = new Route53Client(config);
 * const input = { // GetChangeRequest
 *   Id: "STRING_VALUE", // required
 * };
 * const command = new GetChangeCommand(input);
 * const response = await client.send(command);
 * // { // GetChangeResponse
 * //   ChangeInfo: { // ChangeInfo
 * //     Id: "STRING_VALUE", // required
 * //     Status: "PENDING" || "INSYNC", // required
 * //     SubmittedAt: new Date("TIMESTAMP"), // required
 * //     Comment: "STRING_VALUE",
 * //   },
 * // };
 *
 * ```
 *
 * @param GetChangeCommandInput - {@link GetChangeCommandInput}
 * @returns {@link GetChangeCommandOutput}
 * @see {@link GetChangeCommandInput} for command's `input` shape.
 * @see {@link GetChangeCommandOutput} for command's `response` shape.
 * @see {@link Route53ClientResolvedConfig | config} for Route53Client's `config` shape.
 *
 * @throws {@link InvalidInput} (client fault)
 *  <p>The input is not valid.</p>
 *
 * @throws {@link NoSuchChange} (client fault)
 *  <p>A change with the specified change ID does not exist.</p>
 *
 * @throws {@link Route53ServiceException}
 * <p>Base exception class for all service exceptions from Route53 service.</p>
 *
 */
export declare class GetChangeCommand extends $Command<GetChangeCommandInput, GetChangeCommandOutput, Route53ClientResolvedConfig> {
    readonly input: GetChangeCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: GetChangeCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: Route53ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetChangeCommandInput, GetChangeCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
