"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.types = exports.config = exports.SelfSignedCert = exports.Provider = exports.PrivateKey = exports.LocallySignedCert = exports.getPublicKeyOutput = exports.getPublicKey = exports.getCertificateOutput = exports.getCertificate = exports.CertRequest = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.CertRequest = null;
utilities.lazyLoad(exports, ["CertRequest"], () => require("./certRequest"));
exports.getCertificate = null;
exports.getCertificateOutput = null;
utilities.lazyLoad(exports, ["getCertificate", "getCertificateOutput"], () => require("./getCertificate"));
exports.getPublicKey = null;
exports.getPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getPublicKey", "getPublicKeyOutput"], () => require("./getPublicKey"));
exports.LocallySignedCert = null;
utilities.lazyLoad(exports, ["LocallySignedCert"], () => require("./locallySignedCert"));
exports.PrivateKey = null;
utilities.lazyLoad(exports, ["PrivateKey"], () => require("./privateKey"));
exports.Provider = null;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));
exports.SelfSignedCert = null;
utilities.lazyLoad(exports, ["SelfSignedCert"], () => require("./selfSignedCert"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "tls:index/certRequest:CertRequest":
                return new exports.CertRequest(name, undefined, { urn });
            case "tls:index/locallySignedCert:LocallySignedCert":
                return new exports.LocallySignedCert(name, undefined, { urn });
            case "tls:index/privateKey:PrivateKey":
                return new exports.PrivateKey(name, undefined, { urn });
            case "tls:index/selfSignedCert:SelfSignedCert":
                return new exports.SelfSignedCert(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tls", "index/certRequest", _module);
pulumi.runtime.registerResourceModule("tls", "index/locallySignedCert", _module);
pulumi.runtime.registerResourceModule("tls", "index/privateKey", _module);
pulumi.runtime.registerResourceModule("tls", "index/selfSignedCert", _module);
pulumi.runtime.registerResourcePackage("tls", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:tls") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new exports.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map