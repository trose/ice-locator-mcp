import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleStreamKey = new cloudflare.StreamKey("example_stream_key", {accountId: "023e105f4ecef8ad9ca31a8372d0c353"});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/streamKey:StreamKey example '<account_id>'
 * ```
 */
export declare class StreamKey extends pulumi.CustomResource {
    /**
     * Get an existing StreamKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamKeyState, opts?: pulumi.CustomResourceOptions): StreamKey;
    /**
     * Returns true if the given object is an instance of StreamKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StreamKey;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The date and time a signing key was created.
     */
    readonly created: pulumi.Output<string>;
    /**
     * The signing key in JWK format.
     */
    readonly jwk: pulumi.Output<string>;
    /**
     * The signing key in PEM format.
     */
    readonly pem: pulumi.Output<string>;
    /**
     * Create a StreamKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering StreamKey resources.
 */
export interface StreamKeyState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The date and time a signing key was created.
     */
    created?: pulumi.Input<string>;
    /**
     * The signing key in JWK format.
     */
    jwk?: pulumi.Input<string>;
    /**
     * The signing key in PEM format.
     */
    pem?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a StreamKey resource.
 */
export interface StreamKeyArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
}
