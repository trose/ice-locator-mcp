import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSnippetRulesList = cloudflare.getSnippetRulesList({
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 * });
 * ```
 */
export declare function getSnippetRulesList(args: GetSnippetRulesListArgs, opts?: pulumi.InvokeOptions): Promise<GetSnippetRulesListResult>;
/**
 * A collection of arguments for invoking getSnippetRulesList.
 */
export interface GetSnippetRulesListArgs {
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * The unique ID of the zone.
     */
    zoneId: string;
}
/**
 * A collection of values returned by getSnippetRulesList.
 */
export interface GetSnippetRulesListResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetSnippetRulesListResult[];
    /**
     * The unique ID of the zone.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSnippetRulesList = cloudflare.getSnippetRulesList({
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 * });
 * ```
 */
export declare function getSnippetRulesListOutput(args: GetSnippetRulesListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSnippetRulesListResult>;
/**
 * A collection of arguments for invoking getSnippetRulesList.
 */
export interface GetSnippetRulesListOutputArgs {
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * The unique ID of the zone.
     */
    zoneId: pulumi.Input<string>;
}
