import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflaredConfig = cloudflare.getZeroTrustTunnelCloudflaredConfig({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export declare function getZeroTrustTunnelCloudflaredConfig(args: GetZeroTrustTunnelCloudflaredConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustTunnelCloudflaredConfigResult>;
/**
 * A collection of arguments for invoking getZeroTrustTunnelCloudflaredConfig.
 */
export interface GetZeroTrustTunnelCloudflaredConfigArgs {
    /**
     * Identifier.
     */
    accountId: string;
    /**
     * UUID of the tunnel.
     */
    tunnelId: string;
}
/**
 * A collection of values returned by getZeroTrustTunnelCloudflaredConfig.
 */
export interface GetZeroTrustTunnelCloudflaredConfigResult {
    /**
     * Identifier.
     */
    readonly accountId: string;
    /**
     * The tunnel configuration and ingress rules.
     */
    readonly config: outputs.GetZeroTrustTunnelCloudflaredConfigConfig;
    readonly createdAt: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
     * Available values: "local", "cloudflare".
     */
    readonly source: string;
    /**
     * UUID of the tunnel.
     */
    readonly tunnelId: string;
    /**
     * The version of the Tunnel Configuration.
     */
    readonly version: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflaredConfig = cloudflare.getZeroTrustTunnelCloudflaredConfig({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export declare function getZeroTrustTunnelCloudflaredConfigOutput(args: GetZeroTrustTunnelCloudflaredConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustTunnelCloudflaredConfigResult>;
/**
 * A collection of arguments for invoking getZeroTrustTunnelCloudflaredConfig.
 */
export interface GetZeroTrustTunnelCloudflaredConfigOutputArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * UUID of the tunnel.
     */
    tunnelId: pulumi.Input<string>;
}
