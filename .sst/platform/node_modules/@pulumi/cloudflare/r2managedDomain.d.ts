import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleR2ManagedDomain = new cloudflare.R2ManagedDomain("example_r2_managed_domain", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     bucketName: "example-bucket",
 *     enabled: true,
 * });
 * ```
 */
export declare class R2ManagedDomain extends pulumi.CustomResource {
    /**
     * Get an existing R2ManagedDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: R2ManagedDomainState, opts?: pulumi.CustomResourceOptions): R2ManagedDomain;
    /**
     * Returns true if the given object is an instance of R2ManagedDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is R2ManagedDomain;
    /**
     * Account ID.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Bucket ID.
     */
    readonly bucketId: pulumi.Output<string>;
    /**
     * Name of the bucket.
     */
    readonly bucketName: pulumi.Output<string>;
    /**
     * Domain name of the bucket's r2.dev domain.
     */
    readonly domain: pulumi.Output<string>;
    /**
     * Whether to enable public bucket access at the r2.dev domain.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * Jurisdiction of the bucket
     */
    readonly jurisdiction: pulumi.Output<string>;
    /**
     * Create a R2ManagedDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: R2ManagedDomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering R2ManagedDomain resources.
 */
export interface R2ManagedDomainState {
    /**
     * Account ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Bucket ID.
     */
    bucketId?: pulumi.Input<string>;
    /**
     * Name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Domain name of the bucket's r2.dev domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * Whether to enable public bucket access at the r2.dev domain.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Jurisdiction of the bucket
     */
    jurisdiction?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a R2ManagedDomain resource.
 */
export interface R2ManagedDomainArgs {
    /**
     * Account ID.
     */
    accountId: pulumi.Input<string>;
    /**
     * Name of the bucket.
     */
    bucketName: pulumi.Input<string>;
    /**
     * Whether to enable public bucket access at the r2.dev domain.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Jurisdiction of the bucket
     */
    jurisdiction?: pulumi.Input<string>;
}
