import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustTunnelCloudflaredConfig:ZeroTrustTunnelCloudflaredConfig example '<account_id>/<tunnel_id>'
 * ```
 */
export declare class ZeroTrustTunnelCloudflaredConfig extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustTunnelCloudflaredConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustTunnelCloudflaredConfigState, opts?: pulumi.CustomResourceOptions): ZeroTrustTunnelCloudflaredConfig;
    /**
     * Returns true if the given object is an instance of ZeroTrustTunnelCloudflaredConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustTunnelCloudflaredConfig;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The tunnel configuration and ingress rules.
     */
    readonly config: pulumi.Output<outputs.ZeroTrustTunnelCloudflaredConfigConfig>;
    readonly createdAt: pulumi.Output<string>;
    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
     * Available values: "local", "cloudflare".
     */
    readonly source: pulumi.Output<string>;
    /**
     * UUID of the tunnel.
     */
    readonly tunnelId: pulumi.Output<string>;
    /**
     * The version of the Tunnel Configuration.
     */
    readonly version: pulumi.Output<number>;
    /**
     * Create a ZeroTrustTunnelCloudflaredConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustTunnelCloudflaredConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustTunnelCloudflaredConfig resources.
 */
export interface ZeroTrustTunnelCloudflaredConfigState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The tunnel configuration and ingress rules.
     */
    config?: pulumi.Input<inputs.ZeroTrustTunnelCloudflaredConfigConfig>;
    createdAt?: pulumi.Input<string>;
    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
     * Available values: "local", "cloudflare".
     */
    source?: pulumi.Input<string>;
    /**
     * UUID of the tunnel.
     */
    tunnelId?: pulumi.Input<string>;
    /**
     * The version of the Tunnel Configuration.
     */
    version?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a ZeroTrustTunnelCloudflaredConfig resource.
 */
export interface ZeroTrustTunnelCloudflaredConfigArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * The tunnel configuration and ingress rules.
     */
    config?: pulumi.Input<inputs.ZeroTrustTunnelCloudflaredConfigConfig>;
    /**
     * Indicates if this is a locally or remotely configured tunnel. If `local`, manage the tunnel using a YAML file on the origin machine. If `cloudflare`, manage the tunnel's configuration on the Zero Trust dashboard.
     * Available values: "local", "cloudflare".
     */
    source?: pulumi.Input<string>;
    /**
     * UUID of the tunnel.
     */
    tunnelId: pulumi.Input<string>;
}
