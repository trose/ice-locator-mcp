import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAuthenticatedOriginPulls = cloudflare.getAuthenticatedOriginPulls({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     hostname: "app.example.com",
 * });
 * ```
 */
export declare function getAuthenticatedOriginPulls(args: GetAuthenticatedOriginPullsArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticatedOriginPullsResult>;
/**
 * A collection of arguments for invoking getAuthenticatedOriginPulls.
 */
export interface GetAuthenticatedOriginPullsArgs {
    /**
     * The hostname on the origin for which the client certificate uploaded will be used.
     */
    hostname: string;
    /**
     * Identifier.
     */
    zoneId: string;
}
/**
 * A collection of values returned by getAuthenticatedOriginPulls.
 */
export interface GetAuthenticatedOriginPullsResult {
    /**
     * Identifier.
     */
    readonly certId: string;
    /**
     * Status of the certificate or the association.
     * Available values: "initializing", "pending*deployment", "pending*deletion", "active", "deleted", "deployment*timed*out", "deletion*timed*out".
     */
    readonly certStatus: string;
    /**
     * The time when the certificate was updated.
     */
    readonly certUpdatedAt: string;
    /**
     * The time when the certificate was uploaded.
     */
    readonly certUploadedOn: string;
    /**
     * The hostname certificate.
     */
    readonly certificate: string;
    /**
     * The time when the certificate was created.
     */
    readonly createdAt: string;
    /**
     * Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association.
     */
    readonly enabled: boolean;
    /**
     * The date when the certificate expires.
     */
    readonly expiresOn: string;
    /**
     * The hostname on the origin for which the client certificate uploaded will be used.
     */
    readonly hostname: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The certificate authority that issued the certificate.
     */
    readonly issuer: string;
    /**
     * The serial number on the uploaded certificate.
     */
    readonly serialNumber: string;
    /**
     * The type of hash used for the certificate.
     */
    readonly signature: string;
    /**
     * Status of the certificate or the association.
     * Available values: "initializing", "pending*deployment", "pending*deletion", "active", "deleted", "deployment*timed*out", "deletion*timed*out".
     */
    readonly status: string;
    /**
     * The time when the certificate was updated.
     */
    readonly updatedAt: string;
    /**
     * Identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAuthenticatedOriginPulls = cloudflare.getAuthenticatedOriginPulls({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     hostname: "app.example.com",
 * });
 * ```
 */
export declare function getAuthenticatedOriginPullsOutput(args: GetAuthenticatedOriginPullsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAuthenticatedOriginPullsResult>;
/**
 * A collection of arguments for invoking getAuthenticatedOriginPulls.
 */
export interface GetAuthenticatedOriginPullsOutputArgs {
    /**
     * The hostname on the origin for which the client certificate uploaded will be used.
     */
    hostname: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
