"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCloudforceOneRequestsOutput = exports.getCloudforceOneRequests = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequests = cloudflare.getCloudforceOneRequests({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     page: 0,
 *     perPage: 10,
 *     completedAfter: "2022-01-01T00:00:00Z",
 *     completedBefore: "2024-01-01T00:00:00Z",
 *     createdAfter: "2022-01-01T00:00:00Z",
 *     createdBefore: "2024-01-01T00:00:00Z",
 *     requestType: "Victomology",
 *     sortBy: "created",
 *     sortOrder: "asc",
 *     status: "open",
 * });
 * ```
 */
function getCloudforceOneRequests(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getCloudforceOneRequests:getCloudforceOneRequests", {
        "accountId": args.accountId,
        "completedAfter": args.completedAfter,
        "completedBefore": args.completedBefore,
        "createdAfter": args.createdAfter,
        "createdBefore": args.createdBefore,
        "maxItems": args.maxItems,
        "page": args.page,
        "perPage": args.perPage,
        "requestType": args.requestType,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
        "status": args.status,
    }, opts);
}
exports.getCloudforceOneRequests = getCloudforceOneRequests;
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequests = cloudflare.getCloudforceOneRequests({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     page: 0,
 *     perPage: 10,
 *     completedAfter: "2022-01-01T00:00:00Z",
 *     completedBefore: "2024-01-01T00:00:00Z",
 *     createdAfter: "2022-01-01T00:00:00Z",
 *     createdBefore: "2024-01-01T00:00:00Z",
 *     requestType: "Victomology",
 *     sortBy: "created",
 *     sortOrder: "asc",
 *     status: "open",
 * });
 * ```
 */
function getCloudforceOneRequestsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getCloudforceOneRequests:getCloudforceOneRequests", {
        "accountId": args.accountId,
        "completedAfter": args.completedAfter,
        "completedBefore": args.completedBefore,
        "createdAfter": args.createdAfter,
        "createdBefore": args.createdBefore,
        "maxItems": args.maxItems,
        "page": args.page,
        "perPage": args.perPage,
        "requestType": args.requestType,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
        "status": args.status,
    }, opts);
}
exports.getCloudforceOneRequestsOutput = getCloudforceOneRequestsOutput;
//# sourceMappingURL=getCloudforceOneRequests.js.map