import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 */
export declare class ZeroTrustOrganization extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustOrganizationState, opts?: pulumi.CustomResourceOptions): ZeroTrustOrganization;
    /**
     * Returns true if the given object is an instance of ZeroTrustOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustOrganization;
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    readonly allowAuthenticateViaWarp: pulumi.Output<boolean | undefined>;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    readonly authDomain: pulumi.Output<string | undefined>;
    /**
     * When set to `true`, users skip the identity provider selection step during login.
     */
    readonly autoRedirectToIdentity: pulumi.Output<boolean>;
    readonly customPages: pulumi.Output<outputs.ZeroTrustOrganizationCustomPages | undefined>;
    readonly isUiReadOnly: pulumi.Output<boolean | undefined>;
    readonly loginDesign: pulumi.Output<outputs.ZeroTrustOrganizationLoginDesign | undefined>;
    /**
     * The name of your Zero Trust organization.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
     */
    readonly sessionDuration: pulumi.Output<string | undefined>;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    readonly uiReadOnlyToggleReason: pulumi.Output<string | undefined>;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.
     */
    readonly userSeatExpirationInactiveTime: pulumi.Output<string | undefined>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.
     */
    readonly warpAuthSessionDuration: pulumi.Output<string | undefined>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId: pulumi.Output<string | undefined>;
    /**
     * Create a ZeroTrustOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZeroTrustOrganizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustOrganization resources.
 */
export interface ZeroTrustOrganizationState {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    allowAuthenticateViaWarp?: pulumi.Input<boolean>;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    authDomain?: pulumi.Input<string>;
    /**
     * When set to `true`, users skip the identity provider selection step during login.
     */
    autoRedirectToIdentity?: pulumi.Input<boolean>;
    customPages?: pulumi.Input<inputs.ZeroTrustOrganizationCustomPages>;
    isUiReadOnly?: pulumi.Input<boolean>;
    loginDesign?: pulumi.Input<inputs.ZeroTrustOrganizationLoginDesign>;
    /**
     * The name of your Zero Trust organization.
     */
    name?: pulumi.Input<string>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    uiReadOnlyToggleReason?: pulumi.Input<string>;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.
     */
    userSeatExpirationInactiveTime?: pulumi.Input<string>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.
     */
    warpAuthSessionDuration?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustOrganization resource.
 */
export interface ZeroTrustOrganizationArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    allowAuthenticateViaWarp?: pulumi.Input<boolean>;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    authDomain?: pulumi.Input<string>;
    /**
     * When set to `true`, users skip the identity provider selection step during login.
     */
    autoRedirectToIdentity?: pulumi.Input<boolean>;
    customPages?: pulumi.Input<inputs.ZeroTrustOrganizationCustomPages>;
    isUiReadOnly?: pulumi.Input<boolean>;
    loginDesign?: pulumi.Input<inputs.ZeroTrustOrganizationLoginDesign>;
    /**
     * The name of your Zero Trust organization.
     */
    name?: pulumi.Input<string>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    uiReadOnlyToggleReason?: pulumi.Input<string>;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count.  Minimum value for this setting is 1 month (730h). Must be in the format `300ms` or `2h45m`. Valid time units are: `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`.
     */
    userSeatExpirationInactiveTime?: pulumi.Input<string>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format `30m` or `2h45m`. Valid time units are: m, h.
     */
    warpAuthSessionDuration?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
