import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountDnsSettingsInternalViews = cloudflare.getAccountDnsSettingsInternalViews({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: {
 *         contains: "view",
 *         endswith: "ew",
 *         exact: "my view",
 *         startswith: "my",
 *     },
 *     order: "name",
 *     zoneId: "ae29bea30e2e427ba9cd8d78b628177b",
 *     zoneName: "www.example.com",
 * });
 * ```
 */
export declare function getAccountDnsSettingsInternalViews(args: GetAccountDnsSettingsInternalViewsArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountDnsSettingsInternalViewsResult>;
/**
 * A collection of arguments for invoking getAccountDnsSettingsInternalViews.
 */
export interface GetAccountDnsSettingsInternalViewsArgs {
    /**
     * Identifier.
     */
    accountId: string;
    /**
     * Direction to order DNS views in.
     * Available values: "asc", "desc".
     */
    direction?: string;
    /**
     * Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
     * Available values: "any", "all".
     */
    match?: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    name?: inputs.GetAccountDnsSettingsInternalViewsName;
    /**
     * Field to order DNS views by.
     * Available values: "name", "created*on", "modified*on".
     */
    order?: string;
    /**
     * A zone ID that exists in the zones list for the view.
     */
    zoneId?: string;
    /**
     * A zone name that exists in the zones list for the view.
     */
    zoneName?: string;
}
/**
 * A collection of values returned by getAccountDnsSettingsInternalViews.
 */
export interface GetAccountDnsSettingsInternalViewsResult {
    /**
     * Identifier.
     */
    readonly accountId: string;
    /**
     * Direction to order DNS views in.
     * Available values: "asc", "desc".
     */
    readonly direction: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
     * Available values: "any", "all".
     */
    readonly match: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    readonly name?: outputs.GetAccountDnsSettingsInternalViewsName;
    /**
     * Field to order DNS views by.
     * Available values: "name", "created*on", "modified*on".
     */
    readonly order?: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetAccountDnsSettingsInternalViewsResult[];
    /**
     * A zone ID that exists in the zones list for the view.
     */
    readonly zoneId?: string;
    /**
     * A zone name that exists in the zones list for the view.
     */
    readonly zoneName?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountDnsSettingsInternalViews = cloudflare.getAccountDnsSettingsInternalViews({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: {
 *         contains: "view",
 *         endswith: "ew",
 *         exact: "my view",
 *         startswith: "my",
 *     },
 *     order: "name",
 *     zoneId: "ae29bea30e2e427ba9cd8d78b628177b",
 *     zoneName: "www.example.com",
 * });
 * ```
 */
export declare function getAccountDnsSettingsInternalViewsOutput(args: GetAccountDnsSettingsInternalViewsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountDnsSettingsInternalViewsResult>;
/**
 * A collection of arguments for invoking getAccountDnsSettingsInternalViews.
 */
export interface GetAccountDnsSettingsInternalViewsOutputArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * Direction to order DNS views in.
     * Available values: "asc", "desc".
     */
    direction?: pulumi.Input<string>;
    /**
     * Whether to match all search requirements or at least one (any). If set to `all`, acts like a logical AND between filters. If set to `any`, acts like a logical OR instead.
     * Available values: "any", "all".
     */
    match?: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    name?: pulumi.Input<inputs.GetAccountDnsSettingsInternalViewsNameArgs>;
    /**
     * Field to order DNS views by.
     * Available values: "name", "created*on", "modified*on".
     */
    order?: pulumi.Input<string>;
    /**
     * A zone ID that exists in the zones list for the view.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * A zone name that exists in the zones list for the view.
     */
    zoneName?: pulumi.Input<string>;
}
