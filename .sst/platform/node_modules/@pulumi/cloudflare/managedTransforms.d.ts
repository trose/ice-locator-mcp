import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleManagedTransforms = new cloudflare.ManagedTransforms("example_managed_transforms", {
 *     zoneId: "9f1839b6152d298aca64c4e906b6d074",
 *     managedRequestHeaders: [{
 *         id: "add_bot_protection_headers",
 *         enabled: true,
 *     }],
 *     managedResponseHeaders: [{
 *         id: "add_security_headers",
 *         enabled: true,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/managedTransforms:ManagedTransforms example '<zone_id>'
 * ```
 */
export declare class ManagedTransforms extends pulumi.CustomResource {
    /**
     * Get an existing ManagedTransforms resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedTransformsState, opts?: pulumi.CustomResourceOptions): ManagedTransforms;
    /**
     * Returns true if the given object is an instance of ManagedTransforms.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedTransforms;
    /**
     * The list of Managed Request Transforms.
     */
    readonly managedRequestHeaders: pulumi.Output<outputs.ManagedTransformsManagedRequestHeader[]>;
    /**
     * The list of Managed Response Transforms.
     */
    readonly managedResponseHeaders: pulumi.Output<outputs.ManagedTransformsManagedResponseHeader[]>;
    /**
     * The unique ID of the zone.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ManagedTransforms resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedTransformsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagedTransforms resources.
 */
export interface ManagedTransformsState {
    /**
     * The list of Managed Request Transforms.
     */
    managedRequestHeaders?: pulumi.Input<pulumi.Input<inputs.ManagedTransformsManagedRequestHeader>[]>;
    /**
     * The list of Managed Response Transforms.
     */
    managedResponseHeaders?: pulumi.Input<pulumi.Input<inputs.ManagedTransformsManagedResponseHeader>[]>;
    /**
     * The unique ID of the zone.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ManagedTransforms resource.
 */
export interface ManagedTransformsArgs {
    /**
     * The list of Managed Request Transforms.
     */
    managedRequestHeaders: pulumi.Input<pulumi.Input<inputs.ManagedTransformsManagedRequestHeader>[]>;
    /**
     * The list of Managed Response Transforms.
     */
    managedResponseHeaders: pulumi.Input<pulumi.Input<inputs.ManagedTransformsManagedResponseHeader>[]>;
    /**
     * The unique ID of the zone.
     */
    zoneId: pulumi.Input<string>;
}
