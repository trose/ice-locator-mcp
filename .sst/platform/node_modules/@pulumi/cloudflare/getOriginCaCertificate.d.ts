import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleOriginCaCertificate = cloudflare.getOriginCaCertificate({
 *     certificateId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export declare function getOriginCaCertificate(args?: GetOriginCaCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetOriginCaCertificateResult>;
/**
 * A collection of arguments for invoking getOriginCaCertificate.
 */
export interface GetOriginCaCertificateArgs {
    /**
     * Identifier.
     */
    certificateId?: string;
    filter?: inputs.GetOriginCaCertificateFilter;
}
/**
 * A collection of values returned by getOriginCaCertificate.
 */
export interface GetOriginCaCertificateResult {
    /**
     * The Origin CA certificate. Will be newline-encoded.
     */
    readonly certificate: string;
    /**
     * Identifier.
     */
    readonly certificateId?: string;
    /**
     * The Certificate Signing Request (CSR). Must be newline-encoded.
     */
    readonly csr: string;
    /**
     * When the certificate will expire.
     */
    readonly expiresOn: string;
    readonly filter?: outputs.GetOriginCaCertificateFilter;
    /**
     * Array of hostnames or wildcard names (e.g., *.example.com) bound to the certificate.
     */
    readonly hostnames: string[];
    /**
     * Identifier.
     */
    readonly id: string;
    /**
     * Signature type desired on certificate ("origin-rsa" (rsa), "origin-ecc" (ecdsa), or "keyless-certificate" (for Keyless SSL servers).
     * Available values: "origin-rsa", "origin-ecc", "keyless-certificate".
     */
    readonly requestType: string;
    /**
     * The number of days for which the certificate should be valid.
     * Available values: 7, 30, 90, 365, 730, 1095, 5475.
     */
    readonly requestedValidity: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleOriginCaCertificate = cloudflare.getOriginCaCertificate({
 *     certificateId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export declare function getOriginCaCertificateOutput(args?: GetOriginCaCertificateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOriginCaCertificateResult>;
/**
 * A collection of arguments for invoking getOriginCaCertificate.
 */
export interface GetOriginCaCertificateOutputArgs {
    /**
     * Identifier.
     */
    certificateId?: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetOriginCaCertificateFilterArgs>;
}
