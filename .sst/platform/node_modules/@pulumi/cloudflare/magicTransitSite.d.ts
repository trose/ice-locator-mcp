import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleMagicTransitSite = new cloudflare.MagicTransitSite("example_magic_transit_site", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "site_1",
 *     connectorId: "ac60d3d0435248289d446cedd870bcf4",
 *     description: "description",
 *     haMode: true,
 *     location: {
 *         lat: "37.6192",
 *         lon: "122.3816",
 *     },
 *     secondaryConnectorId: "8d67040d3835dbcf46ce29da440dc482",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicTransitSite:MagicTransitSite example '<account_id>/<site_id>'
 * ```
 */
export declare class MagicTransitSite extends pulumi.CustomResource {
    /**
     * Get an existing MagicTransitSite resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MagicTransitSiteState, opts?: pulumi.CustomResourceOptions): MagicTransitSite;
    /**
     * Returns true if the given object is an instance of MagicTransitSite.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MagicTransitSite;
    /**
     * Identifier
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Magic Connector identifier tag.
     */
    readonly connectorId: pulumi.Output<string | undefined>;
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Site high availability mode. If set to true, the site can have two connectors and runs in high availability mode.
     */
    readonly haMode: pulumi.Output<boolean | undefined>;
    /**
     * Location of site in latitude and longitude.
     */
    readonly location: pulumi.Output<outputs.MagicTransitSiteLocation | undefined>;
    /**
     * The name of the site.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Magic Connector identifier tag. Used when high availability mode is on.
     */
    readonly secondaryConnectorId: pulumi.Output<string | undefined>;
    /**
     * Create a MagicTransitSite resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MagicTransitSiteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MagicTransitSite resources.
 */
export interface MagicTransitSiteState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * Magic Connector identifier tag.
     */
    connectorId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * Site high availability mode. If set to true, the site can have two connectors and runs in high availability mode.
     */
    haMode?: pulumi.Input<boolean>;
    /**
     * Location of site in latitude and longitude.
     */
    location?: pulumi.Input<inputs.MagicTransitSiteLocation>;
    /**
     * The name of the site.
     */
    name?: pulumi.Input<string>;
    /**
     * Magic Connector identifier tag. Used when high availability mode is on.
     */
    secondaryConnectorId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MagicTransitSite resource.
 */
export interface MagicTransitSiteArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Magic Connector identifier tag.
     */
    connectorId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * Site high availability mode. If set to true, the site can have two connectors and runs in high availability mode.
     */
    haMode?: pulumi.Input<boolean>;
    /**
     * Location of site in latitude and longitude.
     */
    location?: pulumi.Input<inputs.MagicTransitSiteLocation>;
    /**
     * The name of the site.
     */
    name: pulumi.Input<string>;
    /**
     * Magic Connector identifier tag. Used when high availability mode is on.
     */
    secondaryConnectorId?: pulumi.Input<string>;
}
