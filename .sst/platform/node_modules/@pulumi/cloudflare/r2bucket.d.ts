import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleR2Bucket = new cloudflare.R2Bucket("example_r2_bucket", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "example-bucket",
 *     location: "apac",
 *     storageClass: "Standard",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/r2Bucket:R2Bucket example '<account_id>/<bucket_name>/<jurisdiction>'
 * ```
 */
export declare class R2Bucket extends pulumi.CustomResource {
    /**
     * Get an existing R2Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: R2BucketState, opts?: pulumi.CustomResourceOptions): R2Bucket;
    /**
     * Returns true if the given object is an instance of R2Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is R2Bucket;
    /**
     * Account ID.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Creation timestamp.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * Jurisdiction where objects in this bucket are guaranteed to be stored.
     * Available values: "default", "eu", "fedramp".
     */
    readonly jurisdiction: pulumi.Output<string>;
    /**
     * Location of the bucket.
     * Available values: "apac", "eeur", "enam", "weur", "wnam", "oc".
     */
    readonly location: pulumi.Output<string>;
    /**
     * Name of the bucket.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Storage class for newly uploaded objects, unless specified otherwise.
     * Available values: "Standard", "InfrequentAccess".
     */
    readonly storageClass: pulumi.Output<string>;
    /**
     * Create a R2Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: R2BucketArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering R2Bucket resources.
 */
export interface R2BucketState {
    /**
     * Account ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Creation timestamp.
     */
    creationDate?: pulumi.Input<string>;
    /**
     * Jurisdiction where objects in this bucket are guaranteed to be stored.
     * Available values: "default", "eu", "fedramp".
     */
    jurisdiction?: pulumi.Input<string>;
    /**
     * Location of the bucket.
     * Available values: "apac", "eeur", "enam", "weur", "wnam", "oc".
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the bucket.
     */
    name?: pulumi.Input<string>;
    /**
     * Storage class for newly uploaded objects, unless specified otherwise.
     * Available values: "Standard", "InfrequentAccess".
     */
    storageClass?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a R2Bucket resource.
 */
export interface R2BucketArgs {
    /**
     * Account ID.
     */
    accountId: pulumi.Input<string>;
    /**
     * Jurisdiction where objects in this bucket are guaranteed to be stored.
     * Available values: "default", "eu", "fedramp".
     */
    jurisdiction?: pulumi.Input<string>;
    /**
     * Location of the bucket.
     * Available values: "apac", "eeur", "enam", "weur", "wnam", "oc".
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the bucket.
     */
    name: pulumi.Input<string>;
    /**
     * Storage class for newly uploaded objects, unless specified otherwise.
     * Available values: "Standard", "InfrequentAccess".
     */
    storageClass?: pulumi.Input<string>;
}
