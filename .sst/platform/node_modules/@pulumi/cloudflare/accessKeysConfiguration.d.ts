import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessKeyConfiguration = new cloudflare.ZeroTrustAccessKeyConfiguration("example_zero_trust_access_key_configuration", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     keyRotationIntervalDays: 30,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessKeysConfiguration:AccessKeysConfiguration example '<account_id>'
 * ```
 *
 * @deprecated cloudflare.index/accesskeysconfiguration.AccessKeysConfiguration has been deprecated in favor of cloudflare.index/zerotrustaccesskeyconfiguration.ZeroTrustAccessKeyConfiguration
 */
export declare class AccessKeysConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing AccessKeysConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessKeysConfigurationState, opts?: pulumi.CustomResourceOptions): AccessKeysConfiguration;
    /**
     * Returns true if the given object is an instance of AccessKeysConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessKeysConfiguration;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The number of days until the next key rotation.
     */
    readonly daysUntilNextRotation: pulumi.Output<number>;
    /**
     * The number of days between key rotations.
     */
    readonly keyRotationIntervalDays: pulumi.Output<number>;
    /**
     * The timestamp of the previous key rotation.
     */
    readonly lastKeyRotationAt: pulumi.Output<string>;
    /**
     * Create a AccessKeysConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated cloudflare.index/accesskeysconfiguration.AccessKeysConfiguration has been deprecated in favor of cloudflare.index/zerotrustaccesskeyconfiguration.ZeroTrustAccessKeyConfiguration */
    constructor(name: string, args: AccessKeysConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessKeysConfiguration resources.
 */
export interface AccessKeysConfigurationState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The number of days until the next key rotation.
     */
    daysUntilNextRotation?: pulumi.Input<number>;
    /**
     * The number of days between key rotations.
     */
    keyRotationIntervalDays?: pulumi.Input<number>;
    /**
     * The timestamp of the previous key rotation.
     */
    lastKeyRotationAt?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccessKeysConfiguration resource.
 */
export interface AccessKeysConfigurationArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * The number of days between key rotations.
     */
    keyRotationIntervalDays: pulumi.Input<number>;
}
