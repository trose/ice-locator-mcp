import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersCustomDomains = cloudflare.getWorkersCustomDomains({
 *     accountId: "9a7806061c88ada191ed06f989cc3dac",
 *     environment: "production",
 *     hostname: "foo.example.com",
 *     service: "foo",
 *     zoneId: "593c9c94de529bbbfaac7c53ced0447d",
 *     zoneName: "example.com",
 * });
 * ```
 */
export declare function getWorkersCustomDomains(args: GetWorkersCustomDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkersCustomDomainsResult>;
/**
 * A collection of arguments for invoking getWorkersCustomDomains.
 */
export interface GetWorkersCustomDomainsArgs {
    /**
     * Identifer of the account.
     */
    accountId: string;
    /**
     * Worker environment associated with the zone and hostname.
     */
    environment?: string;
    /**
     * Hostname of the Worker Domain.
     */
    hostname?: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * Worker service associated with the zone and hostname.
     */
    service?: string;
    /**
     * Identifier of the zone.
     */
    zoneId?: string;
    /**
     * Name of the zone.
     */
    zoneName?: string;
}
/**
 * A collection of values returned by getWorkersCustomDomains.
 */
export interface GetWorkersCustomDomainsResult {
    /**
     * Identifer of the account.
     */
    readonly accountId: string;
    /**
     * Worker environment associated with the zone and hostname.
     */
    readonly environment?: string;
    /**
     * Hostname of the Worker Domain.
     */
    readonly hostname?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetWorkersCustomDomainsResult[];
    /**
     * Worker service associated with the zone and hostname.
     */
    readonly service?: string;
    /**
     * Identifier of the zone.
     */
    readonly zoneId?: string;
    /**
     * Name of the zone.
     */
    readonly zoneName?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersCustomDomains = cloudflare.getWorkersCustomDomains({
 *     accountId: "9a7806061c88ada191ed06f989cc3dac",
 *     environment: "production",
 *     hostname: "foo.example.com",
 *     service: "foo",
 *     zoneId: "593c9c94de529bbbfaac7c53ced0447d",
 *     zoneName: "example.com",
 * });
 * ```
 */
export declare function getWorkersCustomDomainsOutput(args: GetWorkersCustomDomainsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkersCustomDomainsResult>;
/**
 * A collection of arguments for invoking getWorkersCustomDomains.
 */
export interface GetWorkersCustomDomainsOutputArgs {
    /**
     * Identifer of the account.
     */
    accountId: pulumi.Input<string>;
    /**
     * Worker environment associated with the zone and hostname.
     */
    environment?: pulumi.Input<string>;
    /**
     * Hostname of the Worker Domain.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * Worker service associated with the zone and hostname.
     */
    service?: pulumi.Input<string>;
    /**
     * Identifier of the zone.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * Name of the zone.
     */
    zoneName?: pulumi.Input<string>;
}
