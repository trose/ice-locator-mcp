import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 */
export declare class MagicNetworkMonitoringConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing MagicNetworkMonitoringConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MagicNetworkMonitoringConfigurationState, opts?: pulumi.CustomResourceOptions): MagicNetworkMonitoringConfiguration;
    /**
     * Returns true if the given object is an instance of MagicNetworkMonitoringConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MagicNetworkMonitoringConfiguration;
    readonly accountId: pulumi.Output<string>;
    /**
     * Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
     */
    readonly defaultSampling: pulumi.Output<number>;
    /**
     * The account name.
     */
    readonly name: pulumi.Output<string>;
    readonly routerIps: pulumi.Output<string[] | undefined>;
    readonly warpDevices: pulumi.Output<outputs.MagicNetworkMonitoringConfigurationWarpDevice[] | undefined>;
    /**
     * Create a MagicNetworkMonitoringConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MagicNetworkMonitoringConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MagicNetworkMonitoringConfiguration resources.
 */
export interface MagicNetworkMonitoringConfigurationState {
    accountId?: pulumi.Input<string>;
    /**
     * Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
     */
    defaultSampling?: pulumi.Input<number>;
    /**
     * The account name.
     */
    name?: pulumi.Input<string>;
    routerIps?: pulumi.Input<pulumi.Input<string>[]>;
    warpDevices?: pulumi.Input<pulumi.Input<inputs.MagicNetworkMonitoringConfigurationWarpDevice>[]>;
}
/**
 * The set of arguments for constructing a MagicNetworkMonitoringConfiguration resource.
 */
export interface MagicNetworkMonitoringConfigurationArgs {
    accountId: pulumi.Input<string>;
    /**
     * Fallback sampling rate of flow messages being sent in packets per second. This should match the packet sampling rate configured on the router.
     */
    defaultSampling?: pulumi.Input<number>;
    /**
     * The account name.
     */
    name: pulumi.Input<string>;
    routerIps?: pulumi.Input<pulumi.Input<string>[]>;
    warpDevices?: pulumi.Input<pulumi.Input<inputs.MagicNetworkMonitoringConfigurationWarpDevice>[]>;
}
