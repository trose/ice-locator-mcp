import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersKv = new cloudflare.WorkersKv("example_workers_kv", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     namespaceId: "0f2ac74b498b48028cb68387c421e279",
 *     keyName: "My-Key",
 *     value: "Some Value",
 *     metadata: {},
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersKv:WorkersKv example '<account_id>/<namespace_id>/<key_name>'
 * ```
 */
export declare class WorkersKv extends pulumi.CustomResource {
    /**
     * Get an existing WorkersKv resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersKvState, opts?: pulumi.CustomResourceOptions): WorkersKv;
    /**
     * Returns true if the given object is an instance of WorkersKv.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkersKv;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
     */
    readonly keyName: pulumi.Output<string>;
    readonly metadata: pulumi.Output<string | undefined>;
    /**
     * Namespace identifier tag.
     */
    readonly namespaceId: pulumi.Output<string>;
    /**
     * A byte sequence to be stored, up to 25 MiB in length.
     */
    readonly value: pulumi.Output<string>;
    /**
     * Create a WorkersKv resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersKvArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkersKv resources.
 */
export interface WorkersKvState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
     */
    keyName?: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
    /**
     * Namespace identifier tag.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * A byte sequence to be stored, up to 25 MiB in length.
     */
    value?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WorkersKv resource.
 */
export interface WorkersKvArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.
     */
    keyName: pulumi.Input<string>;
    metadata?: pulumi.Input<string>;
    /**
     * Namespace identifier tag.
     */
    namespaceId: pulumi.Input<string>;
    /**
     * A byte sequence to be stored, up to 25 MiB in length.
     */
    value: pulumi.Input<string>;
}
