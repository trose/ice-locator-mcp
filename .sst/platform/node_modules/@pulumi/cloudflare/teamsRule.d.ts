import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/teamsRule:TeamsRule example '<account_id>/<rule_id>'
 * ```
 *
 * @deprecated cloudflare.index/teamsrule.TeamsRule has been deprecated in favor of cloudflare.index/zerotrustgatewaypolicy.ZeroTrustGatewayPolicy
 */
export declare class TeamsRule extends pulumi.CustomResource {
    /**
     * Get an existing TeamsRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeamsRuleState, opts?: pulumi.CustomResourceOptions): TeamsRule;
    /**
     * Returns true if the given object is an instance of TeamsRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TeamsRule;
    readonly accountId: pulumi.Output<string>;
    /**
     * The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
     * Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
     */
    readonly action: pulumi.Output<string>;
    readonly createdAt: pulumi.Output<string>;
    /**
     * Date of deletion, if any.
     */
    readonly deletedAt: pulumi.Output<string>;
    /**
     * The description of the rule.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The wirefilter expression used for device posture check matching.
     */
    readonly devicePosture: pulumi.Output<string>;
    /**
     * True if the rule is enabled.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The expiration time stamp and default duration of a DNS policy. Takes
     * precedence over the policy's `schedule` configuration, if any.
     */
    readonly expiration: pulumi.Output<outputs.TeamsRuleExpiration>;
    /**
     * The protocol or layer to evaluate the traffic, identity, and device posture expressions.
     */
    readonly filters: pulumi.Output<string[] | undefined>;
    /**
     * The wirefilter expression used for identity matching.
     */
    readonly identity: pulumi.Output<string>;
    /**
     * The name of the rule.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The rule cannot be shared via the Orgs API
     */
    readonly notSharable: pulumi.Output<boolean>;
    readonly precedence: pulumi.Output<number | undefined>;
    /**
     * The rule was shared via the Orgs API and cannot be edited by the current account
     */
    readonly readOnly: pulumi.Output<boolean>;
    /**
     * Additional settings that modify the rule's action.
     */
    readonly ruleSettings: pulumi.Output<outputs.TeamsRuleRuleSettings>;
    /**
     * The schedule for activating DNS policies. This does not apply to HTTP or network policies.
     */
    readonly schedule: pulumi.Output<outputs.TeamsRuleSchedule>;
    /**
     * account tag of account that created the rule
     */
    readonly sourceAccount: pulumi.Output<string>;
    /**
     * The wirefilter expression used for traffic matching.
     */
    readonly traffic: pulumi.Output<string>;
    readonly updatedAt: pulumi.Output<string>;
    /**
     * version number of the rule
     */
    readonly version: pulumi.Output<number>;
    /**
     * Warning for a misconfigured rule, if any.
     */
    readonly warningStatus: pulumi.Output<string>;
    /**
     * Create a TeamsRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated cloudflare.index/teamsrule.TeamsRule has been deprecated in favor of cloudflare.index/zerotrustgatewaypolicy.ZeroTrustGatewayPolicy */
    constructor(name: string, args: TeamsRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TeamsRule resources.
 */
export interface TeamsRuleState {
    accountId?: pulumi.Input<string>;
    /**
     * The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
     * Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
     */
    action?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    /**
     * Date of deletion, if any.
     */
    deletedAt?: pulumi.Input<string>;
    /**
     * The description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The wirefilter expression used for device posture check matching.
     */
    devicePosture?: pulumi.Input<string>;
    /**
     * True if the rule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The expiration time stamp and default duration of a DNS policy. Takes
     * precedence over the policy's `schedule` configuration, if any.
     */
    expiration?: pulumi.Input<inputs.TeamsRuleExpiration>;
    /**
     * The protocol or layer to evaluate the traffic, identity, and device posture expressions.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The wirefilter expression used for identity matching.
     */
    identity?: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * The rule cannot be shared via the Orgs API
     */
    notSharable?: pulumi.Input<boolean>;
    precedence?: pulumi.Input<number>;
    /**
     * The rule was shared via the Orgs API and cannot be edited by the current account
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Additional settings that modify the rule's action.
     */
    ruleSettings?: pulumi.Input<inputs.TeamsRuleRuleSettings>;
    /**
     * The schedule for activating DNS policies. This does not apply to HTTP or network policies.
     */
    schedule?: pulumi.Input<inputs.TeamsRuleSchedule>;
    /**
     * account tag of account that created the rule
     */
    sourceAccount?: pulumi.Input<string>;
    /**
     * The wirefilter expression used for traffic matching.
     */
    traffic?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
    /**
     * version number of the rule
     */
    version?: pulumi.Input<number>;
    /**
     * Warning for a misconfigured rule, if any.
     */
    warningStatus?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TeamsRule resource.
 */
export interface TeamsRuleArgs {
    accountId: pulumi.Input<string>;
    /**
     * The action to perform when the associated traffic, identity, and device posture expressions are either absent or evaluate to `true`.
     * Available values: "on", "off", "allow", "block", "scan", "noscan", "safesearch", "ytrestricted", "isolate", "noisolate", "override", "l4Override", "egress", "resolve", "quarantine", "redirect".
     */
    action: pulumi.Input<string>;
    /**
     * The description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The wirefilter expression used for device posture check matching.
     */
    devicePosture?: pulumi.Input<string>;
    /**
     * True if the rule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The expiration time stamp and default duration of a DNS policy. Takes
     * precedence over the policy's `schedule` configuration, if any.
     */
    expiration?: pulumi.Input<inputs.TeamsRuleExpiration>;
    /**
     * The protocol or layer to evaluate the traffic, identity, and device posture expressions.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The wirefilter expression used for identity matching.
     */
    identity?: pulumi.Input<string>;
    /**
     * The name of the rule.
     */
    name: pulumi.Input<string>;
    precedence?: pulumi.Input<number>;
    /**
     * Additional settings that modify the rule's action.
     */
    ruleSettings?: pulumi.Input<inputs.TeamsRuleRuleSettings>;
    /**
     * The schedule for activating DNS policies. This does not apply to HTTP or network policies.
     */
    schedule?: pulumi.Input<inputs.TeamsRuleSchedule>;
    /**
     * The wirefilter expression used for traffic matching.
     */
    traffic?: pulumi.Input<string>;
}
