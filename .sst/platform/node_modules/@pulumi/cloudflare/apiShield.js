"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiShield = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShield = new cloudflare.ApiShield("example_api_shield", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     authIdCharacteristics: [{
 *         name: "authorization",
 *         type: "header",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/apiShield:ApiShield example '<zone_id>'
 * ```
 */
class ApiShield extends pulumi.CustomResource {
    /**
     * Get an existing ApiShield resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApiShield(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApiShield.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiShield.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["authIdCharacteristics"] = state ? state.authIdCharacteristics : undefined;
            resourceInputs["errors"] = state ? state.errors : undefined;
            resourceInputs["messages"] = state ? state.messages : undefined;
            resourceInputs["success"] = state ? state.success : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.authIdCharacteristics === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authIdCharacteristics'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["authIdCharacteristics"] = args ? args.authIdCharacteristics : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["messages"] = undefined /*out*/;
            resourceInputs["success"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiShield.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ApiShield = ApiShield;
/** @internal */
ApiShield.__pulumiType = 'cloudflare:index/apiShield:ApiShield';
//# sourceMappingURL=apiShield.js.map