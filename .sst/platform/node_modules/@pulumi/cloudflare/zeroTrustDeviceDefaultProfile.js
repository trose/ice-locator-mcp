"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZeroTrustDeviceDefaultProfile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDeviceDefaultProfile = new cloudflare.ZeroTrustDeviceDefaultProfile("example_zero_trust_device_default_profile", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     allowModeSwitch: true,
 *     allowUpdates: true,
 *     allowedToLeave: true,
 *     autoConnect: 0,
 *     captivePortal: 180,
 *     disableAutoFallback: true,
 *     excludes: [{
 *         address: "192.0.2.0/24",
 *         description: "Exclude testing domains from the tunnel",
 *     }],
 *     excludeOfficeIps: true,
 *     includes: [{
 *         address: "192.0.2.0/24",
 *         description: "Include testing domains in the tunnel",
 *     }],
 *     lanAllowMinutes: 30,
 *     lanAllowSubnetSize: 24,
 *     registerInterfaceIpWithDns: true,
 *     sccmVpnBoundarySupport: false,
 *     serviceModeV2: {
 *         mode: "proxy",
 *         port: 3000,
 *     },
 *     supportUrl: "https://1.1.1.1/help",
 *     switchLocked: true,
 *     tunnelProtocol: "wireguard",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDeviceDefaultProfile:ZeroTrustDeviceDefaultProfile example '<account_id>'
 * ```
 */
class ZeroTrustDeviceDefaultProfile extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDeviceDefaultProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ZeroTrustDeviceDefaultProfile(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ZeroTrustDeviceDefaultProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDeviceDefaultProfile.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["allowModeSwitch"] = state ? state.allowModeSwitch : undefined;
            resourceInputs["allowUpdates"] = state ? state.allowUpdates : undefined;
            resourceInputs["allowedToLeave"] = state ? state.allowedToLeave : undefined;
            resourceInputs["autoConnect"] = state ? state.autoConnect : undefined;
            resourceInputs["captivePortal"] = state ? state.captivePortal : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["disableAutoFallback"] = state ? state.disableAutoFallback : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["excludeOfficeIps"] = state ? state.excludeOfficeIps : undefined;
            resourceInputs["excludes"] = state ? state.excludes : undefined;
            resourceInputs["fallbackDomains"] = state ? state.fallbackDomains : undefined;
            resourceInputs["gatewayUniqueId"] = state ? state.gatewayUniqueId : undefined;
            resourceInputs["includes"] = state ? state.includes : undefined;
            resourceInputs["lanAllowMinutes"] = state ? state.lanAllowMinutes : undefined;
            resourceInputs["lanAllowSubnetSize"] = state ? state.lanAllowSubnetSize : undefined;
            resourceInputs["registerInterfaceIpWithDns"] = state ? state.registerInterfaceIpWithDns : undefined;
            resourceInputs["sccmVpnBoundarySupport"] = state ? state.sccmVpnBoundarySupport : undefined;
            resourceInputs["serviceModeV2"] = state ? state.serviceModeV2 : undefined;
            resourceInputs["supportUrl"] = state ? state.supportUrl : undefined;
            resourceInputs["switchLocked"] = state ? state.switchLocked : undefined;
            resourceInputs["tunnelProtocol"] = state ? state.tunnelProtocol : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["allowModeSwitch"] = args ? args.allowModeSwitch : undefined;
            resourceInputs["allowUpdates"] = args ? args.allowUpdates : undefined;
            resourceInputs["allowedToLeave"] = args ? args.allowedToLeave : undefined;
            resourceInputs["autoConnect"] = args ? args.autoConnect : undefined;
            resourceInputs["captivePortal"] = args ? args.captivePortal : undefined;
            resourceInputs["disableAutoFallback"] = args ? args.disableAutoFallback : undefined;
            resourceInputs["excludeOfficeIps"] = args ? args.excludeOfficeIps : undefined;
            resourceInputs["excludes"] = args ? args.excludes : undefined;
            resourceInputs["includes"] = args ? args.includes : undefined;
            resourceInputs["lanAllowMinutes"] = args ? args.lanAllowMinutes : undefined;
            resourceInputs["lanAllowSubnetSize"] = args ? args.lanAllowSubnetSize : undefined;
            resourceInputs["registerInterfaceIpWithDns"] = args ? args.registerInterfaceIpWithDns : undefined;
            resourceInputs["sccmVpnBoundarySupport"] = args ? args.sccmVpnBoundarySupport : undefined;
            resourceInputs["serviceModeV2"] = args ? args.serviceModeV2 : undefined;
            resourceInputs["supportUrl"] = args ? args.supportUrl : undefined;
            resourceInputs["switchLocked"] = args ? args.switchLocked : undefined;
            resourceInputs["tunnelProtocol"] = args ? args.tunnelProtocol : undefined;
            resourceInputs["default"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["fallbackDomains"] = undefined /*out*/;
            resourceInputs["gatewayUniqueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const aliasOpts = { aliases: [{ type: "cloudflare:index/deviceSettingsPolicy:DeviceSettingsPolicy" }, { type: "cloudflare:index/splitTunnel:SplitTunnel" }] };
        opts = pulumi.mergeOptions(opts, aliasOpts);
        super(ZeroTrustDeviceDefaultProfile.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ZeroTrustDeviceDefaultProfile = ZeroTrustDeviceDefaultProfile;
/** @internal */
ZeroTrustDeviceDefaultProfile.__pulumiType = 'cloudflare:index/zeroTrustDeviceDefaultProfile:ZeroTrustDeviceDefaultProfile';
//# sourceMappingURL=zeroTrustDeviceDefaultProfile.js.map