import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWeb3Hostname = new cloudflare.Web3Hostname("example_web3_hostname", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "gateway.example.com",
 *     target: "ipfs",
 *     description: "This is my IPFS gateway.",
 *     dnslink: "/ipns/onboarding.ipfs.cloudflare.com",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/web3Hostname:Web3Hostname example '<zone_id>/<identifier>'
 * ```
 */
export declare class Web3Hostname extends pulumi.CustomResource {
    /**
     * Get an existing Web3Hostname resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Web3HostnameState, opts?: pulumi.CustomResourceOptions): Web3Hostname;
    /**
     * Returns true if the given object is an instance of Web3Hostname.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Web3Hostname;
    readonly createdOn: pulumi.Output<string>;
    /**
     * Specify an optional description of the hostname.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Specify the DNSLink value used if the target is ipfs.
     */
    readonly dnslink: pulumi.Output<string | undefined>;
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * Specify the hostname that points to the target gateway via CNAME.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the status of the hostname's activation.
     * Available values: "active", "pending", "deleting", "error".
     */
    readonly status: pulumi.Output<string>;
    /**
     * Specify the target gateway of the hostname.
     * Available values: "ethereum", "ipfs", "ipfs*universal*path".
     */
    readonly target: pulumi.Output<string>;
    /**
     * Specify the identifier of the hostname.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a Web3Hostname resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Web3HostnameArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Web3Hostname resources.
 */
export interface Web3HostnameState {
    createdOn?: pulumi.Input<string>;
    /**
     * Specify an optional description of the hostname.
     */
    description?: pulumi.Input<string>;
    /**
     * Specify the DNSLink value used if the target is ipfs.
     */
    dnslink?: pulumi.Input<string>;
    modifiedOn?: pulumi.Input<string>;
    /**
     * Specify the hostname that points to the target gateway via CNAME.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the status of the hostname's activation.
     * Available values: "active", "pending", "deleting", "error".
     */
    status?: pulumi.Input<string>;
    /**
     * Specify the target gateway of the hostname.
     * Available values: "ethereum", "ipfs", "ipfs*universal*path".
     */
    target?: pulumi.Input<string>;
    /**
     * Specify the identifier of the hostname.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Web3Hostname resource.
 */
export interface Web3HostnameArgs {
    /**
     * Specify an optional description of the hostname.
     */
    description?: pulumi.Input<string>;
    /**
     * Specify the DNSLink value used if the target is ipfs.
     */
    dnslink?: pulumi.Input<string>;
    /**
     * Specify the hostname that points to the target gateway via CNAME.
     */
    name: pulumi.Input<string>;
    /**
     * Specify the target gateway of the hostname.
     * Available values: "ethereum", "ipfs", "ipfs*universal*path".
     */
    target: pulumi.Input<string>;
    /**
     * Specify the identifier of the hostname.
     */
    zoneId: pulumi.Input<string>;
}
