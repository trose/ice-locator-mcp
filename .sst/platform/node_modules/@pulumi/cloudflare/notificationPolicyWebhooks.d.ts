import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleNotificationPolicyWebhooks = new cloudflare.NotificationPolicyWebhooks("example_notification_policy_webhooks", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "Slack Webhook",
 *     url: "https://hooks.slack.com/services/Ds3fdBFbV/456464Gdd",
 *     secret: "secret",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/notificationPolicyWebhooks:NotificationPolicyWebhooks example '<account_id>/<webhook_id>'
 * ```
 */
export declare class NotificationPolicyWebhooks extends pulumi.CustomResource {
    /**
     * Get an existing NotificationPolicyWebhooks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationPolicyWebhooksState, opts?: pulumi.CustomResourceOptions): NotificationPolicyWebhooks;
    /**
     * Returns true if the given object is an instance of NotificationPolicyWebhooks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NotificationPolicyWebhooks;
    /**
     * The account id
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Timestamp of when the webhook destination was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
     */
    readonly lastFailure: pulumi.Output<string>;
    /**
     * Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
     */
    readonly lastSuccess: pulumi.Output<string>;
    /**
     * The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Optional secret that will be passed in the `cf-webhook-auth` header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
     */
    readonly secret: pulumi.Output<string | undefined>;
    /**
     * Type of webhook endpoint.
     * Available values: "slack", "generic", "gchat".
     */
    readonly type: pulumi.Output<string>;
    /**
     * The POST endpoint to call when dispatching a notification.
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a NotificationPolicyWebhooks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationPolicyWebhooksArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NotificationPolicyWebhooks resources.
 */
export interface NotificationPolicyWebhooksState {
    /**
     * The account id
     */
    accountId?: pulumi.Input<string>;
    /**
     * Timestamp of when the webhook destination was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Timestamp of the last time an attempt to dispatch a notification to this webhook failed.
     */
    lastFailure?: pulumi.Input<string>;
    /**
     * Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.
     */
    lastSuccess?: pulumi.Input<string>;
    /**
     * The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional secret that will be passed in the `cf-webhook-auth` header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
     */
    secret?: pulumi.Input<string>;
    /**
     * Type of webhook endpoint.
     * Available values: "slack", "generic", "gchat".
     */
    type?: pulumi.Input<string>;
    /**
     * The POST endpoint to call when dispatching a notification.
     */
    url?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a NotificationPolicyWebhooks resource.
 */
export interface NotificationPolicyWebhooksArgs {
    /**
     * The account id
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of the webhook destination. This will be included in the request body when you receive a webhook notification.
     */
    name: pulumi.Input<string>;
    /**
     * Optional secret that will be passed in the `cf-webhook-auth` header when dispatching generic webhook notifications or formatted for supported destinations. Secrets are not returned in any API response body.
     */
    secret?: pulumi.Input<string>;
    /**
     * The POST endpoint to call when dispatching a notification.
     */
    url: pulumi.Input<string>;
}
