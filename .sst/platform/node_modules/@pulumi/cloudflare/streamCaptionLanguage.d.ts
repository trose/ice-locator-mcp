import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleStreamCaptionLanguage = new cloudflare.StreamCaptionLanguage("example_stream_caption_language", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     identifier: "ea95132c15732412d22c1476fa83f27a",
 *     language: "tr",
 * });
 * ```
 */
export declare class StreamCaptionLanguage extends pulumi.CustomResource {
    /**
     * Get an existing StreamCaptionLanguage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamCaptionLanguageState, opts?: pulumi.CustomResourceOptions): StreamCaptionLanguage;
    /**
     * Returns true if the given object is an instance of StreamCaptionLanguage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StreamCaptionLanguage;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The WebVTT file containing the caption or subtitle content.
     */
    readonly file: pulumi.Output<string | undefined>;
    /**
     * Whether the caption was generated via AI.
     */
    readonly generated: pulumi.Output<boolean>;
    /**
     * A Cloudflare-generated unique identifier for a media item.
     */
    readonly identifier: pulumi.Output<string>;
    /**
     * The language label displayed in the native language to users.
     */
    readonly label: pulumi.Output<string>;
    /**
     * The language tag in BCP 47 format.
     */
    readonly language: pulumi.Output<string>;
    /**
     * The status of a generated caption.
     * Available values: "ready", "inprogress", "error".
     */
    readonly status: pulumi.Output<string>;
    /**
     * Create a StreamCaptionLanguage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamCaptionLanguageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering StreamCaptionLanguage resources.
 */
export interface StreamCaptionLanguageState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The WebVTT file containing the caption or subtitle content.
     */
    file?: pulumi.Input<string>;
    /**
     * Whether the caption was generated via AI.
     */
    generated?: pulumi.Input<boolean>;
    /**
     * A Cloudflare-generated unique identifier for a media item.
     */
    identifier?: pulumi.Input<string>;
    /**
     * The language label displayed in the native language to users.
     */
    label?: pulumi.Input<string>;
    /**
     * The language tag in BCP 47 format.
     */
    language?: pulumi.Input<string>;
    /**
     * The status of a generated caption.
     * Available values: "ready", "inprogress", "error".
     */
    status?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a StreamCaptionLanguage resource.
 */
export interface StreamCaptionLanguageArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * The WebVTT file containing the caption or subtitle content.
     */
    file?: pulumi.Input<string>;
    /**
     * A Cloudflare-generated unique identifier for a media item.
     */
    identifier: pulumi.Input<string>;
    /**
     * The language tag in BCP 47 format.
     */
    language: pulumi.Input<string>;
}
