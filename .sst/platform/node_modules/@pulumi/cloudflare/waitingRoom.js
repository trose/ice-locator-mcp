"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WaitingRoom = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWaitingRoom = new cloudflare.WaitingRoom("example_waiting_room", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     host: "shop.example.com",
 *     name: "production_webinar",
 *     newUsersPerMinute: 200,
 *     totalActiveUsers: 200,
 *     additionalRoutes: [{
 *         host: "shop2.example.com",
 *         path: "/shop2/checkout",
 *     }],
 *     cookieAttributes: {
 *         samesite: "auto",
 *         secure: "auto",
 *     },
 *     cookieSuffix: "abcd",
 *     customPageHtml: "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
 *     defaultTemplateLanguage: "es-ES",
 *     description: "Production - DO NOT MODIFY",
 *     disableSessionRenewal: false,
 *     enabledOriginCommands: ["revoke"],
 *     jsonResponseEnabled: false,
 *     path: "/shop/checkout",
 *     queueAll: true,
 *     queueingMethod: "fifo",
 *     queueingStatusCode: 202,
 *     sessionDuration: 1,
 *     suspended: true,
 *     turnstileAction: "log",
 *     turnstileMode: "off",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/waitingRoom:WaitingRoom example '<zone_id>/<waiting_room_id>'
 * ```
 */
class WaitingRoom extends pulumi.CustomResource {
    /**
     * Get an existing WaitingRoom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WaitingRoom(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WaitingRoom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WaitingRoom.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["additionalRoutes"] = state ? state.additionalRoutes : undefined;
            resourceInputs["cookieAttributes"] = state ? state.cookieAttributes : undefined;
            resourceInputs["cookieSuffix"] = state ? state.cookieSuffix : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["customPageHtml"] = state ? state.customPageHtml : undefined;
            resourceInputs["defaultTemplateLanguage"] = state ? state.defaultTemplateLanguage : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableSessionRenewal"] = state ? state.disableSessionRenewal : undefined;
            resourceInputs["enabledOriginCommands"] = state ? state.enabledOriginCommands : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["jsonResponseEnabled"] = state ? state.jsonResponseEnabled : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newUsersPerMinute"] = state ? state.newUsersPerMinute : undefined;
            resourceInputs["nextEventPrequeueStartTime"] = state ? state.nextEventPrequeueStartTime : undefined;
            resourceInputs["nextEventStartTime"] = state ? state.nextEventStartTime : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["queueAll"] = state ? state.queueAll : undefined;
            resourceInputs["queueingMethod"] = state ? state.queueingMethod : undefined;
            resourceInputs["queueingStatusCode"] = state ? state.queueingStatusCode : undefined;
            resourceInputs["sessionDuration"] = state ? state.sessionDuration : undefined;
            resourceInputs["suspended"] = state ? state.suspended : undefined;
            resourceInputs["totalActiveUsers"] = state ? state.totalActiveUsers : undefined;
            resourceInputs["turnstileAction"] = state ? state.turnstileAction : undefined;
            resourceInputs["turnstileMode"] = state ? state.turnstileMode : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.newUsersPerMinute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'newUsersPerMinute'");
            }
            if ((!args || args.totalActiveUsers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'totalActiveUsers'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["additionalRoutes"] = args ? args.additionalRoutes : undefined;
            resourceInputs["cookieAttributes"] = args ? args.cookieAttributes : undefined;
            resourceInputs["cookieSuffix"] = args ? args.cookieSuffix : undefined;
            resourceInputs["customPageHtml"] = args ? args.customPageHtml : undefined;
            resourceInputs["defaultTemplateLanguage"] = args ? args.defaultTemplateLanguage : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableSessionRenewal"] = args ? args.disableSessionRenewal : undefined;
            resourceInputs["enabledOriginCommands"] = args ? args.enabledOriginCommands : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["jsonResponseEnabled"] = args ? args.jsonResponseEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newUsersPerMinute"] = args ? args.newUsersPerMinute : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["queueAll"] = args ? args.queueAll : undefined;
            resourceInputs["queueingMethod"] = args ? args.queueingMethod : undefined;
            resourceInputs["queueingStatusCode"] = args ? args.queueingStatusCode : undefined;
            resourceInputs["sessionDuration"] = args ? args.sessionDuration : undefined;
            resourceInputs["suspended"] = args ? args.suspended : undefined;
            resourceInputs["totalActiveUsers"] = args ? args.totalActiveUsers : undefined;
            resourceInputs["turnstileAction"] = args ? args.turnstileAction : undefined;
            resourceInputs["turnstileMode"] = args ? args.turnstileMode : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
            resourceInputs["nextEventPrequeueStartTime"] = undefined /*out*/;
            resourceInputs["nextEventStartTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WaitingRoom.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WaitingRoom = WaitingRoom;
/** @internal */
WaitingRoom.__pulumiType = 'cloudflare:index/waitingRoom:WaitingRoom';
//# sourceMappingURL=waitingRoom.js.map