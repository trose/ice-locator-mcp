"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getZeroTrustTunnelCloudflaredRoutesOutput = exports.getZeroTrustTunnelCloudflaredRoutes = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflaredRoutes = cloudflare.getZeroTrustTunnelCloudflaredRoutes({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     comment: "Example comment for this route.",
 *     existedAt: "2019-10-12T07%3A20%3A50.52Z",
 *     isDeleted: true,
 *     networkSubset: "172.16.0.0/16",
 *     networkSuperset: "172.16.0.0/16",
 *     routeId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     tunTypes: ["cfd_tunnel"],
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     virtualNetworkId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
function getZeroTrustTunnelCloudflaredRoutes(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", {
        "accountId": args.accountId,
        "comment": args.comment,
        "existedAt": args.existedAt,
        "isDeleted": args.isDeleted,
        "maxItems": args.maxItems,
        "networkSubset": args.networkSubset,
        "networkSuperset": args.networkSuperset,
        "routeId": args.routeId,
        "tunTypes": args.tunTypes,
        "tunnelId": args.tunnelId,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}
exports.getZeroTrustTunnelCloudflaredRoutes = getZeroTrustTunnelCloudflaredRoutes;
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustTunnelCloudflaredRoutes = cloudflare.getZeroTrustTunnelCloudflaredRoutes({
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     comment: "Example comment for this route.",
 *     existedAt: "2019-10-12T07%3A20%3A50.52Z",
 *     isDeleted: true,
 *     networkSubset: "172.16.0.0/16",
 *     networkSuperset: "172.16.0.0/16",
 *     routeId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     tunTypes: ["cfd_tunnel"],
 *     tunnelId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 *     virtualNetworkId: "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
function getZeroTrustTunnelCloudflaredRoutesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getZeroTrustTunnelCloudflaredRoutes:getZeroTrustTunnelCloudflaredRoutes", {
        "accountId": args.accountId,
        "comment": args.comment,
        "existedAt": args.existedAt,
        "isDeleted": args.isDeleted,
        "maxItems": args.maxItems,
        "networkSubset": args.networkSubset,
        "networkSuperset": args.networkSuperset,
        "routeId": args.routeId,
        "tunTypes": args.tunTypes,
        "tunnelId": args.tunnelId,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}
exports.getZeroTrustTunnelCloudflaredRoutesOutput = getZeroTrustTunnelCloudflaredRoutesOutput;
//# sourceMappingURL=getZeroTrustTunnelCloudflaredRoutes.js.map