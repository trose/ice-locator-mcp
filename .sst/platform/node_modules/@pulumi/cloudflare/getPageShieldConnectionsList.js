"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPageShieldConnectionsListOutput = exports.getPageShieldConnectionsList = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldConnectionsList = cloudflare.getPageShieldConnectionsList({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     direction: "asc",
 *     excludeCdnCgi: true,
 *     excludeUrls: "blog.cloudflare.com,www.example",
 *     "export": "csv",
 *     hosts: "blog.cloudflare.com,www.example*,*cloudflare.com",
 *     orderBy: "first_seen_at",
 *     page: "2",
 *     pageUrl: "example.com/page,*&#47;checkout,example.com/*,*checkout*",
 *     perPage: 100,
 *     prioritizeMalicious: true,
 *     status: "active,inactive",
 *     urls: "blog.cloudflare.com,www.example",
 * });
 * ```
 */
function getPageShieldConnectionsList(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", {
        "direction": args.direction,
        "excludeCdnCgi": args.excludeCdnCgi,
        "excludeUrls": args.excludeUrls,
        "export": args.export,
        "hosts": args.hosts,
        "maxItems": args.maxItems,
        "orderBy": args.orderBy,
        "page": args.page,
        "pageUrl": args.pageUrl,
        "perPage": args.perPage,
        "prioritizeMalicious": args.prioritizeMalicious,
        "status": args.status,
        "urls": args.urls,
        "zoneId": args.zoneId,
    }, opts);
}
exports.getPageShieldConnectionsList = getPageShieldConnectionsList;
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const examplePageShieldConnectionsList = cloudflare.getPageShieldConnectionsList({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     direction: "asc",
 *     excludeCdnCgi: true,
 *     excludeUrls: "blog.cloudflare.com,www.example",
 *     "export": "csv",
 *     hosts: "blog.cloudflare.com,www.example*,*cloudflare.com",
 *     orderBy: "first_seen_at",
 *     page: "2",
 *     pageUrl: "example.com/page,*&#47;checkout,example.com/*,*checkout*",
 *     perPage: 100,
 *     prioritizeMalicious: true,
 *     status: "active,inactive",
 *     urls: "blog.cloudflare.com,www.example",
 * });
 * ```
 */
function getPageShieldConnectionsListOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getPageShieldConnectionsList:getPageShieldConnectionsList", {
        "direction": args.direction,
        "excludeCdnCgi": args.excludeCdnCgi,
        "excludeUrls": args.excludeUrls,
        "export": args.export,
        "hosts": args.hosts,
        "maxItems": args.maxItems,
        "orderBy": args.orderBy,
        "page": args.page,
        "pageUrl": args.pageUrl,
        "perPage": args.perPage,
        "prioritizeMalicious": args.prioritizeMalicious,
        "status": args.status,
        "urls": args.urls,
        "zoneId": args.zoneId,
    }, opts);
}
exports.getPageShieldConnectionsListOutput = getPageShieldConnectionsListOutput;
//# sourceMappingURL=getPageShieldConnectionsList.js.map