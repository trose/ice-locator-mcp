import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleRuleset = cloudflare.getRuleset({
 *     rulesetId: "2f2feab2026849078ba485f918791bdc",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export declare function getRuleset(args?: GetRulesetArgs, opts?: pulumi.InvokeOptions): Promise<GetRulesetResult>;
/**
 * A collection of arguments for invoking getRuleset.
 */
export interface GetRulesetArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: string;
    /**
     * The unique ID of the ruleset.
     */
    rulesetId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: string;
}
/**
 * A collection of values returned by getRuleset.
 */
export interface GetRulesetResult {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId?: string;
    /**
     * An informative description of the ruleset.
     */
    readonly description: string;
    /**
     * The unique ID of the ruleset.
     */
    readonly id: string;
    /**
     * The kind of the ruleset.
     * Available values: "managed", "custom", "root", "zone".
     */
    readonly kind: string;
    /**
     * The human-readable name of the ruleset.
     */
    readonly name: string;
    /**
     * The phase of the ruleset.
     * Available values: "ddos*l4", "ddos*l7", "http*config*settings", "http*custom*errors", "http*log*custom*fields", "http*ratelimit", "http*request*cache*settings", "http*request*dynamic*redirect", "http*request*firewall*custom", "http*request*firewall*managed", "http*request*late*transform", "http*request*origin", "http*request*redirect", "http*request*sanitize", "http*request*sbfm", "http*request*transform", "http*response*compression", "http*response*firewall*managed", "http*response*headers*transform", "magic*transit", "magic*transit*ids*managed", "magic*transit*managed", "magic*transit_ratelimit".
     */
    readonly phase: string;
    /**
     * The list of rules in the ruleset.
     */
    readonly rules: outputs.GetRulesetRule[];
    /**
     * The unique ID of the ruleset.
     */
    readonly rulesetId?: string;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleRuleset = cloudflare.getRuleset({
 *     rulesetId: "2f2feab2026849078ba485f918791bdc",
 *     accountId: "account_id",
 *     zoneId: "zone_id",
 * });
 * ```
 */
export declare function getRulesetOutput(args?: GetRulesetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRulesetResult>;
/**
 * A collection of arguments for invoking getRuleset.
 */
export interface GetRulesetOutputArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The unique ID of the ruleset.
     */
    rulesetId?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
