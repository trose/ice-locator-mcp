import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * > If you are using a `source` block configuration, you must first have a
 *    connected GitHub or GitLab account connected to Cloudflare. See the
 *    [Getting Started with Pages] documentation on how to link your accounts.
 *
 * ## Import
 *
 * !> It is not possible to import a pages project with secret environment variables. If you have a secret environment variable, you must remove it from your project before importing it.
 *
 * ```sh
 * $ pulumi import cloudflare:index/pagesProject:PagesProject example '<account_id>/<project_name>'
 * ```
 */
export declare class PagesProject extends pulumi.CustomResource {
    /**
     * Get an existing PagesProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PagesProjectState, opts?: pulumi.CustomResourceOptions): PagesProject;
    /**
     * Returns true if the given object is an instance of PagesProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PagesProject;
    /**
     * Identifier
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Configs for the project build process.
     */
    readonly buildConfig: pulumi.Output<outputs.PagesProjectBuildConfig | undefined>;
    /**
     * Most recent deployment to the repo.
     */
    readonly canonicalDeployment: pulumi.Output<outputs.PagesProjectCanonicalDeployment>;
    /**
     * When the project was created.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * Configs for deployments in a project.
     */
    readonly deploymentConfigs: pulumi.Output<outputs.PagesProjectDeploymentConfigs | undefined>;
    /**
     * A list of associated custom domains for the project.
     */
    readonly domains: pulumi.Output<string[]>;
    /**
     * Most recent deployment to the repo.
     */
    readonly latestDeployment: pulumi.Output<outputs.PagesProjectLatestDeployment>;
    /**
     * Name of the project.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Production branch of the project. Used to identify production deployments.
     */
    readonly productionBranch: pulumi.Output<string | undefined>;
    readonly source: pulumi.Output<outputs.PagesProjectSource | undefined>;
    /**
     * The Cloudflare subdomain associated with the project.
     */
    readonly subdomain: pulumi.Output<string>;
    /**
     * Create a PagesProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PagesProjectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PagesProject resources.
 */
export interface PagesProjectState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * Configs for the project build process.
     */
    buildConfig?: pulumi.Input<inputs.PagesProjectBuildConfig>;
    /**
     * Most recent deployment to the repo.
     */
    canonicalDeployment?: pulumi.Input<inputs.PagesProjectCanonicalDeployment>;
    /**
     * When the project was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Configs for deployments in a project.
     */
    deploymentConfigs?: pulumi.Input<inputs.PagesProjectDeploymentConfigs>;
    /**
     * A list of associated custom domains for the project.
     */
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Most recent deployment to the repo.
     */
    latestDeployment?: pulumi.Input<inputs.PagesProjectLatestDeployment>;
    /**
     * Name of the project.
     */
    name?: pulumi.Input<string>;
    /**
     * Production branch of the project. Used to identify production deployments.
     */
    productionBranch?: pulumi.Input<string>;
    source?: pulumi.Input<inputs.PagesProjectSource>;
    /**
     * The Cloudflare subdomain associated with the project.
     */
    subdomain?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PagesProject resource.
 */
export interface PagesProjectArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * Configs for the project build process.
     */
    buildConfig?: pulumi.Input<inputs.PagesProjectBuildConfig>;
    /**
     * Configs for deployments in a project.
     */
    deploymentConfigs?: pulumi.Input<inputs.PagesProjectDeploymentConfigs>;
    /**
     * Name of the project.
     */
    name: pulumi.Input<string>;
    /**
     * Production branch of the project. Used to identify production deployments.
     */
    productionBranch?: pulumi.Input<string>;
    source?: pulumi.Input<inputs.PagesProjectSource>;
}
