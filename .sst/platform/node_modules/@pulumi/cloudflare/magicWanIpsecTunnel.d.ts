import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicWanIpsecTunnel:MagicWanIpsecTunnel example '<account_id>/<ipsec_tunnel_id>'
 * ```
 */
export declare class MagicWanIpsecTunnel extends pulumi.CustomResource {
    /**
     * Get an existing MagicWanIpsecTunnel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MagicWanIpsecTunnelState, opts?: pulumi.CustomResourceOptions): MagicWanIpsecTunnel;
    /**
     * Returns true if the given object is an instance of MagicWanIpsecTunnel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MagicWanIpsecTunnel;
    /**
     * Identifier
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * When `true`, the tunnel can use a null-cipher (`ENCR_NULL`) in the ESP tunnel (Phase 2).
     */
    readonly allowNullCipher: pulumi.Output<boolean>;
    /**
     * The IP address assigned to the Cloudflare side of the IPsec tunnel.
     */
    readonly cloudflareEndpoint: pulumi.Output<string>;
    /**
     * The date and time the tunnel was created.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     */
    readonly customerEndpoint: pulumi.Output<string | undefined>;
    /**
     * An optional description forthe IPsec tunnel.
     */
    readonly description: pulumi.Output<string | undefined>;
    readonly healthCheck: pulumi.Output<outputs.MagicWanIpsecTunnelHealthCheck>;
    /**
     * A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     */
    readonly interfaceAddress: pulumi.Output<string>;
    /**
     * The date and time the tunnel was last modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A randomly generated or provided string for use in the IPsec tunnel.
     */
    readonly psk: pulumi.Output<string | undefined>;
    /**
     * The PSK metadata that includes when the PSK was generated.
     */
    readonly pskMetadata: pulumi.Output<outputs.MagicWanIpsecTunnelPskMetadata>;
    /**
     * If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     */
    readonly replayProtection: pulumi.Output<boolean>;
    /**
     * Create a MagicWanIpsecTunnel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MagicWanIpsecTunnelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MagicWanIpsecTunnel resources.
 */
export interface MagicWanIpsecTunnelState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * When `true`, the tunnel can use a null-cipher (`ENCR_NULL`) in the ESP tunnel (Phase 2).
     */
    allowNullCipher?: pulumi.Input<boolean>;
    /**
     * The IP address assigned to the Cloudflare side of the IPsec tunnel.
     */
    cloudflareEndpoint?: pulumi.Input<string>;
    /**
     * The date and time the tunnel was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     */
    customerEndpoint?: pulumi.Input<string>;
    /**
     * An optional description forthe IPsec tunnel.
     */
    description?: pulumi.Input<string>;
    healthCheck?: pulumi.Input<inputs.MagicWanIpsecTunnelHealthCheck>;
    /**
     * A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     */
    interfaceAddress?: pulumi.Input<string>;
    /**
     * The date and time the tunnel was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     */
    name?: pulumi.Input<string>;
    /**
     * A randomly generated or provided string for use in the IPsec tunnel.
     */
    psk?: pulumi.Input<string>;
    /**
     * The PSK metadata that includes when the PSK was generated.
     */
    pskMetadata?: pulumi.Input<inputs.MagicWanIpsecTunnelPskMetadata>;
    /**
     * If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     */
    replayProtection?: pulumi.Input<boolean>;
}
/**
 * The set of arguments for constructing a MagicWanIpsecTunnel resource.
 */
export interface MagicWanIpsecTunnelArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * The IP address assigned to the Cloudflare side of the IPsec tunnel.
     */
    cloudflareEndpoint: pulumi.Input<string>;
    /**
     * The IP address assigned to the customer side of the IPsec tunnel. Not required, but must be set for proactive traceroutes to work.
     */
    customerEndpoint?: pulumi.Input<string>;
    /**
     * An optional description forthe IPsec tunnel.
     */
    description?: pulumi.Input<string>;
    healthCheck?: pulumi.Input<inputs.MagicWanIpsecTunnelHealthCheck>;
    /**
     * A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.
     */
    interfaceAddress: pulumi.Input<string>;
    /**
     * The name of the IPsec tunnel. The name cannot share a name with other tunnels.
     */
    name: pulumi.Input<string>;
    /**
     * A randomly generated or provided string for use in the IPsec tunnel.
     */
    psk?: pulumi.Input<string>;
    /**
     * If `true`, then IPsec replay protection will be supported in the Cloudflare-to-customer direction.
     */
    replayProtection?: pulumi.Input<boolean>;
}
