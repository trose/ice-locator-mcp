import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCertificatePack = new cloudflare.CertificatePack("example_certificate_pack", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     certificateAuthority: "lets_encrypt",
 *     hosts: [
 *         "example.com",
 *         "*.example.com",
 *         "www.example.com",
 *     ],
 *     type: "advanced",
 *     validationMethod: "txt",
 *     validityDays: 14,
 *     cloudflareBranding: false,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/certificatePack:CertificatePack example '<zone_id>/<certificate_pack_id>'
 * ```
 *
 * While supported, importing isn't recommended and it is advised to replace the
 *
 * certificate entirely instead.
 */
export declare class CertificatePack extends pulumi.CustomResource {
    /**
     * Get an existing CertificatePack resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificatePackState, opts?: pulumi.CustomResourceOptions): CertificatePack;
    /**
     * Returns true if the given object is an instance of CertificatePack.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CertificatePack;
    /**
     * Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)
     * Available values: "google", "lets*encrypt", "ssl*com".
     */
    readonly certificateAuthority: pulumi.Output<string>;
    /**
     * Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.
     */
    readonly cloudflareBranding: pulumi.Output<boolean | undefined>;
    /**
     * Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.
     */
    readonly hosts: pulumi.Output<string[]>;
    /**
     * Status of certificate pack.
     * Available values: "initializing", "pending*validation", "deleted", "pending*issuance", "pending*deployment", "pending*deletion", "pending*expiration", "expired", "active", "initializing*timed*out", "validation*timed*out", "issuance*timed*out", "deployment*timed*out", "deletion*timed*out", "pending*cleanup", "staging*deployment", "staging*active", "deactivating", "inactive", "backup*issued", "holding*deployment".
     */
    readonly status: pulumi.Output<string>;
    /**
     * Type of certificate pack.
     * Available values: "advanced".
     */
    readonly type: pulumi.Output<string>;
    /**
     * Validation Method selected for the order.
     * Available values: "txt", "http", "email".
     */
    readonly validationMethod: pulumi.Output<string>;
    /**
     * Validity Days selected for the order.
     * Available values: 14, 30, 90, 365.
     */
    readonly validityDays: pulumi.Output<number>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a CertificatePack resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificatePackArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CertificatePack resources.
 */
export interface CertificatePackState {
    /**
     * Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)
     * Available values: "google", "lets*encrypt", "ssl*com".
     */
    certificateAuthority?: pulumi.Input<string>;
    /**
     * Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.
     */
    cloudflareBranding?: pulumi.Input<boolean>;
    /**
     * Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Status of certificate pack.
     * Available values: "initializing", "pending*validation", "deleted", "pending*issuance", "pending*deployment", "pending*deletion", "pending*expiration", "expired", "active", "initializing*timed*out", "validation*timed*out", "issuance*timed*out", "deployment*timed*out", "deletion*timed*out", "pending*cleanup", "staging*deployment", "staging*active", "deactivating", "inactive", "backup*issued", "holding*deployment".
     */
    status?: pulumi.Input<string>;
    /**
     * Type of certificate pack.
     * Available values: "advanced".
     */
    type?: pulumi.Input<string>;
    /**
     * Validation Method selected for the order.
     * Available values: "txt", "http", "email".
     */
    validationMethod?: pulumi.Input<string>;
    /**
     * Validity Days selected for the order.
     * Available values: 14, 30, 90, 365.
     */
    validityDays?: pulumi.Input<number>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CertificatePack resource.
 */
export interface CertificatePackArgs {
    /**
     * Certificate Authority selected for the order.  For information on any certificate authority specific details or restrictions [see this page for more details.](https://developers.cloudflare.com/ssl/reference/certificate-authorities)
     * Available values: "google", "lets*encrypt", "ssl*com".
     */
    certificateAuthority: pulumi.Input<string>;
    /**
     * Whether or not to add Cloudflare Branding for the order.  This will add a subdomain of sni.cloudflaressl.com as the Common Name if set to true.
     */
    cloudflareBranding?: pulumi.Input<boolean>;
    /**
     * Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.
     */
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of certificate pack.
     * Available values: "advanced".
     */
    type: pulumi.Input<string>;
    /**
     * Validation Method selected for the order.
     * Available values: "txt", "http", "email".
     */
    validationMethod: pulumi.Input<string>;
    /**
     * Validity Days selected for the order.
     * Available values: 14, 30, 90, 365.
     */
    validityDays: pulumi.Input<number>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
