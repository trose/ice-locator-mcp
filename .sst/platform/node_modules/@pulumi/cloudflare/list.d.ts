import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleList = new cloudflare.List("example_list", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     kind: "ip",
 *     name: "list1",
 *     description: "This is a note",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/list:List example '<account_id>/<list_id>'
 * ```
 */
export declare class List extends pulumi.CustomResource {
    /**
     * Get an existing List resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListState, opts?: pulumi.CustomResourceOptions): List;
    /**
     * Returns true if the given object is an instance of List.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is List;
    /**
     * The Account ID for this resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The RFC 3339 timestamp of when the list was created.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * An informative summary of the list.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: "ip", "redirect", "hostname", "asn".
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The RFC 3339 timestamp of when the list was last modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * An informative name for the list. Use this name in filter and rule expressions.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The number of items in the list.
     */
    readonly numItems: pulumi.Output<number>;
    /**
     * The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
     */
    readonly numReferencingFilters: pulumi.Output<number>;
    /**
     * Create a List resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering List resources.
 */
export interface ListState {
    /**
     * The Account ID for this resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The RFC 3339 timestamp of when the list was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * An informative summary of the list.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: "ip", "redirect", "hostname", "asn".
     */
    kind?: pulumi.Input<string>;
    /**
     * The RFC 3339 timestamp of when the list was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * An informative name for the list. Use this name in filter and rule expressions.
     */
    name?: pulumi.Input<string>;
    /**
     * The number of items in the list.
     */
    numItems?: pulumi.Input<number>;
    /**
     * The number of [filters](https://www.terraform.io/api/resources/filters/) referencing the list.
     */
    numReferencingFilters?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a List resource.
 */
export interface ListArgs {
    /**
     * The Account ID for this resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * An informative summary of the list.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of the list. Each type supports specific list items (IP addresses, ASNs, hostnames or redirects).
     * Available values: "ip", "redirect", "hostname", "asn".
     */
    kind: pulumi.Input<string>;
    /**
     * An informative name for the list. Use this name in filter and rule expressions.
     */
    name: pulumi.Input<string>;
}
