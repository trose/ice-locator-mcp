import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleUserAgentBlockingRule = new cloudflare.UserAgentBlockingRule("example_user_agent_blocking_rule", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     configuration: {
 *         target: "ua",
 *         value: "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)",
 *     },
 *     mode: "challenge",
 *     description: "Prevent multiple login failures to mitigate brute force attacks",
 *     paused: false,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/userAgentBlockingRule:UserAgentBlockingRule example '<zone_id>/<ua_rule_id>'
 * ```
 */
export declare class UserAgentBlockingRule extends pulumi.CustomResource {
    /**
     * Get an existing UserAgentBlockingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserAgentBlockingRuleState, opts?: pulumi.CustomResourceOptions): UserAgentBlockingRule;
    /**
     * Returns true if the given object is an instance of UserAgentBlockingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserAgentBlockingRule;
    readonly configuration: pulumi.Output<outputs.UserAgentBlockingRuleConfiguration>;
    /**
     * An informative summary of the rule. This value is sanitized and any tags will be removed.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The action to apply to a matched request.
     * Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
     */
    readonly mode: pulumi.Output<string>;
    /**
     * When true, indicates that the rule is currently paused.
     */
    readonly paused: pulumi.Output<boolean>;
    /**
     * Defines an identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a UserAgentBlockingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserAgentBlockingRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering UserAgentBlockingRule resources.
 */
export interface UserAgentBlockingRuleState {
    configuration?: pulumi.Input<inputs.UserAgentBlockingRuleConfiguration>;
    /**
     * An informative summary of the rule. This value is sanitized and any tags will be removed.
     */
    description?: pulumi.Input<string>;
    /**
     * The action to apply to a matched request.
     * Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
     */
    mode?: pulumi.Input<string>;
    /**
     * When true, indicates that the rule is currently paused.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * Defines an identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a UserAgentBlockingRule resource.
 */
export interface UserAgentBlockingRuleArgs {
    configuration: pulumi.Input<inputs.UserAgentBlockingRuleConfiguration>;
    /**
     * An informative summary of the rule. This value is sanitized and any tags will be removed.
     */
    description?: pulumi.Input<string>;
    /**
     * The action to apply to a matched request.
     * Available values: "block", "challenge", "whitelist", "js*challenge", "managed*challenge".
     */
    mode: pulumi.Input<string>;
    /**
     * When true, indicates that the rule is currently paused.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * Defines an identifier.
     */
    zoneId: pulumi.Input<string>;
}
