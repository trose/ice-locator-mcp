import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/imageVariant:ImageVariant example '<account_id>/<variant_id>'
 * ```
 */
export declare class ImageVariant extends pulumi.CustomResource {
    /**
     * Get an existing ImageVariant resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageVariantState, opts?: pulumi.CustomResourceOptions): ImageVariant;
    /**
     * Returns true if the given object is an instance of ImageVariant.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ImageVariant;
    /**
     * Account identifier tag.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Indicates whether the variant can access an image without a signature, regardless of image access control.
     */
    readonly neverRequireSignedUrls: pulumi.Output<boolean>;
    /**
     * Allows you to define image resizing sizes for different use cases.
     */
    readonly options: pulumi.Output<outputs.ImageVariantOptions>;
    readonly variant: pulumi.Output<outputs.ImageVariantVariant>;
    /**
     * Create a ImageVariant resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageVariantArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ImageVariant resources.
 */
export interface ImageVariantState {
    /**
     * Account identifier tag.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Indicates whether the variant can access an image without a signature, regardless of image access control.
     */
    neverRequireSignedUrls?: pulumi.Input<boolean>;
    /**
     * Allows you to define image resizing sizes for different use cases.
     */
    options?: pulumi.Input<inputs.ImageVariantOptions>;
    variant?: pulumi.Input<inputs.ImageVariantVariant>;
}
/**
 * The set of arguments for constructing a ImageVariant resource.
 */
export interface ImageVariantArgs {
    /**
     * Account identifier tag.
     */
    accountId: pulumi.Input<string>;
    /**
     * Indicates whether the variant can access an image without a signature, regardless of image access control.
     */
    neverRequireSignedUrls?: pulumi.Input<boolean>;
    /**
     * Allows you to define image resizing sizes for different use cases.
     */
    options: pulumi.Input<inputs.ImageVariantOptions>;
}
