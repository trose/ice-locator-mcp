"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudforceOneRequestPriority = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequestPriority = new cloudflare.CloudforceOneRequestPriority("example_cloudforce_one_request_priority", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     labels: [
 *         "DoS",
 *         "CVE",
 *     ],
 *     priority: 1,
 *     requirement: "DoS attacks carried out by CVEs",
 *     tlp: "clear",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority example '<account_id>/<priority_id>'
 * ```
 */
class CloudforceOneRequestPriority extends pulumi.CustomResource {
    /**
     * Get an existing CloudforceOneRequestPriority resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CloudforceOneRequestPriority(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CloudforceOneRequestPriority.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudforceOneRequestPriority.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["completed"] = state ? state.completed : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["messageTokens"] = state ? state.messageTokens : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["readableId"] = state ? state.readableId : undefined;
            resourceInputs["request"] = state ? state.request : undefined;
            resourceInputs["requirement"] = state ? state.requirement : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["summary"] = state ? state.summary : undefined;
            resourceInputs["tlp"] = state ? state.tlp : undefined;
            resourceInputs["tokens"] = state ? state.tokens : undefined;
            resourceInputs["updated"] = state ? state.updated : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.labels === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labels'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.requirement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requirement'");
            }
            if ((!args || args.tlp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tlp'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["requirement"] = args ? args.requirement : undefined;
            resourceInputs["tlp"] = args ? args.tlp : undefined;
            resourceInputs["completed"] = undefined /*out*/;
            resourceInputs["content"] = undefined /*out*/;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["messageTokens"] = undefined /*out*/;
            resourceInputs["readableId"] = undefined /*out*/;
            resourceInputs["request"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["summary"] = undefined /*out*/;
            resourceInputs["tokens"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudforceOneRequestPriority.__pulumiType, name, resourceInputs, opts);
    }
}
exports.CloudforceOneRequestPriority = CloudforceOneRequestPriority;
/** @internal */
CloudforceOneRequestPriority.__pulumiType = 'cloudflare:index/cloudforceOneRequestPriority:CloudforceOneRequestPriority';
//# sourceMappingURL=cloudforceOneRequestPriority.js.map