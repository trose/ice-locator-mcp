import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSchemaValidationSettings = new cloudflare.SchemaValidationSettings("example_schema_validation_settings", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     validationDefaultMitigationAction: "block",
 *     validationOverrideMitigationAction: "none",
 * });
 * ```
 */
export declare class SchemaValidationSettings extends pulumi.CustomResource {
    /**
     * Get an existing SchemaValidationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchemaValidationSettingsState, opts?: pulumi.CustomResourceOptions): SchemaValidationSettings;
    /**
     * Returns true if the given object is an instance of SchemaValidationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SchemaValidationSettings;
    /**
     * The default mitigation action used Mitigation actions are as follows: - `"log"` - log request when request does not
     * conform to schema - `"block"` - deny access to the site when request does not conform to schema - `"none"` - skip
     * running schema validation Available values: "none", "log", "block".
     */
    readonly validationDefaultMitigationAction: pulumi.Output<string>;
    /**
     * When set, this overrides both zone level and operation level mitigation actions. - `"none"` - skip running schema
     * validation entirely for the request - `null` - clears any existing override Available values: "none".
     */
    readonly validationOverrideMitigationAction: pulumi.Output<string | undefined>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a SchemaValidationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchemaValidationSettingsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SchemaValidationSettings resources.
 */
export interface SchemaValidationSettingsState {
    /**
     * The default mitigation action used Mitigation actions are as follows: - `"log"` - log request when request does not
     * conform to schema - `"block"` - deny access to the site when request does not conform to schema - `"none"` - skip
     * running schema validation Available values: "none", "log", "block".
     */
    validationDefaultMitigationAction?: pulumi.Input<string>;
    /**
     * When set, this overrides both zone level and operation level mitigation actions. - `"none"` - skip running schema
     * validation entirely for the request - `null` - clears any existing override Available values: "none".
     */
    validationOverrideMitigationAction?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SchemaValidationSettings resource.
 */
export interface SchemaValidationSettingsArgs {
    /**
     * The default mitigation action used Mitigation actions are as follows: - `"log"` - log request when request does not
     * conform to schema - `"block"` - deny access to the site when request does not conform to schema - `"none"` - skip
     * running schema validation Available values: "none", "log", "block".
     */
    validationDefaultMitigationAction: pulumi.Input<string>;
    /**
     * When set, this overrides both zone level and operation level mitigation actions. - `"none"` - skip running schema
     * validation entirely for the request - `null` - clears any existing override Available values: "none".
     */
    validationOverrideMitigationAction?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
