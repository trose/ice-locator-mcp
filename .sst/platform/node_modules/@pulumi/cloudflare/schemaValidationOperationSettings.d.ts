import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSchemaValidationOperationSettings = new cloudflare.SchemaValidationOperationSettings("example_schema_validation_operation_settings", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     operationId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 *     mitigationAction: "block",
 * });
 * ```
 */
export declare class SchemaValidationOperationSettings extends pulumi.CustomResource {
    /**
     * Get an existing SchemaValidationOperationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchemaValidationOperationSettingsState, opts?: pulumi.CustomResourceOptions): SchemaValidationOperationSettings;
    /**
     * Returns true if the given object is an instance of SchemaValidationOperationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SchemaValidationOperationSettings;
    /**
     * When set, this applies a mitigation action to this operation - `"log"` - log request when request does not conform to
     * schema for this operation - `"block"` - deny access to the site when request does not conform to schema for this
     * operation - `"none"` - will skip mitigation for this operation - `null` - clears any mitigation action Available values:
     * "log", "block", "none".
     */
    readonly mitigationAction: pulumi.Output<string>;
    /**
     * UUID.
     */
    readonly operationId: pulumi.Output<string>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a SchemaValidationOperationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchemaValidationOperationSettingsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SchemaValidationOperationSettings resources.
 */
export interface SchemaValidationOperationSettingsState {
    /**
     * When set, this applies a mitigation action to this operation - `"log"` - log request when request does not conform to
     * schema for this operation - `"block"` - deny access to the site when request does not conform to schema for this
     * operation - `"none"` - will skip mitigation for this operation - `null` - clears any mitigation action Available values:
     * "log", "block", "none".
     */
    mitigationAction?: pulumi.Input<string>;
    /**
     * UUID.
     */
    operationId?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SchemaValidationOperationSettings resource.
 */
export interface SchemaValidationOperationSettingsArgs {
    /**
     * When set, this applies a mitigation action to this operation - `"log"` - log request when request does not conform to
     * schema for this operation - `"block"` - deny access to the site when request does not conform to schema for this
     * operation - `"none"` - will skip mitigation for this operation - `null` - clears any mitigation action Available values:
     * "log", "block", "none".
     */
    mitigationAction: pulumi.Input<string>;
    /**
     * UUID.
     */
    operationId: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
