import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleHostnameTlsSetting = new cloudflare.HostnameTlsSetting("example_hostname_tls_setting", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     settingId: "ciphers",
 *     hostname: "app.example.com",
 *     value: [
 *         "ECDHE-RSA-AES128-GCM-SHA256",
 *         "AES128-GCM-SHA256",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/hostnameTlsSetting:HostnameTlsSetting example '<zone_id>/<setting_id>'
 * ```
 */
export declare class HostnameTlsSetting extends pulumi.CustomResource {
    /**
     * Get an existing HostnameTlsSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostnameTlsSettingState, opts?: pulumi.CustomResourceOptions): HostnameTlsSetting;
    /**
     * Returns true if the given object is an instance of HostnameTlsSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HostnameTlsSetting;
    /**
     * This is the time the tls setting was originally created for this hostname.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The hostname for which the tls settings are set.
     */
    readonly hostname: pulumi.Output<string>;
    /**
     * The TLS Setting name.
     * Available values: "ciphers", "min*tls*version", "http2".
     */
    readonly settingId: pulumi.Output<string>;
    /**
     * Deployment status for the given tls setting.
     */
    readonly status: pulumi.Output<string>;
    /**
     * This is the time the tls setting was updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * The tls setting value.
     */
    readonly value: pulumi.Output<any>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a HostnameTlsSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostnameTlsSettingArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering HostnameTlsSetting resources.
 */
export interface HostnameTlsSettingState {
    /**
     * This is the time the tls setting was originally created for this hostname.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The hostname for which the tls settings are set.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The TLS Setting name.
     * Available values: "ciphers", "min*tls*version", "http2".
     */
    settingId?: pulumi.Input<string>;
    /**
     * Deployment status for the given tls setting.
     */
    status?: pulumi.Input<string>;
    /**
     * This is the time the tls setting was updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The tls setting value.
     */
    value?: any;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a HostnameTlsSetting resource.
 */
export interface HostnameTlsSettingArgs {
    /**
     * The hostname for which the tls settings are set.
     */
    hostname: pulumi.Input<string>;
    /**
     * The TLS Setting name.
     * Available values: "ciphers", "min*tls*version", "http2".
     */
    settingId: pulumi.Input<string>;
    /**
     * The tls setting value.
     */
    value: any;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
