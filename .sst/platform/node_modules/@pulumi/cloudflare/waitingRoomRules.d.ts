import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWaitingRoomRules = new cloudflare.WaitingRoomRules("example_waiting_room_rules", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     waitingRoomId: "699d98642c564d2e855e9661899b7252",
 *     rules: [{
 *         action: "bypass_waiting_room",
 *         expression: "ip.src in {10.20.30.40}",
 *         description: "allow all traffic from 10.20.30.40",
 *         enabled: true,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/waitingRoomRules:WaitingRoomRules example '<zone_id>/<waiting_room_id>'
 * ```
 */
export declare class WaitingRoomRules extends pulumi.CustomResource {
    /**
     * Get an existing WaitingRoomRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WaitingRoomRulesState, opts?: pulumi.CustomResourceOptions): WaitingRoomRules;
    /**
     * Returns true if the given object is an instance of WaitingRoomRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WaitingRoomRules;
    readonly rules: pulumi.Output<outputs.WaitingRoomRulesRule[]>;
    readonly waitingRoomId: pulumi.Output<string>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a WaitingRoomRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WaitingRoomRulesArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WaitingRoomRules resources.
 */
export interface WaitingRoomRulesState {
    rules?: pulumi.Input<pulumi.Input<inputs.WaitingRoomRulesRule>[]>;
    waitingRoomId?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WaitingRoomRules resource.
 */
export interface WaitingRoomRulesArgs {
    rules: pulumi.Input<pulumi.Input<inputs.WaitingRoomRulesRule>[]>;
    waitingRoomId: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
