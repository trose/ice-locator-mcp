import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustList = new cloudflare.ZeroTrustList("example_zero_trust_list", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     name: "Admin Serial Numbers",
 *     type: "SERIAL",
 *     description: "The serial numbers for administrators",
 *     items: [{
 *         description: "Austin office IP",
 *         value: "8GE8721REF",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/teamsList:TeamsList example '<account_id>/<list_id>'
 * ```
 *
 * @deprecated cloudflare.index/teamslist.TeamsList has been deprecated in favor of cloudflare.index/zerotrustlist.ZeroTrustList
 */
export declare class TeamsList extends pulumi.CustomResource {
    /**
     * Get an existing TeamsList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeamsListState, opts?: pulumi.CustomResourceOptions): TeamsList;
    /**
     * Returns true if the given object is an instance of TeamsList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TeamsList;
    readonly accountId: pulumi.Output<string>;
    readonly createdAt: pulumi.Output<string>;
    /**
     * The description of the list.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * items to add to the list.
     */
    readonly items: pulumi.Output<outputs.TeamsListItem[] | undefined>;
    /**
     * The number of items in the list.
     */
    readonly listCount: pulumi.Output<number>;
    /**
     * The name of the list.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The type of list.
     * Available values: "SERIAL", "URL", "DOMAIN", "EMAIL", "IP".
     */
    readonly type: pulumi.Output<string>;
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Create a TeamsList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated cloudflare.index/teamslist.TeamsList has been deprecated in favor of cloudflare.index/zerotrustlist.ZeroTrustList */
    constructor(name: string, args: TeamsListArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TeamsList resources.
 */
export interface TeamsListState {
    accountId?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the list.
     */
    description?: pulumi.Input<string>;
    /**
     * items to add to the list.
     */
    items?: pulumi.Input<pulumi.Input<inputs.TeamsListItem>[]>;
    /**
     * The number of items in the list.
     */
    listCount?: pulumi.Input<number>;
    /**
     * The name of the list.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of list.
     * Available values: "SERIAL", "URL", "DOMAIN", "EMAIL", "IP".
     */
    type?: pulumi.Input<string>;
    updatedAt?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TeamsList resource.
 */
export interface TeamsListArgs {
    accountId: pulumi.Input<string>;
    /**
     * The description of the list.
     */
    description?: pulumi.Input<string>;
    /**
     * items to add to the list.
     */
    items?: pulumi.Input<pulumi.Input<inputs.TeamsListItem>[]>;
    /**
     * The name of the list.
     */
    name: pulumi.Input<string>;
    /**
     * The type of list.
     * Available values: "SERIAL", "URL", "DOMAIN", "EMAIL", "IP".
     */
    type: pulumi.Input<string>;
}
