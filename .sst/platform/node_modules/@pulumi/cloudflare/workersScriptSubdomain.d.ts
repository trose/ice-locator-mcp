import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleWorkersScriptSubdomain = new cloudflare.WorkersScriptSubdomain("example_workers_script_subdomain", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     scriptName: "this-is_my_script-01",
 *     enabled: true,
 *     previewsEnabled: true,
 * });
 * ```
 */
export declare class WorkersScriptSubdomain extends pulumi.CustomResource {
    /**
     * Get an existing WorkersScriptSubdomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersScriptSubdomainState, opts?: pulumi.CustomResourceOptions): WorkersScriptSubdomain;
    /**
     * Returns true if the given object is an instance of WorkersScriptSubdomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkersScriptSubdomain;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Whether the Worker should be available on the workers.dev subdomain.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * Whether the Worker's Preview URLs should be available on the workers.dev subdomain.
     */
    readonly previewsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    readonly scriptName: pulumi.Output<string>;
    /**
     * Create a WorkersScriptSubdomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersScriptSubdomainArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkersScriptSubdomain resources.
 */
export interface WorkersScriptSubdomainState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Whether the Worker should be available on the workers.dev subdomain.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Whether the Worker's Preview URLs should be available on the workers.dev subdomain.
     */
    previewsEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    scriptName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WorkersScriptSubdomain resource.
 */
export interface WorkersScriptSubdomainArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    /**
     * Whether the Worker should be available on the workers.dev subdomain.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Whether the Worker's Preview URLs should be available on the workers.dev subdomain.
     */
    previewsEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    scriptName: pulumi.Input<string>;
}
