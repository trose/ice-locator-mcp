import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleEmailSecurityImpersonationRegistry = new cloudflare.EmailSecurityImpersonationRegistry("example_email_security_impersonation_registry", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     email: "email",
 *     isEmailRegex: true,
 *     name: "name",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/emailSecurityImpersonationRegistry:EmailSecurityImpersonationRegistry example '<account_id>/<display_name_id>'
 * ```
 */
export declare class EmailSecurityImpersonationRegistry extends pulumi.CustomResource {
    /**
     * Get an existing EmailSecurityImpersonationRegistry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailSecurityImpersonationRegistryState, opts?: pulumi.CustomResourceOptions): EmailSecurityImpersonationRegistry;
    /**
     * Returns true if the given object is an instance of EmailSecurityImpersonationRegistry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EmailSecurityImpersonationRegistry;
    /**
     * Account Identifier
     */
    readonly accountId: pulumi.Output<string>;
    readonly comments: pulumi.Output<string>;
    readonly createdAt: pulumi.Output<string>;
    readonly directoryId: pulumi.Output<number>;
    readonly directoryNodeId: pulumi.Output<number>;
    readonly email: pulumi.Output<string>;
    /**
     * @deprecated This attribute is deprecated.
     */
    readonly externalDirectoryNodeId: pulumi.Output<string>;
    readonly isEmailRegex: pulumi.Output<boolean>;
    readonly lastModified: pulumi.Output<string>;
    readonly name: pulumi.Output<string>;
    readonly provenance: pulumi.Output<string>;
    /**
     * Create a EmailSecurityImpersonationRegistry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailSecurityImpersonationRegistryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EmailSecurityImpersonationRegistry resources.
 */
export interface EmailSecurityImpersonationRegistryState {
    /**
     * Account Identifier
     */
    accountId?: pulumi.Input<string>;
    comments?: pulumi.Input<string>;
    createdAt?: pulumi.Input<string>;
    directoryId?: pulumi.Input<number>;
    directoryNodeId?: pulumi.Input<number>;
    email?: pulumi.Input<string>;
    /**
     * @deprecated This attribute is deprecated.
     */
    externalDirectoryNodeId?: pulumi.Input<string>;
    isEmailRegex?: pulumi.Input<boolean>;
    lastModified?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    provenance?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EmailSecurityImpersonationRegistry resource.
 */
export interface EmailSecurityImpersonationRegistryArgs {
    /**
     * Account Identifier
     */
    accountId: pulumi.Input<string>;
    email: pulumi.Input<string>;
    isEmailRegex: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
}
