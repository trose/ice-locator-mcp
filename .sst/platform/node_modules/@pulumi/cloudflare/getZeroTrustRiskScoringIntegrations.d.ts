import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustRiskScoringIntegrations = cloudflare.getZeroTrustRiskScoringIntegrations({
 *     accountId: "account_id",
 * });
 * ```
 */
export declare function getZeroTrustRiskScoringIntegrations(args: GetZeroTrustRiskScoringIntegrationsArgs, opts?: pulumi.InvokeOptions): Promise<GetZeroTrustRiskScoringIntegrationsResult>;
/**
 * A collection of arguments for invoking getZeroTrustRiskScoringIntegrations.
 */
export interface GetZeroTrustRiskScoringIntegrationsArgs {
    accountId: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
}
/**
 * A collection of values returned by getZeroTrustRiskScoringIntegrations.
 */
export interface GetZeroTrustRiskScoringIntegrationsResult {
    readonly accountId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetZeroTrustRiskScoringIntegrationsResult[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustRiskScoringIntegrations = cloudflare.getZeroTrustRiskScoringIntegrations({
 *     accountId: "account_id",
 * });
 * ```
 */
export declare function getZeroTrustRiskScoringIntegrationsOutput(args: GetZeroTrustRiskScoringIntegrationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZeroTrustRiskScoringIntegrationsResult>;
/**
 * A collection of arguments for invoking getZeroTrustRiskScoringIntegrations.
 */
export interface GetZeroTrustRiskScoringIntegrationsOutputArgs {
    accountId: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
}
