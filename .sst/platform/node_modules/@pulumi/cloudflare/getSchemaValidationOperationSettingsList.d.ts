import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSchemaValidationOperationSettingsList = cloudflare.getSchemaValidationOperationSettingsList({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export declare function getSchemaValidationOperationSettingsList(args: GetSchemaValidationOperationSettingsListArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaValidationOperationSettingsListResult>;
/**
 * A collection of arguments for invoking getSchemaValidationOperationSettingsList.
 */
export interface GetSchemaValidationOperationSettingsListArgs {
    maxItems?: number;
    zoneId: string;
}
/**
 * A collection of values returned by getSchemaValidationOperationSettingsList.
 */
export interface GetSchemaValidationOperationSettingsListResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maxItems?: number;
    readonly results: outputs.GetSchemaValidationOperationSettingsListResult[];
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleSchemaValidationOperationSettingsList = cloudflare.getSchemaValidationOperationSettingsList({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export declare function getSchemaValidationOperationSettingsListOutput(args: GetSchemaValidationOperationSettingsListOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchemaValidationOperationSettingsListResult>;
/**
 * A collection of arguments for invoking getSchemaValidationOperationSettingsList.
 */
export interface GetSchemaValidationOperationSettingsListOutputArgs {
    maxItems?: pulumi.Input<number>;
    zoneId: pulumi.Input<string>;
}
