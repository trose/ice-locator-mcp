import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zoneCacheVariants:ZoneCacheVariants example '<zone_id>'
 * ```
 */
export declare class ZoneCacheVariants extends pulumi.CustomResource {
    /**
     * Get an existing ZoneCacheVariants resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneCacheVariantsState, opts?: pulumi.CustomResourceOptions): ZoneCacheVariants;
    /**
     * Returns true if the given object is an instance of ZoneCacheVariants.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZoneCacheVariants;
    /**
     * Whether the setting is editable
     */
    readonly editable: pulumi.Output<boolean>;
    /**
     * Last time this setting was modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * Value of the zone setting.
     */
    readonly value: pulumi.Output<outputs.ZoneCacheVariantsValue>;
    /**
     * Identifier
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZoneCacheVariants resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneCacheVariantsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZoneCacheVariants resources.
 */
export interface ZoneCacheVariantsState {
    /**
     * Whether the setting is editable
     */
    editable?: pulumi.Input<boolean>;
    /**
     * Last time this setting was modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * Value of the zone setting.
     */
    value?: pulumi.Input<inputs.ZoneCacheVariantsValue>;
    /**
     * Identifier
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZoneCacheVariants resource.
 */
export interface ZoneCacheVariantsArgs {
    /**
     * Value of the zone setting.
     */
    value: pulumi.Input<inputs.ZoneCacheVariantsValue>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
