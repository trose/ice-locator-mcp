import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequest = cloudflare.getCloudforceOneRequest({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     requestId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export declare function getCloudforceOneRequest(args: GetCloudforceOneRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudforceOneRequestResult>;
/**
 * A collection of arguments for invoking getCloudforceOneRequest.
 */
export interface GetCloudforceOneRequestArgs {
    /**
     * Identifier.
     */
    accountId: string;
    filter?: inputs.GetCloudforceOneRequestFilter;
    /**
     * UUID.
     */
    requestId?: string;
}
/**
 * A collection of values returned by getCloudforceOneRequest.
 */
export interface GetCloudforceOneRequestResult {
    /**
     * Identifier.
     */
    readonly accountId: string;
    readonly completed: string;
    /**
     * Request content.
     */
    readonly content: string;
    readonly created: string;
    readonly filter?: outputs.GetCloudforceOneRequestFilter;
    /**
     * UUID.
     */
    readonly id: string;
    /**
     * Tokens for the request messages.
     */
    readonly messageTokens: number;
    readonly priority: string;
    /**
     * Readable Request ID.
     */
    readonly readableId: string;
    /**
     * Requested information from request.
     */
    readonly request: string;
    /**
     * UUID.
     */
    readonly requestId?: string;
    /**
     * Request Status.
     * Available values: "open", "accepted", "reported", "approved", "completed", "declined".
     */
    readonly status: string;
    /**
     * Brief description of the request.
     */
    readonly summary: string;
    /**
     * The CISA defined Traffic Light Protocol (TLP).
     * Available values: "clear", "amber", "amber-strict", "green", "red".
     */
    readonly tlp: string;
    /**
     * Tokens for the request.
     */
    readonly tokens: number;
    readonly updated: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCloudforceOneRequest = cloudflare.getCloudforceOneRequest({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     requestId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 * });
 * ```
 */
export declare function getCloudforceOneRequestOutput(args: GetCloudforceOneRequestOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudforceOneRequestResult>;
/**
 * A collection of arguments for invoking getCloudforceOneRequest.
 */
export interface GetCloudforceOneRequestOutputArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    filter?: pulumi.Input<inputs.GetCloudforceOneRequestFilterArgs>;
    /**
     * UUID.
     */
    requestId?: pulumi.Input<string>;
}
