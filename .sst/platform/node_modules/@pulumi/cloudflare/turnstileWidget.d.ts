import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleTurnstileWidget = new cloudflare.TurnstileWidget("example_turnstile_widget", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     domains: [
 *         "203.0.113.1",
 *         "cloudflare.com",
 *         "blog.example.com",
 *     ],
 *     mode: "invisible",
 *     name: "blog.cloudflare.com login form",
 *     botFightMode: false,
 *     clearanceLevel: "interactive",
 *     ephemeralId: false,
 *     offlabel: false,
 *     region: "world",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/turnstileWidget:TurnstileWidget example '<account_id>/<sitekey>'
 * ```
 */
export declare class TurnstileWidget extends pulumi.CustomResource {
    /**
     * Get an existing TurnstileWidget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TurnstileWidgetState, opts?: pulumi.CustomResourceOptions): TurnstileWidget;
    /**
     * Returns true if the given object is an instance of TurnstileWidget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TurnstileWidget;
    /**
     * Identifier
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * If bot*fight*mode is set to `true`, Cloudflare issues computationally
     * expensive challenges in response to malicious bots (ENT only).
     */
    readonly botFightMode: pulumi.Output<boolean>;
    /**
     * If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
     * this setting can determine the clearance level to be set
     * Available values: "noClearance", "jschallenge", "managed", "interactive".
     */
    readonly clearanceLevel: pulumi.Output<string>;
    /**
     * When the widget was created.
     */
    readonly createdOn: pulumi.Output<string>;
    readonly domains: pulumi.Output<string[]>;
    /**
     * Return the Ephemeral ID in /siteverify (ENT only).
     */
    readonly ephemeralId: pulumi.Output<boolean>;
    /**
     * Widget Mode
     * Available values: "non-interactive", "invisible", "managed".
     */
    readonly mode: pulumi.Output<string>;
    /**
     * When the widget was modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * Human readable widget name. Not unique. Cloudflare suggests that you
     * set this to a meaningful string to make it easier to identify your
     * widget, and where it is used.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Do not show any Cloudflare branding on the widget (ENT only).
     */
    readonly offlabel: pulumi.Output<boolean>;
    /**
     * Region where this widget can be used. This cannot be changed after creation.
     * Available values: "world", "china".
     */
    readonly region: pulumi.Output<string>;
    /**
     * Secret key for this widget.
     */
    readonly secret: pulumi.Output<string>;
    /**
     * Widget item identifier tag.
     */
    readonly sitekey: pulumi.Output<string>;
    /**
     * Create a TurnstileWidget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TurnstileWidgetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TurnstileWidget resources.
 */
export interface TurnstileWidgetState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * If bot*fight*mode is set to `true`, Cloudflare issues computationally
     * expensive challenges in response to malicious bots (ENT only).
     */
    botFightMode?: pulumi.Input<boolean>;
    /**
     * If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
     * this setting can determine the clearance level to be set
     * Available values: "noClearance", "jschallenge", "managed", "interactive".
     */
    clearanceLevel?: pulumi.Input<string>;
    /**
     * When the widget was created.
     */
    createdOn?: pulumi.Input<string>;
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Return the Ephemeral ID in /siteverify (ENT only).
     */
    ephemeralId?: pulumi.Input<boolean>;
    /**
     * Widget Mode
     * Available values: "non-interactive", "invisible", "managed".
     */
    mode?: pulumi.Input<string>;
    /**
     * When the widget was modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * Human readable widget name. Not unique. Cloudflare suggests that you
     * set this to a meaningful string to make it easier to identify your
     * widget, and where it is used.
     */
    name?: pulumi.Input<string>;
    /**
     * Do not show any Cloudflare branding on the widget (ENT only).
     */
    offlabel?: pulumi.Input<boolean>;
    /**
     * Region where this widget can be used. This cannot be changed after creation.
     * Available values: "world", "china".
     */
    region?: pulumi.Input<string>;
    /**
     * Secret key for this widget.
     */
    secret?: pulumi.Input<string>;
    /**
     * Widget item identifier tag.
     */
    sitekey?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a TurnstileWidget resource.
 */
export interface TurnstileWidgetArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    /**
     * If bot*fight*mode is set to `true`, Cloudflare issues computationally
     * expensive challenges in response to malicious bots (ENT only).
     */
    botFightMode?: pulumi.Input<boolean>;
    /**
     * If Turnstile is embedded on a Cloudflare site and the widget should grant challenge clearance,
     * this setting can determine the clearance level to be set
     * Available values: "noClearance", "jschallenge", "managed", "interactive".
     */
    clearanceLevel?: pulumi.Input<string>;
    domains: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Return the Ephemeral ID in /siteverify (ENT only).
     */
    ephemeralId?: pulumi.Input<boolean>;
    /**
     * Widget Mode
     * Available values: "non-interactive", "invisible", "managed".
     */
    mode: pulumi.Input<string>;
    /**
     * Human readable widget name. Not unique. Cloudflare suggests that you
     * set this to a meaningful string to make it easier to identify your
     * widget, and where it is used.
     */
    name: pulumi.Input<string>;
    /**
     * Do not show any Cloudflare branding on the widget (ENT only).
     */
    offlabel?: pulumi.Input<boolean>;
    /**
     * Region where this widget can be used. This cannot be changed after creation.
     * Available values: "world", "china".
     */
    region?: pulumi.Input<string>;
}
