import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleFirewallRule = cloudflare.getFirewallRule({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     ruleId: "372e67954025e0ba6aaa6d586b9e0b60",
 * });
 * ```
 */
export declare function getFirewallRule(args: GetFirewallRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetFirewallRuleResult>;
/**
 * A collection of arguments for invoking getFirewallRule.
 */
export interface GetFirewallRuleArgs {
    /**
     * The unique identifier of the firewall rule.
     */
    ruleId?: string;
    /**
     * Defines an identifier.
     */
    zoneId: string;
}
/**
 * A collection of values returned by getFirewallRule.
 */
export interface GetFirewallRuleResult {
    /**
     * The action to apply to a matched request. The `log` action is only available on an Enterprise plan.
     * Available values: "block", "challenge", "js*challenge", "managed*challenge", "allow", "log", "bypass".
     */
    readonly action: string;
    /**
     * An informative summary of the firewall rule.
     */
    readonly description: string;
    /**
     * The unique identifier of the firewall rule.
     */
    readonly id: string;
    /**
     * When true, indicates that the firewall rule is currently paused.
     */
    readonly paused: boolean;
    /**
     * The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.
     */
    readonly priority: number;
    readonly products: string[];
    /**
     * A short reference tag. Allows you to select related firewall rules.
     */
    readonly ref: string;
    /**
     * The unique identifier of the firewall rule.
     */
    readonly ruleId?: string;
    /**
     * Defines an identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleFirewallRule = cloudflare.getFirewallRule({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     ruleId: "372e67954025e0ba6aaa6d586b9e0b60",
 * });
 * ```
 */
export declare function getFirewallRuleOutput(args: GetFirewallRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFirewallRuleResult>;
/**
 * A collection of arguments for invoking getFirewallRule.
 */
export interface GetFirewallRuleOutputArgs {
    /**
     * The unique identifier of the firewall rule.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Defines an identifier.
     */
    zoneId: pulumi.Input<string>;
}
