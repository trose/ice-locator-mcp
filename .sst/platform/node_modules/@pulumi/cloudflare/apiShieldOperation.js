"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiShieldOperation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShieldOperation = new cloudflare.ApiShieldOperation("example_api_shield_operation", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     endpoint: "/api/v1/users/{var1}",
 *     host: "www.example.com",
 *     method: "GET",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/apiShieldOperation:ApiShieldOperation example '<zone_id>/<operation_id>'
 * ```
 */
class ApiShieldOperation extends pulumi.CustomResource {
    /**
     * Get an existing ApiShieldOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApiShieldOperation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApiShieldOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiShieldOperation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["features"] = state ? state.features : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["operationId"] = state ? state.operationId : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.endpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpoint'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.method === undefined) && !opts.urn) {
                throw new Error("Missing required property 'method'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["features"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["operationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiShieldOperation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ApiShieldOperation = ApiShieldOperation;
/** @internal */
ApiShieldOperation.__pulumiType = 'cloudflare:index/apiShieldOperation:ApiShieldOperation';
//# sourceMappingURL=apiShieldOperation.js.map