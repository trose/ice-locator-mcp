import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 */
export declare class R2BucketLifecycle extends pulumi.CustomResource {
    /**
     * Get an existing R2BucketLifecycle resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: R2BucketLifecycleState, opts?: pulumi.CustomResourceOptions): R2BucketLifecycle;
    /**
     * Returns true if the given object is an instance of R2BucketLifecycle.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is R2BucketLifecycle;
    /**
     * Account ID.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Name of the bucket.
     */
    readonly bucketName: pulumi.Output<string>;
    /**
     * Jurisdiction of the bucket
     */
    readonly jurisdiction: pulumi.Output<string>;
    readonly rules: pulumi.Output<outputs.R2BucketLifecycleRule[] | undefined>;
    /**
     * Create a R2BucketLifecycle resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: R2BucketLifecycleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering R2BucketLifecycle resources.
 */
export interface R2BucketLifecycleState {
    /**
     * Account ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * Jurisdiction of the bucket
     */
    jurisdiction?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.R2BucketLifecycleRule>[]>;
}
/**
 * The set of arguments for constructing a R2BucketLifecycle resource.
 */
export interface R2BucketLifecycleArgs {
    /**
     * Account ID.
     */
    accountId: pulumi.Input<string>;
    /**
     * Name of the bucket.
     */
    bucketName: pulumi.Input<string>;
    /**
     * Jurisdiction of the bucket
     */
    jurisdiction?: pulumi.Input<string>;
    rules?: pulumi.Input<pulumi.Input<inputs.R2BucketLifecycleRule>[]>;
}
