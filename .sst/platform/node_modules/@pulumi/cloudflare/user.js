"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleUser = new cloudflare.User("example_user", {
 *     country: "US",
 *     firstName: "John",
 *     lastName: "Appleseed",
 *     telephone: "+1 123-123-1234",
 *     zipcode: "12345",
 * });
 * ```
 */
class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new User(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["betas"] = state ? state.betas : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["firstName"] = state ? state.firstName : undefined;
            resourceInputs["hasBusinessZones"] = state ? state.hasBusinessZones : undefined;
            resourceInputs["hasEnterpriseZones"] = state ? state.hasEnterpriseZones : undefined;
            resourceInputs["hasProZones"] = state ? state.hasProZones : undefined;
            resourceInputs["lastName"] = state ? state.lastName : undefined;
            resourceInputs["organizations"] = state ? state.organizations : undefined;
            resourceInputs["suspended"] = state ? state.suspended : undefined;
            resourceInputs["telephone"] = state ? state.telephone : undefined;
            resourceInputs["twoFactorAuthenticationEnabled"] = state ? state.twoFactorAuthenticationEnabled : undefined;
            resourceInputs["twoFactorAuthenticationLocked"] = state ? state.twoFactorAuthenticationLocked : undefined;
            resourceInputs["zipcode"] = state ? state.zipcode : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["firstName"] = args ? args.firstName : undefined;
            resourceInputs["lastName"] = args ? args.lastName : undefined;
            resourceInputs["telephone"] = args ? args.telephone : undefined;
            resourceInputs["zipcode"] = args ? args.zipcode : undefined;
            resourceInputs["betas"] = undefined /*out*/;
            resourceInputs["hasBusinessZones"] = undefined /*out*/;
            resourceInputs["hasEnterpriseZones"] = undefined /*out*/;
            resourceInputs["hasProZones"] = undefined /*out*/;
            resourceInputs["organizations"] = undefined /*out*/;
            resourceInputs["suspended"] = undefined /*out*/;
            resourceInputs["twoFactorAuthenticationEnabled"] = undefined /*out*/;
            resourceInputs["twoFactorAuthenticationLocked"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}
exports.User = User;
/** @internal */
User.__pulumiType = 'cloudflare:index/user:User';
//# sourceMappingURL=user.js.map