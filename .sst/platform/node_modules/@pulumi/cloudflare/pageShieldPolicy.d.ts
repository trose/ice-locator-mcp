import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/pageShieldPolicy:PageShieldPolicy example '<zone_id>/<policy_id>'
 * ```
 */
export declare class PageShieldPolicy extends pulumi.CustomResource {
    /**
     * Get an existing PageShieldPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PageShieldPolicyState, opts?: pulumi.CustomResourceOptions): PageShieldPolicy;
    /**
     * Returns true if the given object is an instance of PageShieldPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PageShieldPolicy;
    /**
     * The action to take if the expression matches
     * Available values: "allow", "log".
     */
    readonly action: pulumi.Output<string>;
    /**
     * A description for the policy
     */
    readonly description: pulumi.Output<string>;
    /**
     * Whether the policy is enabled
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
     */
    readonly expression: pulumi.Output<string>;
    /**
     * The policy which will be applied
     */
    readonly value: pulumi.Output<string>;
    /**
     * Identifier
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a PageShieldPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PageShieldPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering PageShieldPolicy resources.
 */
export interface PageShieldPolicyState {
    /**
     * The action to take if the expression matches
     * Available values: "allow", "log".
     */
    action?: pulumi.Input<string>;
    /**
     * A description for the policy
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the policy is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
     */
    expression?: pulumi.Input<string>;
    /**
     * The policy which will be applied
     */
    value?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a PageShieldPolicy resource.
 */
export interface PageShieldPolicyArgs {
    /**
     * The action to take if the expression matches
     * Available values: "allow", "log".
     */
    action: pulumi.Input<string>;
    /**
     * A description for the policy
     */
    description: pulumi.Input<string>;
    /**
     * Whether the policy is enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax
     */
    expression: pulumi.Input<string>;
    /**
     * The policy which will be applied
     */
    value: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
