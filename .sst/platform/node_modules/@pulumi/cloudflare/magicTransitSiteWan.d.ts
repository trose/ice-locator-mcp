import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicTransitSiteWan:MagicTransitSiteWan example '<account_id>/<site_id>/<wan_id>'
 * ```
 */
export declare class MagicTransitSiteWan extends pulumi.CustomResource {
    /**
     * Get an existing MagicTransitSiteWan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MagicTransitSiteWanState, opts?: pulumi.CustomResourceOptions): MagicTransitSiteWan;
    /**
     * Returns true if the given object is an instance of MagicTransitSiteWan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MagicTransitSiteWan;
    /**
     * Identifier
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
     * Available values: "low", "mid", "high".
     */
    readonly healthCheckRate: pulumi.Output<string>;
    readonly name: pulumi.Output<string | undefined>;
    readonly physport: pulumi.Output<number>;
    readonly priority: pulumi.Output<number | undefined>;
    /**
     * Identifier
     */
    readonly siteId: pulumi.Output<string>;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    readonly staticAddressing: pulumi.Output<outputs.MagicTransitSiteWanStaticAddressing | undefined>;
    /**
     * VLAN ID. Use zero for untagged.
     */
    readonly vlanTag: pulumi.Output<number | undefined>;
    /**
     * Create a MagicTransitSiteWan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MagicTransitSiteWanArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MagicTransitSiteWan resources.
 */
export interface MagicTransitSiteWanState {
    /**
     * Identifier
     */
    accountId?: pulumi.Input<string>;
    /**
     * Magic WAN health check rate for tunnels created on this link. The default value is `mid`.
     * Available values: "low", "mid", "high".
     */
    healthCheckRate?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    physport?: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
    /**
     * Identifier
     */
    siteId?: pulumi.Input<string>;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    staticAddressing?: pulumi.Input<inputs.MagicTransitSiteWanStaticAddressing>;
    /**
     * VLAN ID. Use zero for untagged.
     */
    vlanTag?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a MagicTransitSiteWan resource.
 */
export interface MagicTransitSiteWanArgs {
    /**
     * Identifier
     */
    accountId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    physport: pulumi.Input<number>;
    priority?: pulumi.Input<number>;
    /**
     * Identifier
     */
    siteId: pulumi.Input<string>;
    /**
     * (optional) if omitted, use DHCP. Submit secondary*address when site is in high availability mode.
     */
    staticAddressing?: pulumi.Input<inputs.MagicTransitSiteWanStaticAddressing>;
    /**
     * VLAN ID. Use zero for untagged.
     */
    vlanTag?: pulumi.Input<number>;
}
