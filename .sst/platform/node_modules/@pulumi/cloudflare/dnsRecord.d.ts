import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/dnsRecord:DnsRecord example '<zone_id>/<dns_record_id>'
 * ```
 */
export declare class DnsRecord extends pulumi.CustomResource {
    /**
     * Get an existing DnsRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsRecordState, opts?: pulumi.CustomResourceOptions): DnsRecord;
    /**
     * Returns true if the given object is an instance of DnsRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DnsRecord;
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * When the record comment was last modified. Omitted if there is no comment.
     */
    readonly commentModifiedOn: pulumi.Output<string>;
    /**
     * A valid IPv4 address.
     */
    readonly content: pulumi.Output<string>;
    /**
     * When the record was created.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * Components of a CAA record.
     */
    readonly data: pulumi.Output<outputs.DnsRecordData | undefined>;
    /**
     * Extra Cloudflare-specific information about the record.
     */
    readonly meta: pulumi.Output<string>;
    /**
     * When the record was last modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * DNS record name (or @ for the zone apex) in Punycode.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
     */
    readonly priority: pulumi.Output<number | undefined>;
    /**
     * Whether the record can be proxied by Cloudflare or not.
     */
    readonly proxiable: pulumi.Output<boolean>;
    /**
     * Whether the record is receiving the performance and security benefits of Cloudflare.
     */
    readonly proxied: pulumi.Output<boolean>;
    /**
     * Settings for the DNS record.
     */
    readonly settings: pulumi.Output<outputs.DnsRecordSettings>;
    /**
     * Custom tags for the DNS record. This field has no effect on DNS responses.
     */
    readonly tags: pulumi.Output<string[]>;
    /**
     * When the record tags were last modified. Omitted if there are no tags.
     */
    readonly tagsModifiedOn: pulumi.Output<string>;
    /**
     * Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
     */
    readonly ttl: pulumi.Output<number>;
    /**
     * Record type.
     * Available values: "A", "AAAA", "CNAME", "MX", "NS", "OPENPGPKEY", "PTR", "TXT", "CAA", "CERT", "DNSKEY", "DS", "HTTPS", "LOC", "NAPTR", "SMIMEA", "SRV", "SSHFP", "SVCB", "TLSA", "URI".
     */
    readonly type: pulumi.Output<string>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a DnsRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsRecordArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DnsRecord resources.
 */
export interface DnsRecordState {
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    comment?: pulumi.Input<string>;
    /**
     * When the record comment was last modified. Omitted if there is no comment.
     */
    commentModifiedOn?: pulumi.Input<string>;
    /**
     * A valid IPv4 address.
     */
    content?: pulumi.Input<string>;
    /**
     * When the record was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Components of a CAA record.
     */
    data?: pulumi.Input<inputs.DnsRecordData>;
    /**
     * Extra Cloudflare-specific information about the record.
     */
    meta?: pulumi.Input<string>;
    /**
     * When the record was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * DNS record name (or @ for the zone apex) in Punycode.
     */
    name?: pulumi.Input<string>;
    /**
     * Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
     */
    priority?: pulumi.Input<number>;
    /**
     * Whether the record can be proxied by Cloudflare or not.
     */
    proxiable?: pulumi.Input<boolean>;
    /**
     * Whether the record is receiving the performance and security benefits of Cloudflare.
     */
    proxied?: pulumi.Input<boolean>;
    /**
     * Settings for the DNS record.
     */
    settings?: pulumi.Input<inputs.DnsRecordSettings>;
    /**
     * Custom tags for the DNS record. This field has no effect on DNS responses.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When the record tags were last modified. Omitted if there are no tags.
     */
    tagsModifiedOn?: pulumi.Input<string>;
    /**
     * Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
     */
    ttl?: pulumi.Input<number>;
    /**
     * Record type.
     * Available values: "A", "AAAA", "CNAME", "MX", "NS", "OPENPGPKEY", "PTR", "TXT", "CAA", "CERT", "DNSKEY", "DS", "HTTPS", "LOC", "NAPTR", "SMIMEA", "SRV", "SSHFP", "SVCB", "TLSA", "URI".
     */
    type?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DnsRecord resource.
 */
export interface DnsRecordArgs {
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    comment?: pulumi.Input<string>;
    /**
     * A valid IPv4 address.
     */
    content?: pulumi.Input<string>;
    /**
     * Components of a CAA record.
     */
    data?: pulumi.Input<inputs.DnsRecordData>;
    /**
     * DNS record name (or @ for the zone apex) in Punycode.
     */
    name: pulumi.Input<string>;
    /**
     * Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.
     */
    priority?: pulumi.Input<number>;
    /**
     * Whether the record is receiving the performance and security benefits of Cloudflare.
     */
    proxied?: pulumi.Input<boolean>;
    /**
     * Settings for the DNS record.
     */
    settings?: pulumi.Input<inputs.DnsRecordSettings>;
    /**
     * Custom tags for the DNS record. This field has no effect on DNS responses.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Time To Live (TTL) of the DNS record in seconds. Setting to 1 means 'automatic'. Value must be between 60 and 86400, with the minimum reduced to 30 for Enterprise zones.
     */
    ttl: pulumi.Input<number>;
    /**
     * Record type.
     * Available values: "A", "AAAA", "CNAME", "MX", "NS", "OPENPGPKEY", "PTR", "TXT", "CAA", "CERT", "DNSKEY", "DS", "HTTPS", "LOC", "NAPTR", "SMIMEA", "SRV", "SSHFP", "SVCB", "TLSA", "URI".
     */
    type: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
