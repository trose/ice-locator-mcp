"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZeroTrustDeviceSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDeviceSettings = new cloudflare.ZeroTrustDeviceSettings("example_zero_trust_device_settings", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     disableForTime: 0,
 *     gatewayProxyEnabled: true,
 *     gatewayUdpProxyEnabled: true,
 *     rootCertificateInstallationEnabled: true,
 *     useZtVirtualIp: true,
 * });
 * ```
 */
class ZeroTrustDeviceSettings extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDeviceSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ZeroTrustDeviceSettings(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ZeroTrustDeviceSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDeviceSettings.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["disableForTime"] = state ? state.disableForTime : undefined;
            resourceInputs["gatewayProxyEnabled"] = state ? state.gatewayProxyEnabled : undefined;
            resourceInputs["gatewayUdpProxyEnabled"] = state ? state.gatewayUdpProxyEnabled : undefined;
            resourceInputs["rootCertificateInstallationEnabled"] = state ? state.rootCertificateInstallationEnabled : undefined;
            resourceInputs["useZtVirtualIp"] = state ? state.useZtVirtualIp : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["disableForTime"] = args ? args.disableForTime : undefined;
            resourceInputs["gatewayProxyEnabled"] = args ? args.gatewayProxyEnabled : undefined;
            resourceInputs["gatewayUdpProxyEnabled"] = args ? args.gatewayUdpProxyEnabled : undefined;
            resourceInputs["rootCertificateInstallationEnabled"] = args ? args.rootCertificateInstallationEnabled : undefined;
            resourceInputs["useZtVirtualIp"] = args ? args.useZtVirtualIp : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustDeviceSettings.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ZeroTrustDeviceSettings = ZeroTrustDeviceSettings;
/** @internal */
ZeroTrustDeviceSettings.__pulumiType = 'cloudflare:index/zeroTrustDeviceSettings:ZeroTrustDeviceSettings';
//# sourceMappingURL=zeroTrustDeviceSettings.js.map