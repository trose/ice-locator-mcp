import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustDeviceDefaultProfile = new cloudflare.ZeroTrustDeviceDefaultProfile("example_zero_trust_device_default_profile", {
 *     accountId: "699d98642c564d2e855e9661899b7252",
 *     allowModeSwitch: true,
 *     allowUpdates: true,
 *     allowedToLeave: true,
 *     autoConnect: 0,
 *     captivePortal: 180,
 *     disableAutoFallback: true,
 *     excludes: [{
 *         address: "192.0.2.0/24",
 *         description: "Exclude testing domains from the tunnel",
 *     }],
 *     excludeOfficeIps: true,
 *     includes: [{
 *         address: "192.0.2.0/24",
 *         description: "Include testing domains in the tunnel",
 *     }],
 *     lanAllowMinutes: 30,
 *     lanAllowSubnetSize: 24,
 *     registerInterfaceIpWithDns: true,
 *     sccmVpnBoundarySupport: false,
 *     serviceModeV2: {
 *         mode: "proxy",
 *         port: 3000,
 *     },
 *     supportUrl: "https://1.1.1.1/help",
 *     switchLocked: true,
 *     tunnelProtocol: "wireguard",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDeviceDefaultProfile:ZeroTrustDeviceDefaultProfile example '<account_id>'
 * ```
 */
export declare class ZeroTrustDeviceDefaultProfile extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDeviceDefaultProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDeviceDefaultProfileState, opts?: pulumi.CustomResourceOptions): ZeroTrustDeviceDefaultProfile;
    /**
     * Returns true if the given object is an instance of ZeroTrustDeviceDefaultProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustDeviceDefaultProfile;
    readonly accountId: pulumi.Output<string>;
    /**
     * Whether to allow the user to switch WARP between modes.
     */
    readonly allowModeSwitch: pulumi.Output<boolean>;
    /**
     * Whether to receive update notifications when a new version of the client is available.
     */
    readonly allowUpdates: pulumi.Output<boolean>;
    /**
     * Whether to allow devices to leave the organization.
     */
    readonly allowedToLeave: pulumi.Output<boolean>;
    /**
     * The amount of time in seconds to reconnect after having been disabled.
     */
    readonly autoConnect: pulumi.Output<number>;
    /**
     * Turn on the captive portal after the specified amount of time.
     */
    readonly captivePortal: pulumi.Output<number>;
    /**
     * Whether the policy will be applied to matching devices.
     */
    readonly default: pulumi.Output<boolean>;
    /**
     * If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
     */
    readonly disableAutoFallback: pulumi.Output<boolean>;
    /**
     * Whether the policy will be applied to matching devices.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * Whether to add Microsoft IPs to Split Tunnel exclusions.
     */
    readonly excludeOfficeIps: pulumi.Output<boolean>;
    /**
     * List of routes excluded in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.
     */
    readonly excludes: pulumi.Output<outputs.ZeroTrustDeviceDefaultProfileExclude[] | undefined>;
    readonly fallbackDomains: pulumi.Output<outputs.ZeroTrustDeviceDefaultProfileFallbackDomain[]>;
    readonly gatewayUniqueId: pulumi.Output<string>;
    /**
     * List of routes included in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.
     */
    readonly includes: pulumi.Output<outputs.ZeroTrustDeviceDefaultProfileInclude[] | undefined>;
    /**
     * The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
     */
    readonly lanAllowMinutes: pulumi.Output<number | undefined>;
    /**
     * The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
     */
    readonly lanAllowSubnetSize: pulumi.Output<number | undefined>;
    /**
     * Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.
     */
    readonly registerInterfaceIpWithDns: pulumi.Output<boolean>;
    /**
     * Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).
     */
    readonly sccmVpnBoundarySupport: pulumi.Output<boolean>;
    readonly serviceModeV2: pulumi.Output<outputs.ZeroTrustDeviceDefaultProfileServiceModeV2 | undefined>;
    /**
     * The URL to launch when the Send Feedback button is clicked.
     */
    readonly supportUrl: pulumi.Output<string>;
    /**
     * Whether to allow the user to turn off the WARP switch and disconnect the client.
     */
    readonly switchLocked: pulumi.Output<boolean>;
    /**
     * Determines which tunnel protocol to use.
     */
    readonly tunnelProtocol: pulumi.Output<string>;
    /**
     * Create a ZeroTrustDeviceDefaultProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDeviceDefaultProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustDeviceDefaultProfile resources.
 */
export interface ZeroTrustDeviceDefaultProfileState {
    accountId?: pulumi.Input<string>;
    /**
     * Whether to allow the user to switch WARP between modes.
     */
    allowModeSwitch?: pulumi.Input<boolean>;
    /**
     * Whether to receive update notifications when a new version of the client is available.
     */
    allowUpdates?: pulumi.Input<boolean>;
    /**
     * Whether to allow devices to leave the organization.
     */
    allowedToLeave?: pulumi.Input<boolean>;
    /**
     * The amount of time in seconds to reconnect after having been disabled.
     */
    autoConnect?: pulumi.Input<number>;
    /**
     * Turn on the captive portal after the specified amount of time.
     */
    captivePortal?: pulumi.Input<number>;
    /**
     * Whether the policy will be applied to matching devices.
     */
    default?: pulumi.Input<boolean>;
    /**
     * If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
     */
    disableAutoFallback?: pulumi.Input<boolean>;
    /**
     * Whether the policy will be applied to matching devices.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Whether to add Microsoft IPs to Split Tunnel exclusions.
     */
    excludeOfficeIps?: pulumi.Input<boolean>;
    /**
     * List of routes excluded in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.
     */
    excludes?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileExclude>[]>;
    fallbackDomains?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileFallbackDomain>[]>;
    gatewayUniqueId?: pulumi.Input<string>;
    /**
     * List of routes included in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.
     */
    includes?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileInclude>[]>;
    /**
     * The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
     */
    lanAllowMinutes?: pulumi.Input<number>;
    /**
     * The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
     */
    lanAllowSubnetSize?: pulumi.Input<number>;
    /**
     * Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.
     */
    registerInterfaceIpWithDns?: pulumi.Input<boolean>;
    /**
     * Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).
     */
    sccmVpnBoundarySupport?: pulumi.Input<boolean>;
    serviceModeV2?: pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileServiceModeV2>;
    /**
     * The URL to launch when the Send Feedback button is clicked.
     */
    supportUrl?: pulumi.Input<string>;
    /**
     * Whether to allow the user to turn off the WARP switch and disconnect the client.
     */
    switchLocked?: pulumi.Input<boolean>;
    /**
     * Determines which tunnel protocol to use.
     */
    tunnelProtocol?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustDeviceDefaultProfile resource.
 */
export interface ZeroTrustDeviceDefaultProfileArgs {
    accountId: pulumi.Input<string>;
    /**
     * Whether to allow the user to switch WARP between modes.
     */
    allowModeSwitch?: pulumi.Input<boolean>;
    /**
     * Whether to receive update notifications when a new version of the client is available.
     */
    allowUpdates?: pulumi.Input<boolean>;
    /**
     * Whether to allow devices to leave the organization.
     */
    allowedToLeave?: pulumi.Input<boolean>;
    /**
     * The amount of time in seconds to reconnect after having been disabled.
     */
    autoConnect?: pulumi.Input<number>;
    /**
     * Turn on the captive portal after the specified amount of time.
     */
    captivePortal?: pulumi.Input<number>;
    /**
     * If the `dnsServer` field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers unless this policy option is set to `true`.
     */
    disableAutoFallback?: pulumi.Input<boolean>;
    /**
     * Whether to add Microsoft IPs to Split Tunnel exclusions.
     */
    excludeOfficeIps?: pulumi.Input<boolean>;
    /**
     * List of routes excluded in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.
     */
    excludes?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileExclude>[]>;
    /**
     * List of routes included in the WARP client's tunnel. Both 'exclude' and 'include' cannot be set in the same request.
     */
    includes?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileInclude>[]>;
    /**
     * The amount of time in minutes a user is allowed access to their LAN. A value of 0 will allow LAN access until the next WARP reconnection, such as a reboot or a laptop waking from sleep. Note that this field is omitted from the response if null or unset.
     */
    lanAllowMinutes?: pulumi.Input<number>;
    /**
     * The size of the subnet for the local access network. Note that this field is omitted from the response if null or unset.
     */
    lanAllowSubnetSize?: pulumi.Input<number>;
    /**
     * Determines if the operating system will register WARP's local interface IP with your on-premises DNS server.
     */
    registerInterfaceIpWithDns?: pulumi.Input<boolean>;
    /**
     * Determines whether the WARP client indicates to SCCM that it is inside a VPN boundary. (Windows only).
     */
    sccmVpnBoundarySupport?: pulumi.Input<boolean>;
    serviceModeV2?: pulumi.Input<inputs.ZeroTrustDeviceDefaultProfileServiceModeV2>;
    /**
     * The URL to launch when the Send Feedback button is clicked.
     */
    supportUrl?: pulumi.Input<string>;
    /**
     * Whether to allow the user to turn off the WARP switch and disconnect the client.
     */
    switchLocked?: pulumi.Input<boolean>;
    /**
     * Determines which tunnel protocol to use.
     */
    tunnelProtocol?: pulumi.Input<string>;
}
