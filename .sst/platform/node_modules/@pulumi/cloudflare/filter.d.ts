import * as pulumi from "@pulumi/pulumi";
/**
 * > `cloudflare.Filter` is in a deprecation phase until June 15th, 2025.
 *   During this time period, this resource is still fully
 *   supported but you are strongly advised to move to the
 *   `cloudflare.Ruleset` resource. Full details can be found in the
 *   developer documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleFilter = new cloudflare.Filter("example_filter", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     expression: "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/filter:Filter example '<zone_id>/<filter_id>'
 * ```
 */
export declare class Filter extends pulumi.CustomResource {
    /**
     * Get an existing Filter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FilterState, opts?: pulumi.CustomResourceOptions): Filter;
    /**
     * Returns true if the given object is an instance of Filter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Filter;
    /**
     * An informative summary of the filter.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
     */
    readonly expression: pulumi.Output<string>;
    /**
     * When true, indicates that the filter is currently paused.
     */
    readonly paused: pulumi.Output<boolean>;
    /**
     * A short reference tag. Allows you to select related filters.
     */
    readonly ref: pulumi.Output<string>;
    /**
     * Defines an identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a Filter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FilterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Filter resources.
 */
export interface FilterState {
    /**
     * An informative summary of the filter.
     */
    description?: pulumi.Input<string>;
    /**
     * The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
     */
    expression?: pulumi.Input<string>;
    /**
     * When true, indicates that the filter is currently paused.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * A short reference tag. Allows you to select related filters.
     */
    ref?: pulumi.Input<string>;
    /**
     * Defines an identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Filter resource.
 */
export interface FilterArgs {
    /**
     * The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).
     */
    expression: pulumi.Input<string>;
    /**
     * Defines an identifier.
     */
    zoneId: pulumi.Input<string>;
}
