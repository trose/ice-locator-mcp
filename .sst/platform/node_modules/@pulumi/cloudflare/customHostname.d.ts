import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/customHostname:CustomHostname example '<zone_id>/<custom_hostname_id>'
 * ```
 */
export declare class CustomHostname extends pulumi.CustomResource {
    /**
     * Get an existing CustomHostname resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomHostnameState, opts?: pulumi.CustomResourceOptions): CustomHostname;
    /**
     * Returns true if the given object is an instance of CustomHostname.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomHostname;
    /**
     * This is the time the hostname was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
     */
    readonly customMetadata: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.
     */
    readonly customOriginServer: pulumi.Output<string | undefined>;
    /**
     * A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request*host*header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
     */
    readonly customOriginSni: pulumi.Output<string | undefined>;
    /**
     * The custom hostname that will point to your hostname via CNAME.
     */
    readonly hostname: pulumi.Output<string>;
    /**
     * This is a record which can be placed to activate a hostname.
     */
    readonly ownershipVerification: pulumi.Output<outputs.CustomHostnameOwnershipVerification>;
    /**
     * This presents the token to be served by the given http url to activate a hostname.
     */
    readonly ownershipVerificationHttp: pulumi.Output<outputs.CustomHostnameOwnershipVerificationHttp>;
    /**
     * SSL properties used when creating the custom hostname.
     */
    readonly ssl: pulumi.Output<outputs.CustomHostnameSsl>;
    /**
     * Status of the hostname's activation.
     * Available values: "active", "pending", "active*redeploying", "moved", "pending*deletion", "deleted", "pending*blocked", "pending*migration", "pending*provisioned", "test*pending", "test*active", "test*active*apex", "test*blocked", "testFailed", "provisioned", "blocked".
     */
    readonly status: pulumi.Output<string>;
    /**
     * These are errors that were encountered while trying to activate a hostname.
     */
    readonly verificationErrors: pulumi.Output<string[]>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a CustomHostname resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomHostnameArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CustomHostname resources.
 */
export interface CustomHostnameState {
    /**
     * This is the time the hostname was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
     */
    customMetadata?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.
     */
    customOriginServer?: pulumi.Input<string>;
    /**
     * A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request*host*header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
     */
    customOriginSni?: pulumi.Input<string>;
    /**
     * The custom hostname that will point to your hostname via CNAME.
     */
    hostname?: pulumi.Input<string>;
    /**
     * This is a record which can be placed to activate a hostname.
     */
    ownershipVerification?: pulumi.Input<inputs.CustomHostnameOwnershipVerification>;
    /**
     * This presents the token to be served by the given http url to activate a hostname.
     */
    ownershipVerificationHttp?: pulumi.Input<inputs.CustomHostnameOwnershipVerificationHttp>;
    /**
     * SSL properties used when creating the custom hostname.
     */
    ssl?: pulumi.Input<inputs.CustomHostnameSsl>;
    /**
     * Status of the hostname's activation.
     * Available values: "active", "pending", "active*redeploying", "moved", "pending*deletion", "deleted", "pending*blocked", "pending*migration", "pending*provisioned", "test*pending", "test*active", "test*active*apex", "test*blocked", "testFailed", "provisioned", "blocked".
     */
    status?: pulumi.Input<string>;
    /**
     * These are errors that were encountered while trying to activate a hostname.
     */
    verificationErrors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a CustomHostname resource.
 */
export interface CustomHostnameArgs {
    /**
     * Unique key/value metadata for this hostname. These are per-hostname (customer) settings.
     */
    customMetadata?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.
     */
    customOriginServer?: pulumi.Input<string>;
    /**
     * A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request*host*header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.
     */
    customOriginSni?: pulumi.Input<string>;
    /**
     * The custom hostname that will point to your hostname via CNAME.
     */
    hostname: pulumi.Input<string>;
    /**
     * SSL properties used when creating the custom hostname.
     */
    ssl: pulumi.Input<inputs.CustomHostnameSsl>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
