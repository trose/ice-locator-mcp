import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/emailRoutingCatchAll:EmailRoutingCatchAll example '<zone_id>'
 * ```
 */
export declare class EmailRoutingCatchAll extends pulumi.CustomResource {
    /**
     * Get an existing EmailRoutingCatchAll resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailRoutingCatchAllState, opts?: pulumi.CustomResourceOptions): EmailRoutingCatchAll;
    /**
     * Returns true if the given object is an instance of EmailRoutingCatchAll.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EmailRoutingCatchAll;
    /**
     * List actions for the catch-all routing rule.
     */
    readonly actions: pulumi.Output<outputs.EmailRoutingCatchAllAction[]>;
    /**
     * Routing rule status.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * List of matchers for the catch-all routing rule.
     */
    readonly matchers: pulumi.Output<outputs.EmailRoutingCatchAllMatcher[]>;
    /**
     * Routing rule name.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Routing rule tag. (Deprecated, replaced by routing rule identifier)
     *
     * @deprecated This attribute is deprecated.
     */
    readonly tag: pulumi.Output<string>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a EmailRoutingCatchAll resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailRoutingCatchAllArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EmailRoutingCatchAll resources.
 */
export interface EmailRoutingCatchAllState {
    /**
     * List actions for the catch-all routing rule.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.EmailRoutingCatchAllAction>[]>;
    /**
     * Routing rule status.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of matchers for the catch-all routing rule.
     */
    matchers?: pulumi.Input<pulumi.Input<inputs.EmailRoutingCatchAllMatcher>[]>;
    /**
     * Routing rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Routing rule tag. (Deprecated, replaced by routing rule identifier)
     *
     * @deprecated This attribute is deprecated.
     */
    tag?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EmailRoutingCatchAll resource.
 */
export interface EmailRoutingCatchAllArgs {
    /**
     * List actions for the catch-all routing rule.
     */
    actions: pulumi.Input<pulumi.Input<inputs.EmailRoutingCatchAllAction>[]>;
    /**
     * Routing rule status.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * List of matchers for the catch-all routing rule.
     */
    matchers: pulumi.Input<pulumi.Input<inputs.EmailRoutingCatchAllMatcher>[]>;
    /**
     * Routing rule name.
     */
    name?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
