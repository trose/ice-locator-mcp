import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShieldOperation = new cloudflare.ApiShieldOperation("example_api_shield_operation", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     endpoint: "/api/v1/users/{var1}",
 *     host: "www.example.com",
 *     method: "GET",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/apiShieldOperation:ApiShieldOperation example '<zone_id>/<operation_id>'
 * ```
 */
export declare class ApiShieldOperation extends pulumi.CustomResource {
    /**
     * Get an existing ApiShieldOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiShieldOperationState, opts?: pulumi.CustomResourceOptions): ApiShieldOperation;
    /**
     * Returns true if the given object is an instance of ApiShieldOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApiShieldOperation;
    /**
     * The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
     */
    readonly endpoint: pulumi.Output<string>;
    readonly features: pulumi.Output<outputs.ApiShieldOperationFeatures>;
    /**
     * RFC3986-compliant host.
     */
    readonly host: pulumi.Output<string>;
    readonly lastUpdated: pulumi.Output<string>;
    /**
     * The HTTP method used to access the endpoint.
     * Available values: "GET", "POST", "HEAD", "OPTIONS", "PUT", "DELETE", "CONNECT", "PATCH", "TRACE".
     */
    readonly method: pulumi.Output<string>;
    /**
     * UUID.
     */
    readonly operationId: pulumi.Output<string>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ApiShieldOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiShieldOperationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ApiShieldOperation resources.
 */
export interface ApiShieldOperationState {
    /**
     * The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
     */
    endpoint?: pulumi.Input<string>;
    features?: pulumi.Input<inputs.ApiShieldOperationFeatures>;
    /**
     * RFC3986-compliant host.
     */
    host?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * The HTTP method used to access the endpoint.
     * Available values: "GET", "POST", "HEAD", "OPTIONS", "PUT", "DELETE", "CONNECT", "PATCH", "TRACE".
     */
    method?: pulumi.Input<string>;
    /**
     * UUID.
     */
    operationId?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ApiShieldOperation resource.
 */
export interface ApiShieldOperationArgs {
    /**
     * The endpoint which can contain path parameter templates in curly braces, each will be replaced from left to right with {varN}, starting with {var1}, during insertion. This will further be Cloudflare-normalized upon insertion. See: https://developers.cloudflare.com/rules/normalization/how-it-works/.
     */
    endpoint: pulumi.Input<string>;
    /**
     * RFC3986-compliant host.
     */
    host: pulumi.Input<string>;
    /**
     * The HTTP method used to access the endpoint.
     * Available values: "GET", "POST", "HEAD", "OPTIONS", "PUT", "DELETE", "CONNECT", "PATCH", "TRACE".
     */
    method: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
