import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersDeployment:WorkersDeployment example '<account_id>/<script_name>/<deployment_id>'
 * ```
 */
export declare class WorkersDeployment extends pulumi.CustomResource {
    /**
     * Get an existing WorkersDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersDeploymentState, opts?: pulumi.CustomResourceOptions): WorkersDeployment;
    /**
     * Returns true if the given object is an instance of WorkersDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkersDeployment;
    /**
     * Identifier.
     */
    readonly accountId: pulumi.Output<string>;
    readonly annotations: pulumi.Output<outputs.WorkersDeploymentAnnotations>;
    readonly authorEmail: pulumi.Output<string>;
    readonly createdOn: pulumi.Output<string>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    readonly scriptName: pulumi.Output<string>;
    readonly source: pulumi.Output<string>;
    /**
     * Available values: "percentage".
     */
    readonly strategy: pulumi.Output<string>;
    readonly versions: pulumi.Output<outputs.WorkersDeploymentVersion[]>;
    /**
     * Create a WorkersDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersDeploymentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkersDeployment resources.
 */
export interface WorkersDeploymentState {
    /**
     * Identifier.
     */
    accountId?: pulumi.Input<string>;
    annotations?: pulumi.Input<inputs.WorkersDeploymentAnnotations>;
    authorEmail?: pulumi.Input<string>;
    createdOn?: pulumi.Input<string>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    scriptName?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    /**
     * Available values: "percentage".
     */
    strategy?: pulumi.Input<string>;
    versions?: pulumi.Input<pulumi.Input<inputs.WorkersDeploymentVersion>[]>;
}
/**
 * The set of arguments for constructing a WorkersDeployment resource.
 */
export interface WorkersDeploymentArgs {
    /**
     * Identifier.
     */
    accountId: pulumi.Input<string>;
    annotations?: pulumi.Input<inputs.WorkersDeploymentAnnotations>;
    /**
     * Name of the script, used in URLs and route configuration.
     */
    scriptName: pulumi.Input<string>;
    /**
     * Available values: "percentage".
     */
    strategy: pulumi.Input<string>;
    versions: pulumi.Input<pulumi.Input<inputs.WorkersDeploymentVersion>[]>;
}
