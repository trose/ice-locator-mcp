import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleD1Databases = cloudflare.getD1Databases({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "name",
 * });
 * ```
 */
export declare function getD1Databases(args: GetD1DatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetD1DatabasesResult>;
/**
 * A collection of arguments for invoking getD1Databases.
 */
export interface GetD1DatabasesArgs {
    /**
     * Account identifier tag.
     */
    accountId: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * a database name to search for.
     */
    name?: string;
}
/**
 * A collection of values returned by getD1Databases.
 */
export interface GetD1DatabasesResult {
    /**
     * Account identifier tag.
     */
    readonly accountId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * a database name to search for.
     */
    readonly name?: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetD1DatabasesResult[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleD1Databases = cloudflare.getD1Databases({
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     name: "name",
 * });
 * ```
 */
export declare function getD1DatabasesOutput(args: GetD1DatabasesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetD1DatabasesResult>;
/**
 * A collection of arguments for invoking getD1Databases.
 */
export interface GetD1DatabasesOutputArgs {
    /**
     * Account identifier tag.
     */
    accountId: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * a database name to search for.
     */
    name?: pulumi.Input<string>;
}
