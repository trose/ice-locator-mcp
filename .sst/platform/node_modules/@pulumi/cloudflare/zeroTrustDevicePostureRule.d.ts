import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDevicePostureRule:ZeroTrustDevicePostureRule example '<account_id>/<rule_id>'
 * ```
 */
export declare class ZeroTrustDevicePostureRule extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDevicePostureRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDevicePostureRuleState, opts?: pulumi.CustomResourceOptions): ZeroTrustDevicePostureRule;
    /**
     * Returns true if the given object is an instance of ZeroTrustDevicePostureRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustDevicePostureRule;
    readonly accountId: pulumi.Output<string>;
    /**
     * The description of the device posture rule.
     */
    readonly description: pulumi.Output<string>;
    /**
     * Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
     */
    readonly expiration: pulumi.Output<string | undefined>;
    /**
     * The value to be checked against.
     */
    readonly input: pulumi.Output<outputs.ZeroTrustDevicePostureRuleInput | undefined>;
    /**
     * The conditions that the client must match to run the rule.
     */
    readonly matches: pulumi.Output<outputs.ZeroTrustDevicePostureRuleMatch[] | undefined>;
    /**
     * The name of the device posture rule.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
     */
    readonly schedule: pulumi.Output<string | undefined>;
    /**
     * The type of device posture rule.
     * Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ZeroTrustDevicePostureRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDevicePostureRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustDevicePostureRule resources.
 */
export interface ZeroTrustDevicePostureRuleState {
    accountId?: pulumi.Input<string>;
    /**
     * The description of the device posture rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
     */
    expiration?: pulumi.Input<string>;
    /**
     * The value to be checked against.
     */
    input?: pulumi.Input<inputs.ZeroTrustDevicePostureRuleInput>;
    /**
     * The conditions that the client must match to run the rule.
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDevicePostureRuleMatch>[]>;
    /**
     * The name of the device posture rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
     */
    schedule?: pulumi.Input<string>;
    /**
     * The type of device posture rule.
     * Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
     */
    type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustDevicePostureRule resource.
 */
export interface ZeroTrustDevicePostureRuleArgs {
    accountId: pulumi.Input<string>;
    /**
     * The description of the device posture rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Sets the expiration time for a posture check result. If empty, the result remains valid until it is overwritten by new data from the WARP client.
     */
    expiration?: pulumi.Input<string>;
    /**
     * The value to be checked against.
     */
    input?: pulumi.Input<inputs.ZeroTrustDevicePostureRuleInput>;
    /**
     * The conditions that the client must match to run the rule.
     */
    matches?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDevicePostureRuleMatch>[]>;
    /**
     * The name of the device posture rule.
     */
    name: pulumi.Input<string>;
    /**
     * Polling frequency for the WARP client posture check. Default: `5m` (poll every five minutes). Minimum: `1m`.
     */
    schedule?: pulumi.Input<string>;
    /**
     * The type of device posture rule.
     * Available values: "file", "application", "tanium", "gateway", "warp", "disk*encryption", "serial*number", "sentinelone", "carbonblack", "firewall", "os*version", "domain*joined", "client*certificate", "client*certificate*v2", "unique*client*id", "kolide", "tanium*s2s", "crowdstrike*s2s", "intune", "workspace*one", "sentinelone*s2s", "custom*s2s".
     */
    type: pulumi.Input<string>;
}
