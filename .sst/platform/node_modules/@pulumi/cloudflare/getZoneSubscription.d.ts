import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZoneSubscription = cloudflare.getZoneSubscription({
 *     zoneId: "506e3185e9c882d175a2d0cb0093d9f2",
 * });
 * ```
 */
export declare function getZoneSubscription(args: GetZoneSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetZoneSubscriptionResult>;
/**
 * A collection of arguments for invoking getZoneSubscription.
 */
export interface GetZoneSubscriptionArgs {
    /**
     * Subscription identifier tag.
     */
    zoneId: string;
}
/**
 * A collection of values returned by getZoneSubscription.
 */
export interface GetZoneSubscriptionResult {
    /**
     * The monetary unit in which pricing information is displayed.
     */
    readonly currency: string;
    /**
     * The end of the current period and also when the next billing is due.
     */
    readonly currentPeriodEnd: string;
    /**
     * When the current billing period started. May match initial*period*start if this is the first period.
     */
    readonly currentPeriodStart: string;
    /**
     * How often the subscription is renewed automatically.
     * Available values: "weekly", "monthly", "quarterly", "yearly".
     */
    readonly frequency: string;
    /**
     * Subscription identifier tag.
     */
    readonly id: string;
    /**
     * The price of the subscription that will be billed, in US dollars.
     */
    readonly price: number;
    /**
     * The rate plan applied to the subscription.
     */
    readonly ratePlan: outputs.GetZoneSubscriptionRatePlan;
    /**
     * The state that the subscription is in.
     * Available values: "Trial", "Provisioned", "Paid", "AwaitingPayment", "Cancelled", "Failed", "Expired".
     */
    readonly state: string;
    /**
     * Subscription identifier tag.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZoneSubscription = cloudflare.getZoneSubscription({
 *     zoneId: "506e3185e9c882d175a2d0cb0093d9f2",
 * });
 * ```
 */
export declare function getZoneSubscriptionOutput(args: GetZoneSubscriptionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetZoneSubscriptionResult>;
/**
 * A collection of arguments for invoking getZoneSubscription.
 */
export interface GetZoneSubscriptionOutputArgs {
    /**
     * Subscription identifier tag.
     */
    zoneId: pulumi.Input<string>;
}
