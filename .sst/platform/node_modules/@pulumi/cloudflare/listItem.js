"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListItem = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleListItem = new cloudflare.ListItem("example_list_item", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     listId: "2c0fc9fa937b11eaa1b71c4d701ab86e",
 *     ip: "10.0.0.1",
 * });
 * ```
 */
class ListItem extends pulumi.CustomResource {
    /**
     * Get an existing ListItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ListItem(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ListItem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ListItem.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["asn"] = state ? state.asn : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["ip"] = state ? state.ip : undefined;
            resourceInputs["listId"] = state ? state.listId : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["operationId"] = state ? state.operationId : undefined;
            resourceInputs["redirect"] = state ? state.redirect : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.listId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["asn"] = args ? args.asn : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["ip"] = args ? args.ip : undefined;
            resourceInputs["listId"] = args ? args.listId : undefined;
            resourceInputs["redirect"] = args ? args.redirect : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
            resourceInputs["operationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ListItem.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ListItem = ListItem;
/** @internal */
ListItem.__pulumiType = 'cloudflare:index/listItem:ListItem';
//# sourceMappingURL=listItem.js.map