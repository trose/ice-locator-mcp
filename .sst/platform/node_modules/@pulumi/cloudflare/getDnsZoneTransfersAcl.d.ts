import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleDnsZoneTransfersAcl = cloudflare.getDnsZoneTransfersAcl({
 *     accountId: "01a7362d577a6c3019a474fd6f485823",
 *     aclId: "23ff594956f20c2a721606e94745a8aa",
 * });
 * ```
 */
export declare function getDnsZoneTransfersAcl(args: GetDnsZoneTransfersAclArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsZoneTransfersAclResult>;
/**
 * A collection of arguments for invoking getDnsZoneTransfersAcl.
 */
export interface GetDnsZoneTransfersAclArgs {
    accountId: string;
    aclId?: string;
}
/**
 * A collection of values returned by getDnsZoneTransfersAcl.
 */
export interface GetDnsZoneTransfersAclResult {
    readonly accountId: string;
    readonly aclId?: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.
     */
    readonly ipRange: string;
    /**
     * The name of the acl.
     */
    readonly name: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleDnsZoneTransfersAcl = cloudflare.getDnsZoneTransfersAcl({
 *     accountId: "01a7362d577a6c3019a474fd6f485823",
 *     aclId: "23ff594956f20c2a721606e94745a8aa",
 * });
 * ```
 */
export declare function getDnsZoneTransfersAclOutput(args: GetDnsZoneTransfersAclOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsZoneTransfersAclResult>;
/**
 * A collection of arguments for invoking getDnsZoneTransfersAcl.
 */
export interface GetDnsZoneTransfersAclOutputArgs {
    accountId: pulumi.Input<string>;
    aclId?: pulumi.Input<string>;
}
