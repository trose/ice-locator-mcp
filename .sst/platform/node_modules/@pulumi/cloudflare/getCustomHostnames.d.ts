import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCustomHostnames = cloudflare.getCustomHostnames({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     id: "0d89c70d-ad9f-4843-b99f-6cc0252067e9",
 *     direction: "desc",
 *     hostname: "app.example.com",
 *     ssl: 0,
 * });
 * ```
 */
export declare function getCustomHostnames(args: GetCustomHostnamesArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomHostnamesResult>;
/**
 * A collection of arguments for invoking getCustomHostnames.
 */
export interface GetCustomHostnamesArgs {
    /**
     * Direction to order hostnames.
     * Available values: "asc", "desc".
     */
    direction?: string;
    /**
     * Fully qualified domain name to match against. This parameter cannot be used with the 'id' parameter.
     */
    hostname?: string;
    /**
     * Hostname ID to match against. This ID was generated and returned during the initial customHostname creation. This parameter cannot be used with the 'hostname' parameter.
     */
    id?: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * Field to order hostnames by.
     * Available values: "ssl", "sslStatus".
     */
    order?: string;
    /**
     * Whether to filter hostnames based on if they have SSL enabled.
     * Available values: 0, 1.
     */
    ssl?: number;
    /**
     * Identifier.
     */
    zoneId: string;
}
/**
 * A collection of values returned by getCustomHostnames.
 */
export interface GetCustomHostnamesResult {
    /**
     * Direction to order hostnames.
     * Available values: "asc", "desc".
     */
    readonly direction?: string;
    /**
     * Fully qualified domain name to match against. This parameter cannot be used with the 'id' parameter.
     */
    readonly hostname?: string;
    /**
     * Hostname ID to match against. This ID was generated and returned during the initial customHostname creation. This parameter cannot be used with the 'hostname' parameter.
     */
    readonly id?: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * Field to order hostnames by.
     * Available values: "ssl", "sslStatus".
     */
    readonly order: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetCustomHostnamesResult[];
    /**
     * Whether to filter hostnames based on if they have SSL enabled.
     * Available values: 0, 1.
     */
    readonly ssl?: number;
    /**
     * Identifier.
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleCustomHostnames = cloudflare.getCustomHostnames({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     id: "0d89c70d-ad9f-4843-b99f-6cc0252067e9",
 *     direction: "desc",
 *     hostname: "app.example.com",
 *     ssl: 0,
 * });
 * ```
 */
export declare function getCustomHostnamesOutput(args: GetCustomHostnamesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCustomHostnamesResult>;
/**
 * A collection of arguments for invoking getCustomHostnames.
 */
export interface GetCustomHostnamesOutputArgs {
    /**
     * Direction to order hostnames.
     * Available values: "asc", "desc".
     */
    direction?: pulumi.Input<string>;
    /**
     * Fully qualified domain name to match against. This parameter cannot be used with the 'id' parameter.
     */
    hostname?: pulumi.Input<string>;
    /**
     * Hostname ID to match against. This ID was generated and returned during the initial customHostname creation. This parameter cannot be used with the 'hostname' parameter.
     */
    id?: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * Field to order hostnames by.
     * Available values: "ssl", "sslStatus".
     */
    order?: pulumi.Input<string>;
    /**
     * Whether to filter hostnames based on if they have SSL enabled.
     * Available values: 0, 1.
     */
    ssl?: pulumi.Input<number>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
