import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleDnsZoneTransfersTsig = new cloudflare.DnsZoneTransfersTsig("example_dns_zone_transfers_tsig", {
 *     accountId: "01a7362d577a6c3019a474fd6f485823",
 *     algo: "hmac-sha512.",
 *     name: "tsig.customer.cf.",
 *     secret: "caf79a7804b04337c9c66ccd7bef9190a1e1679b5dd03d8aa10f7ad45e1a9dab92b417896c15d4d007c7c14194538d2a5d0feffdecc5a7f0e1c570cfa700837c",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/dnsZoneTransfersTsig:DnsZoneTransfersTsig example '<account_id>/<tsig_id>'
 * ```
 */
export declare class DnsZoneTransfersTsig extends pulumi.CustomResource {
    /**
     * Get an existing DnsZoneTransfersTsig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsZoneTransfersTsigState, opts?: pulumi.CustomResourceOptions): DnsZoneTransfersTsig;
    /**
     * Returns true if the given object is an instance of DnsZoneTransfersTsig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DnsZoneTransfersTsig;
    readonly accountId: pulumi.Output<string>;
    /**
     * TSIG algorithm.
     */
    readonly algo: pulumi.Output<string>;
    /**
     * TSIG key name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * TSIG secret.
     */
    readonly secret: pulumi.Output<string>;
    /**
     * Create a DnsZoneTransfersTsig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsZoneTransfersTsigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DnsZoneTransfersTsig resources.
 */
export interface DnsZoneTransfersTsigState {
    accountId?: pulumi.Input<string>;
    /**
     * TSIG algorithm.
     */
    algo?: pulumi.Input<string>;
    /**
     * TSIG key name.
     */
    name?: pulumi.Input<string>;
    /**
     * TSIG secret.
     */
    secret?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DnsZoneTransfersTsig resource.
 */
export interface DnsZoneTransfersTsigArgs {
    accountId: pulumi.Input<string>;
    /**
     * TSIG algorithm.
     */
    algo: pulumi.Input<string>;
    /**
     * TSIG key name.
     */
    name: pulumi.Input<string>;
    /**
     * TSIG secret.
     */
    secret: pulumi.Input<string>;
}
