import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccounts = cloudflare.getAccounts({
 *     direction: "desc",
 *     name: "example.com",
 * });
 * ```
 */
export declare function getAccounts(args?: GetAccountsArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountsResult>;
/**
 * A collection of arguments for invoking getAccounts.
 */
export interface GetAccountsArgs {
    /**
     * Direction to order results.
     * Available values: "asc", "desc".
     */
    direction?: string;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: number;
    /**
     * Name of the account.
     */
    name?: string;
}
/**
 * A collection of values returned by getAccounts.
 */
export interface GetAccountsResult {
    /**
     * Direction to order results.
     * Available values: "asc", "desc".
     */
    readonly direction?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Max items to fetch, default: 1000
     */
    readonly maxItems?: number;
    /**
     * Name of the account.
     */
    readonly name?: string;
    /**
     * The items returned by the data source
     */
    readonly results: outputs.GetAccountsResult[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccounts = cloudflare.getAccounts({
 *     direction: "desc",
 *     name: "example.com",
 * });
 * ```
 */
export declare function getAccountsOutput(args?: GetAccountsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountsResult>;
/**
 * A collection of arguments for invoking getAccounts.
 */
export interface GetAccountsOutputArgs {
    /**
     * Direction to order results.
     * Available values: "asc", "desc".
     */
    direction?: pulumi.Input<string>;
    /**
     * Max items to fetch, default: 1000
     */
    maxItems?: pulumi.Input<number>;
    /**
     * Name of the account.
     */
    name?: pulumi.Input<string>;
}
