import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleApiShieldOperationSchemaValidationSettings = new cloudflare.ApiShieldOperationSchemaValidationSettings("example_api_shield_operation_schema_validation_settings", {
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     operationId: "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
 *     mitigationAction: "block",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/apiShieldOperationSchemaValidationSettings:ApiShieldOperationSchemaValidationSettings example '<zone_id>/<operation_id>'
 * ```
 */
export declare class ApiShieldOperationSchemaValidationSettings extends pulumi.CustomResource {
    /**
     * Get an existing ApiShieldOperationSchemaValidationSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiShieldOperationSchemaValidationSettingsState, opts?: pulumi.CustomResourceOptions): ApiShieldOperationSchemaValidationSettings;
    /**
     * Returns true if the given object is an instance of ApiShieldOperationSchemaValidationSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ApiShieldOperationSchemaValidationSettings;
    /**
     * When set, this applies a mitigation action to this operation - `log` log request when request does not conform to schema
     * for this operation - `block` deny access to the site when request does not conform to schema for this operation - `none`
     * will skip mitigation for this operation - `null` indicates that no operation level mitigation is in place, see Zone
     * Level Schema Validation Settings for mitigation action that will be applied Available values: "log", "block", "none".
     */
    readonly mitigationAction: pulumi.Output<string | undefined>;
    /**
     * UUID.
     */
    readonly operationId: pulumi.Output<string>;
    /**
     * Identifier.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ApiShieldOperationSchemaValidationSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiShieldOperationSchemaValidationSettingsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ApiShieldOperationSchemaValidationSettings resources.
 */
export interface ApiShieldOperationSchemaValidationSettingsState {
    /**
     * When set, this applies a mitigation action to this operation - `log` log request when request does not conform to schema
     * for this operation - `block` deny access to the site when request does not conform to schema for this operation - `none`
     * will skip mitigation for this operation - `null` indicates that no operation level mitigation is in place, see Zone
     * Level Schema Validation Settings for mitigation action that will be applied Available values: "log", "block", "none".
     */
    mitigationAction?: pulumi.Input<string>;
    /**
     * UUID.
     */
    operationId?: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ApiShieldOperationSchemaValidationSettings resource.
 */
export interface ApiShieldOperationSchemaValidationSettingsArgs {
    /**
     * When set, this applies a mitigation action to this operation - `log` log request when request does not conform to schema
     * for this operation - `block` deny access to the site when request does not conform to schema for this operation - `none`
     * will skip mitigation for this operation - `null` indicates that no operation level mitigation is in place, see Zone
     * Level Schema Validation Settings for mitigation action that will be applied Available values: "log", "block", "none".
     */
    mitigationAction?: pulumi.Input<string>;
    /**
     * UUID.
     */
    operationId: pulumi.Input<string>;
    /**
     * Identifier.
     */
    zoneId: pulumi.Input<string>;
}
