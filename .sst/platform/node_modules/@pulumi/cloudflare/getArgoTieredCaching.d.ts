import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleArgoTieredCaching = cloudflare.getArgoTieredCaching({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export declare function getArgoTieredCaching(args: GetArgoTieredCachingArgs, opts?: pulumi.InvokeOptions): Promise<GetArgoTieredCachingResult>;
/**
 * A collection of arguments for invoking getArgoTieredCaching.
 */
export interface GetArgoTieredCachingArgs {
    /**
     * Identifier
     */
    zoneId: string;
}
/**
 * A collection of values returned by getArgoTieredCaching.
 */
export interface GetArgoTieredCachingResult {
    /**
     * Whether the setting is editable
     */
    readonly editable: boolean;
    /**
     * ID of the zone setting.
     * Available values: "tieredCaching".
     */
    readonly id: string;
    /**
     * Last time this setting was modified.
     */
    readonly modifiedOn: string;
    /**
     * The value of the feature
     * Available values: "on", "off".
     */
    readonly value: string;
    /**
     * Identifier
     */
    readonly zoneId: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleArgoTieredCaching = cloudflare.getArgoTieredCaching({
 *     zoneId: "023e105f4ecef8ad9ca31a8372d0c353",
 * });
 * ```
 */
export declare function getArgoTieredCachingOutput(args: GetArgoTieredCachingOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetArgoTieredCachingResult>;
/**
 * A collection of arguments for invoking getArgoTieredCaching.
 */
export interface GetArgoTieredCachingOutputArgs {
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
