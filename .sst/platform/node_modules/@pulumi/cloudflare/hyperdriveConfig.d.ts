import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/hyperdriveConfig:HyperdriveConfig example '<account_id>/<hyperdrive_id>'
 * ```
 */
export declare class HyperdriveConfig extends pulumi.CustomResource {
    /**
     * Get an existing HyperdriveConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperdriveConfigState, opts?: pulumi.CustomResourceOptions): HyperdriveConfig;
    /**
     * Returns true if the given object is an instance of HyperdriveConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HyperdriveConfig;
    /**
     * Define configurations using a unique string identifier.
     */
    readonly accountId: pulumi.Output<string>;
    readonly caching: pulumi.Output<outputs.HyperdriveConfigCaching | undefined>;
    /**
     * Defines the creation time of the Hyperdrive configuration.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * Defines the last modified time of the Hyperdrive configuration.
     */
    readonly modifiedOn: pulumi.Output<string>;
    readonly mtls: pulumi.Output<outputs.HyperdriveConfigMtls | undefined>;
    readonly name: pulumi.Output<string>;
    readonly origin: pulumi.Output<outputs.HyperdriveConfigOrigin>;
    /**
     * The (soft) maximum number of connections the Hyperdrive is allowed to make to the origin database.
     */
    readonly originConnectionLimit: pulumi.Output<number | undefined>;
    /**
     * Create a HyperdriveConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HyperdriveConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering HyperdriveConfig resources.
 */
export interface HyperdriveConfigState {
    /**
     * Define configurations using a unique string identifier.
     */
    accountId?: pulumi.Input<string>;
    caching?: pulumi.Input<inputs.HyperdriveConfigCaching>;
    /**
     * Defines the creation time of the Hyperdrive configuration.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Defines the last modified time of the Hyperdrive configuration.
     */
    modifiedOn?: pulumi.Input<string>;
    mtls?: pulumi.Input<inputs.HyperdriveConfigMtls>;
    name?: pulumi.Input<string>;
    origin?: pulumi.Input<inputs.HyperdriveConfigOrigin>;
    /**
     * The (soft) maximum number of connections the Hyperdrive is allowed to make to the origin database.
     */
    originConnectionLimit?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a HyperdriveConfig resource.
 */
export interface HyperdriveConfigArgs {
    /**
     * Define configurations using a unique string identifier.
     */
    accountId: pulumi.Input<string>;
    caching?: pulumi.Input<inputs.HyperdriveConfigCaching>;
    mtls?: pulumi.Input<inputs.HyperdriveConfigMtls>;
    name: pulumi.Input<string>;
    origin: pulumi.Input<inputs.HyperdriveConfigOrigin>;
    /**
     * The (soft) maximum number of connections the Hyperdrive is allowed to make to the origin database.
     */
    originConnectionLimit?: pulumi.Input<number>;
}
