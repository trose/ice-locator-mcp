import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleZeroTrustAccessMtlsCertificate = new cloudflare.ZeroTrustAccessMtlsCertificate("example_zero_trust_access_mtls_certificate", {
 *     certificate: `  -----BEGIN CERTIFICATE-----
 *   MIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10
 *   DrUtmu/B
 *   -----END CERTIFICATE-----
 * `,
 *     name: "Allow devs",
 *     zoneId: "zone_id",
 *     associatedHostnames: ["admin.example.com"],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessMutualTlsCertificate:AccessMutualTlsCertificate example '<{accounts|zones}/{account_id|zone_id}>/<certificate_id>'
 * ```
 *
 * @deprecated cloudflare.index/accessmutualtlscertificate.AccessMutualTlsCertificate has been deprecated in favor of cloudflare.index/zerotrustaccessmtlscertificate.ZeroTrustAccessMtlsCertificate
 */
export declare class AccessMutualTlsCertificate extends pulumi.CustomResource {
    /**
     * Get an existing AccessMutualTlsCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessMutualTlsCertificateState, opts?: pulumi.CustomResourceOptions): AccessMutualTlsCertificate;
    /**
     * Returns true if the given object is an instance of AccessMutualTlsCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessMutualTlsCertificate;
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * The hostnames of the applications that will use this certificate.
     */
    readonly associatedHostnames: pulumi.Output<string[] | undefined>;
    /**
     * The certificate content.
     */
    readonly certificate: pulumi.Output<string>;
    readonly expiresOn: pulumi.Output<string>;
    /**
     * The MD5 fingerprint of the certificate.
     */
    readonly fingerprint: pulumi.Output<string>;
    /**
     * The name of the certificate.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    readonly zoneId: pulumi.Output<string | undefined>;
    /**
     * Create a AccessMutualTlsCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated cloudflare.index/accessmutualtlscertificate.AccessMutualTlsCertificate has been deprecated in favor of cloudflare.index/zerotrustaccessmtlscertificate.ZeroTrustAccessMtlsCertificate */
    constructor(name: string, args: AccessMutualTlsCertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessMutualTlsCertificate resources.
 */
export interface AccessMutualTlsCertificateState {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The hostnames of the applications that will use this certificate.
     */
    associatedHostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The certificate content.
     */
    certificate?: pulumi.Input<string>;
    expiresOn?: pulumi.Input<string>;
    /**
     * The MD5 fingerprint of the certificate.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * The name of the certificate.
     */
    name?: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccessMutualTlsCertificate resource.
 */
export interface AccessMutualTlsCertificateArgs {
    /**
     * The Account ID to use for this endpoint. Mutually exclusive with the Zone ID.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The hostnames of the applications that will use this certificate.
     */
    associatedHostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The certificate content.
     */
    certificate: pulumi.Input<string>;
    /**
     * The name of the certificate.
     */
    name: pulumi.Input<string>;
    /**
     * The Zone ID to use for this endpoint. Mutually exclusive with the Account ID.
     */
    zoneId?: pulumi.Input<string>;
}
