import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
export declare namespace remote {
    /**
     * Instructions for how to connect to a remote endpoint.
     */
    interface ConnectionArgs {
        /**
         * SSH Agent socket path. Default to environment variable SSH_AUTH_SOCK if present.
         */
        agentSocketPath?: pulumi.Input<string>;
        /**
         * Max allowed errors on trying to dial the remote host. -1 set count to unlimited. Default value is 10.
         */
        dialErrorLimit?: pulumi.Input<number>;
        /**
         * The address of the resource to connect to.
         */
        host: pulumi.Input<string>;
        /**
         * The password we should use for the connection.
         */
        password?: pulumi.Input<string>;
        /**
         * Max number of seconds for each dial attempt. 0 implies no maximum. Default value is 15 seconds.
         */
        perDialTimeout?: pulumi.Input<number>;
        /**
         * The port to connect to. Defaults to 22.
         */
        port?: pulumi.Input<number>;
        /**
         * The contents of an SSH key to use for the connection. This takes preference over the password if provided.
         */
        privateKey?: pulumi.Input<string>;
        /**
         * The password to use in case the private key is encrypted.
         */
        privateKeyPassword?: pulumi.Input<string>;
        /**
         * The connection settings for the bastion/proxy host.
         */
        proxy?: pulumi.Input<inputs.remote.ProxyConnectionArgs>;
        /**
         * The user that we should use for the connection.
         */
        user?: pulumi.Input<string>;
    }
    /**
     * connectionArgsProvideDefaults sets the appropriate defaults for ConnectionArgs
     */
    function connectionArgsProvideDefaults(val: ConnectionArgs): ConnectionArgs;
    /**
     * Instructions for how to connect to a remote endpoint via a bastion host.
     */
    interface ProxyConnectionArgs {
        /**
         * SSH Agent socket path. Default to environment variable SSH_AUTH_SOCK if present.
         */
        agentSocketPath?: pulumi.Input<string>;
        /**
         * Max allowed errors on trying to dial the remote host. -1 set count to unlimited. Default value is 10.
         */
        dialErrorLimit?: pulumi.Input<number>;
        /**
         * The address of the bastion host to connect to.
         */
        host: pulumi.Input<string>;
        /**
         * The password we should use for the connection to the bastion host.
         */
        password?: pulumi.Input<string>;
        /**
         * Max number of seconds for each dial attempt. 0 implies no maximum. Default value is 15 seconds.
         */
        perDialTimeout?: pulumi.Input<number>;
        /**
         * The port of the bastion host to connect to.
         */
        port?: pulumi.Input<number>;
        /**
         * The contents of an SSH key to use for the connection. This takes preference over the password if provided.
         */
        privateKey?: pulumi.Input<string>;
        /**
         * The password to use in case the private key is encrypted.
         */
        privateKeyPassword?: pulumi.Input<string>;
        /**
         * The user that we should use for the connection to the bastion host.
         */
        user?: pulumi.Input<string>;
    }
    /**
     * proxyConnectionArgsProvideDefaults sets the appropriate defaults for ProxyConnectionArgs
     */
    function proxyConnectionArgsProvideDefaults(val: ProxyConnectionArgs): ProxyConnectionArgs;
}
