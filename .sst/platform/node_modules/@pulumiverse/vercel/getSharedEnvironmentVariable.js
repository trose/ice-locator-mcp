"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSharedEnvironmentVariableOutput = exports.getSharedEnvironmentVariable = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about an existing Shared Environment Variable within Vercel.
 *
 * A Shared Environment Variable resource defines an Environment Variable that can be shared between multiple Vercel Projects.
 *
 * For more detailed information, please see the [Vercel documentation](https://vercel.com/docs/concepts/projects/environment-variables/shared-environment-variables).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const example = vercel.getSharedEnvironmentVariable({
 *     id: "xxxxxxxxxxxxxxx",
 * });
 * const exampleByKeyAndTarget = vercel.getSharedEnvironmentVariable({
 *     key: "MY_ENV_VAR",
 *     targets: [
 *         "production",
 *         "preview",
 *     ],
 * });
 * ```
 */
function getSharedEnvironmentVariable(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vercel:index/getSharedEnvironmentVariable:getSharedEnvironmentVariable", {
        "id": args.id,
        "key": args.key,
        "targets": args.targets,
        "teamId": args.teamId,
    }, opts);
}
exports.getSharedEnvironmentVariable = getSharedEnvironmentVariable;
/**
 * Provides information about an existing Shared Environment Variable within Vercel.
 *
 * A Shared Environment Variable resource defines an Environment Variable that can be shared between multiple Vercel Projects.
 *
 * For more detailed information, please see the [Vercel documentation](https://vercel.com/docs/concepts/projects/environment-variables/shared-environment-variables).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const example = vercel.getSharedEnvironmentVariable({
 *     id: "xxxxxxxxxxxxxxx",
 * });
 * const exampleByKeyAndTarget = vercel.getSharedEnvironmentVariable({
 *     key: "MY_ENV_VAR",
 *     targets: [
 *         "production",
 *         "preview",
 *     ],
 * });
 * ```
 */
function getSharedEnvironmentVariableOutput(args, opts) {
    return pulumi.output(args).apply((a) => getSharedEnvironmentVariable(a, opts));
}
exports.getSharedEnvironmentVariableOutput = getSharedEnvironmentVariableOutput;
//# sourceMappingURL=getSharedEnvironmentVariable.js.map