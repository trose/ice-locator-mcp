"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLogDrainOutput = exports.getLogDrain = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about an existing Log Drain.
 *
 * Log Drains collect all of your logs using a service specializing in storing app logs.
 *
 * Teams on Pro and Enterprise plans can subscribe to log drains that are generic and configurable from the Vercel dashboard without creating an integration. This allows you to use a HTTP service to receive logs through Vercel's log drains.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const example = vercel.getLogDrain({
 *     id: "lg_xxxxxxx_xxxxxx_xxxxx",
 * });
 * ```
 */
function getLogDrain(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vercel:index/getLogDrain:getLogDrain", {
        "endpoint": args.endpoint,
        "id": args.id,
        "teamId": args.teamId,
    }, opts);
}
exports.getLogDrain = getLogDrain;
/**
 * Provides information about an existing Log Drain.
 *
 * Log Drains collect all of your logs using a service specializing in storing app logs.
 *
 * Teams on Pro and Enterprise plans can subscribe to log drains that are generic and configurable from the Vercel dashboard without creating an integration. This allows you to use a HTTP service to receive logs through Vercel's log drains.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const example = vercel.getLogDrain({
 *     id: "lg_xxxxxxx_xxxxxx_xxxxx",
 * });
 * ```
 */
function getLogDrainOutput(args, opts) {
    return pulumi.output(args).apply((a) => getLogDrain(a, opts));
}
exports.getLogDrainOutput = getLogDrainOutput;
//# sourceMappingURL=getLogDrain.js.map