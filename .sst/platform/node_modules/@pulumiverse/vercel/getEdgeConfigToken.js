"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEdgeConfigTokenOutput = exports.getEdgeConfigToken = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about an existing Edge Config Token.
 *
 * An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.
 *
 * An Edge Config token is used to authenticate against an Edge Config's endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const test = vercel.getEdgeConfigToken({
 *     edgeConfigId: "ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
 *     token: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
 * });
 * ```
 */
function getEdgeConfigToken(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vercel:index/getEdgeConfigToken:getEdgeConfigToken", {
        "edgeConfigId": args.edgeConfigId,
        "teamId": args.teamId,
        "token": args.token,
    }, opts);
}
exports.getEdgeConfigToken = getEdgeConfigToken;
/**
 * Provides information about an existing Edge Config Token.
 *
 * An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.
 *
 * An Edge Config token is used to authenticate against an Edge Config's endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const test = vercel.getEdgeConfigToken({
 *     edgeConfigId: "ecfg_xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
 *     token: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
 * });
 * ```
 */
function getEdgeConfigTokenOutput(args, opts) {
    return pulumi.output(args).apply((a) => getEdgeConfigToken(a, opts));
}
exports.getEdgeConfigTokenOutput = getEdgeConfigTokenOutput;
//# sourceMappingURL=getEdgeConfigToken.js.map