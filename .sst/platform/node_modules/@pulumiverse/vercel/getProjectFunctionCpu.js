"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectFunctionCpuOutput = exports.getProjectFunctionCpu = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides information about a Project's Function CPU setting.
 *
 * This controls the maximum amount of CPU utilization your Serverless Functions can use while executing. Standard is optimal for most frontend workloads. You can override this per function using the vercel.json file.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const exampleProject = vercel.getProject({
 *     name: "example",
 * });
 * const exampleProjectFunctionCpu = exampleProject.then(exampleProject => vercel.getProjectFunctionCpu({
 *     projectId: exampleProject.id,
 * }));
 * ```
 */
function getProjectFunctionCpu(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vercel:index/getProjectFunctionCpu:getProjectFunctionCpu", {
        "projectId": args.projectId,
        "teamId": args.teamId,
    }, opts);
}
exports.getProjectFunctionCpu = getProjectFunctionCpu;
/**
 * Provides information about a Project's Function CPU setting.
 *
 * This controls the maximum amount of CPU utilization your Serverless Functions can use while executing. Standard is optimal for most frontend workloads. You can override this per function using the vercel.json file.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumi/vercel";
 *
 * const exampleProject = vercel.getProject({
 *     name: "example",
 * });
 * const exampleProjectFunctionCpu = exampleProject.then(exampleProject => vercel.getProjectFunctionCpu({
 *     projectId: exampleProject.id,
 * }));
 * ```
 */
function getProjectFunctionCpuOutput(args, opts) {
    return pulumi.output(args).apply((a) => getProjectFunctionCpu(a, opts));
}
exports.getProjectFunctionCpuOutput = getProjectFunctionCpuOutput;
//# sourceMappingURL=getProjectFunctionCpu.js.map