import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an Attack Challenge Mode resource.
 *
 * Attack Challenge Mode prevent malicious traffic by showing a verification challenge for every visitor.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vercel from "@pulumiverse/vercel";
 *
 * const exampleProject = new vercel.Project("exampleProject", {});
 * const exampleAttackChallengeMode = new vercel.AttackChallengeMode("exampleAttackChallengeMode", {
 *     projectId: exampleProject.id,
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * You can import via the team_id and project_id.
 *
 * - team_id can be found in the team `settings` tab in the Vercel UI.
 *
 * - project_id can be found in the project `settings` tab in the Vercel UI.
 *
 * ```sh
 * $ pulumi import vercel:index/attackChallengeMode:AttackChallengeMode example team_xxxxxxxxxxxxxxxxxxxxxxxx/prj_xxxxxxxxxxxxxxxxxxxxxxxxxxxx
 * ```
 */
export declare class AttackChallengeMode extends pulumi.CustomResource {
    /**
     * Get an existing AttackChallengeMode resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttackChallengeModeState, opts?: pulumi.CustomResourceOptions): AttackChallengeMode;
    /**
     * Returns true if the given object is an instance of AttackChallengeMode.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AttackChallengeMode;
    /**
     * Whether Attack Challenge Mode is enabled or not.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The ID of the Project to adjust the CPU for.
     */
    readonly projectId: pulumi.Output<string>;
    /**
     * The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    readonly teamId: pulumi.Output<string>;
    /**
     * Create a AttackChallengeMode resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttackChallengeModeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AttackChallengeMode resources.
 */
export interface AttackChallengeModeState {
    /**
     * Whether Attack Challenge Mode is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Project to adjust the CPU for.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AttackChallengeMode resource.
 */
export interface AttackChallengeModeArgs {
    /**
     * Whether Attack Challenge Mode is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The ID of the Project to adjust the CPU for.
     */
    projectId: pulumi.Input<string>;
    /**
     * The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
