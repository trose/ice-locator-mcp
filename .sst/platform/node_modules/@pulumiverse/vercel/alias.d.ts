import * as pulumi from "@pulumi/pulumi";
/**
 * Provides an Alias resource.
 *
 * An Alias allows a `vercel.Deployment` to be accessed through a different URL.
 */
export declare class Alias extends pulumi.CustomResource {
    /**
     * Get an existing Alias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AliasState, opts?: pulumi.CustomResourceOptions): Alias;
    /**
     * Returns true if the given object is an instance of Alias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Alias;
    /**
     * The Alias we want to assign to the deployment defined in the URL.
     */
    readonly alias: pulumi.Output<string>;
    /**
     * The id of the Deployment the Alias should be associated with.
     */
    readonly deploymentId: pulumi.Output<string>;
    /**
     * The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    readonly teamId: pulumi.Output<string>;
    /**
     * Create a Alias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Alias resources.
 */
export interface AliasState {
    /**
     * The Alias we want to assign to the deployment defined in the URL.
     */
    alias?: pulumi.Input<string>;
    /**
     * The id of the Deployment the Alias should be associated with.
     */
    deploymentId?: pulumi.Input<string>;
    /**
     * The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Alias resource.
 */
export interface AliasArgs {
    /**
     * The Alias we want to assign to the deployment defined in the URL.
     */
    alias: pulumi.Input<string>;
    /**
     * The id of the Deployment the Alias should be associated with.
     */
    deploymentId: pulumi.Input<string>;
    /**
     * The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
