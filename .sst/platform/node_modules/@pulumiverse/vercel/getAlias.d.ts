import * as pulumi from "@pulumi/pulumi";
/**
 * Provides information about an existing Alias resource.
 *
 * An Alias allows a `vercel.Deployment` to be accessed through a different URL.
 */
export declare function getAlias(args: GetAliasArgs, opts?: pulumi.InvokeOptions): Promise<GetAliasResult>;
/**
 * A collection of arguments for invoking getAlias.
 */
export interface GetAliasArgs {
    /**
     * The Alias or Alias ID to be retrieved.
     */
    alias: string;
    /**
     * The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: string;
}
/**
 * A collection of values returned by getAlias.
 */
export interface GetAliasResult {
    /**
     * The Alias or Alias ID to be retrieved.
     */
    readonly alias: string;
    /**
     * The ID of the Deployment the Alias is associated with.
     */
    readonly deploymentId: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    readonly teamId: string;
}
/**
 * Provides information about an existing Alias resource.
 *
 * An Alias allows a `vercel.Deployment` to be accessed through a different URL.
 */
export declare function getAliasOutput(args: GetAliasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAliasResult>;
/**
 * A collection of arguments for invoking getAlias.
 */
export interface GetAliasOutputArgs {
    /**
     * The Alias or Alias ID to be retrieved.
     */
    alias: pulumi.Input<string>;
    /**
     * The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has not been set in the provider.
     */
    teamId?: pulumi.Input<string>;
}
